import{_ as i,o as l,c as e,a}from"./app-E-cEvfoH.js";const r="/assets/microfrontend-ALHx4Zib.jpg",t={},n=a('<h1 id="微前端" tabindex="-1"><a class="header-anchor" href="#微前端" aria-hidden="true">#</a> 微前端</h1><h2 id="即拆功能-拆模块" tabindex="-1"><a class="header-anchor" href="#即拆功能-拆模块" aria-hidden="true">#</a> 即拆功能，拆模块，</h2><ul><li>如果单纯用组件去堆，可能会出现问题。</li><li>增加一个新功能成本最低，高内聚低耦合，更好地应对变化</li><li>其他人也想用</li><li>其他人的部件添加进来</li><li>项目技术栈迁移</li></ul><h2 id="借鉴后端微服务的思想-拷贝到前端-先拆后合。后端微服务的思想在前端的映射" tabindex="-1"><a class="header-anchor" href="#借鉴后端微服务的思想-拷贝到前端-先拆后合。后端微服务的思想在前端的映射" aria-hidden="true">#</a> 借鉴后端微服务的思想，拷贝到前端，先拆后合。后端微服务的思想在前端的映射</h2><p><img src="'+r+'" alt="微前端"></p><ul><li><p>前端各个模块给出一个个接口，给输入输出即可，不关心内部</p></li><li><p>优点</p><ul><li>隔离</li><li>弹性/扩展性</li><li>增强稳定性</li><li>降低成本</li></ul></li><li><p>网盘思路</p><ul><li>参照windows系统，需要什么功能就安装什么功能</li></ul></li></ul>',6),s=[n];function c(d,o){return l(),e("div",null,s)}const u=i(t,[["render",c],["__file","weiqianduan.html.vue"]]);export{u as default};
