import{_ as n,o as s,c as a,a as t}from"./app-E-cEvfoH.js";const p={},o=t(`<h1 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h1><h2 id="postman-模拟发送请求" tabindex="-1"><a class="header-anchor" href="#postman-模拟发送请求" aria-hidden="true">#</a> postman 模拟发送请求</h2><h2 id="caniuse-api各浏览器兼容性问题" tabindex="-1"><a class="header-anchor" href="#caniuse-api各浏览器兼容性问题" aria-hidden="true">#</a> caniuse api各浏览器兼容性问题</h2><h2 id="mock" tabindex="-1"><a class="header-anchor" href="#mock" aria-hidden="true">#</a> mock</h2><h3 id="vue-cli项目中使用mock-js" tabindex="-1"><a class="header-anchor" href="#vue-cli项目中使用mock-js" aria-hidden="true">#</a> vue-cli项目中使用mock.js</h3><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h4><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>cnpm install mockjs axios --save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// mock.js</span>
<span class="token comment">// 获取mock对象</span>
<span class="token keyword">const</span> Mock <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mockjs&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// 随机生成各种数据</span>
<span class="token keyword">const</span> Random <span class="token operator">=</span> Mock<span class="token punctuation">.</span>Random 
<span class="token comment">// 如果需要基础域名</span>
<span class="token keyword">const</span> domain <span class="token operator">=</span> <span class="token string">&#39;http://mockjs.com/api&#39;</span> 
<span class="token comment">// 设置返回状态码</span>
<span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token number">200</span> <span class="token comment">// 返回的状态码</span>

<span class="token keyword">import</span> warning <span class="token keyword">from</span> <span class="token string">&#39;./warning&#39;</span>

<span class="token comment">// 随机生成文章数据</span>
<span class="token keyword">const</span> <span class="token function-variable function">getArticleList</span> <span class="token operator">=</span> <span class="token parameter">req</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 请求体，用于获取参数</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span> 
  <span class="token keyword">const</span> <span class="token punctuation">{</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">}</span><span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token comment">//post方式传参，get方式需要解析req.url</span>
  <span class="token keyword">let</span> articleList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> article <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token comment">// 随机生成标题(长度为10-25)</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token function">csentence</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
      <span class="token comment">// 随机生成图片(大小250x250)</span>
      <span class="token literal-property property">icon</span><span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token function">dataImage</span><span class="token punctuation">(</span><span class="token string">&#39;250x250&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;文章icon&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
      <span class="token comment">// 随机生成名字</span>
      <span class="token literal-property property">author</span><span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token function">cname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
      <span class="token comment">// 随机生成日期(年月日 + 时间)</span>
      <span class="token literal-property property">date</span><span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> Random<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
    <span class="token punctuation">}</span>
    articleList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    code<span class="token punctuation">,</span>
    articleList
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 请求地址，类型，接口函数（url可以使用以下两种方法）</span>
<span class="token comment">// url为字符串(需要完全匹配请求的url，只要引入了mock，优先使用mock)</span>
Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>domain<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/getArticleList</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> getArticleList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// url为正则表达式(匹配即可进入接口)</span>
Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/Warning\\/Warning</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>warning<span class="token punctuation">.</span>warning<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// warning.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">warning</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> region <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>body<span class="token punctuation">)</span>
        <span class="token keyword">let</span> result<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token literal-property property">IsSuccess</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token literal-property property">Message</span><span class="token operator">:</span><span class="token string">&#39;查询成功&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">List</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="引入数据" tabindex="-1"><a class="header-anchor" href="#引入数据" aria-hidden="true">#</a> 引入数据</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// main.js</span>
<span class="token keyword">import</span> Mock <span class="token keyword">from</span> <span class="token string">&#39;./mock&#39;</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token comment">// 如果配置的url是字符串，最后的请求url需和配置文件中相同</span>
axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> <span class="token string">&#39;http://mockjs.com/api&#39;</span>
<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$http <span class="token operator">=</span> axios
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/getArticleList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h4><ul><li>code101错误 <ul><li>传的参数不一一对应，解构时出错。</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm install mockjs axios <span class="token operator">--</span>save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// mock.js</span>
<span class="token keyword">const</span> Mock <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mockjs&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 获取mock对象</span>
<span class="token keyword">const</span> Random <span class="token operator">=</span> Mock<span class="token punctuation">.</span>Random <span class="token comment">// 获取random对象，随机生成各种数据，具体请翻阅文档</span>
<span class="token keyword">const</span> domain <span class="token operator">=</span> <span class="token string">&#39;http://mockjs.com/api&#39;</span> <span class="token comment">// 定义默认域名，随便写</span>
<span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token number">200</span> <span class="token comment">// 返回的状态码</span>

<span class="token comment">// 随机生成文章数据</span>
<span class="token keyword">const</span> <span class="token function-variable function">postData</span> <span class="token operator">=</span> <span class="token parameter">req</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span> <span class="token comment">// 请求体，用于获取参数</span>

  <span class="token keyword">let</span> posts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 用于存放文章数据的数组</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> post <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token function">csentence</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 随机生成长度为10-25的标题</span>
      <span class="token literal-property property">icon</span><span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token function">dataImage</span><span class="token punctuation">(</span><span class="token string">&#39;250x250&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;文章icon&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 随机生成大小为250x250的图片链接</span>
      <span class="token literal-property property">author</span><span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token function">cname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 随机生成名字</span>
      <span class="token literal-property property">date</span><span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> Random<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 随机生成年月日 + 时间</span>
    <span class="token punctuation">}</span>

    posts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>post<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 返回状态码和文章数据posts</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    code<span class="token punctuation">,</span>
    posts
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 定义请求链接，类型，还有返回数据</span>
Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>domain<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/posts</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> postData<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// main.js</span>
<span class="token keyword">import</span> Mock <span class="token keyword">from</span> <span class="token string">&#39;./mock&#39;</span> <span class="token comment">// 刚刚手写的mock.js文件</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span> <span class="token comment">// axios http请求库</span>

axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> <span class="token string">&#39;http://mockjs.com/api&#39;</span> <span class="token comment">// 设置默认请求的url</span>
<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$http <span class="token operator">=</span> axios
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 组件</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/posts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="xlsx" tabindex="-1"><a class="header-anchor" href="#xlsx" aria-hidden="true">#</a> xlsx</h2><h3 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1" aria-hidden="true">#</a> 安装</h3><ul><li>npm install xlsx</li></ul><h3 id="导入" tabindex="-1"><a class="header-anchor" href="#导入" aria-hidden="true">#</a> 导入</h3><ul><li>import XLSX from &#39;xlsx&#39;;</li></ul><h3 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1" aria-hidden="true">#</a> 使用</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> read_opts<span class="token punctuation">)</span> attempts to parse data<span class="token punctuation">.</span>
<span class="token keyword">let</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
reader<span class="token punctuation">.</span><span class="token function">readAsBinaryString</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
    <span class="token keyword">let</span> sheet <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;binary&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Sheets<span class="token punctuation">.</span>Sheet1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="类型" tabindex="-1"><a class="header-anchor" href="#类型" aria-hidden="true">#</a> 类型</h4><p>type expected input &quot;base64&quot; string: Base64 encoding of the file &quot;binary&quot; string: binary string (byte n is data.charCodeAt(n)) &quot;string&quot; string: JS string (characters interpreted as UTF8) &quot;buffer&quot; nodejs Buffer &quot;array&quot; array: array of 8-bit unsigned int (byte n is data[n]) &quot;file&quot; string: path of file that will be read (nodejs only)</p><h4 id="单元格对象" tabindex="-1"><a class="header-anchor" href="#单元格对象" aria-hidden="true">#</a> 单元格对象</h4><p>|v|原始值（有关详细信息，请参阅数据类型部分）| |w|格式化文本（如果适用）| |t|type：b布尔值，e错误，n数字，d日期，s文本，z存根| |f|单元格公式编码为A1样式的字符串（如果适用），如果公式是数组公式，则F范围的封闭数组（如果适用）| |r|富文本编码（如果适用）| |h|富文本的HTML呈现（如果适用）| |c|与单元格相关的评论| |l|cell超链接对象（.Target保存链接，.Tooltip是工具提示）| |s|单元格的样式/主题（如果适用）|</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token doc-comment comment">/**
 * file2JSON.js
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">file</span> 文件流
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">fieldArr</span> 列名数组
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">sheetName</span> sheet名
 */</span>
<span class="token keyword">import</span> <span class="token constant">XLSX</span> <span class="token keyword">from</span> <span class="token string">&#39;xlsx&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">file2JSON</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span>fieldArr<span class="token punctuation">,</span>sheetName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//取出数据</span>
            <span class="token keyword">let</span> data <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
            <span class="token keyword">let</span> sheet <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;binary&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>sheetName<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> sheet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sheet<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>v<span class="token punctuation">)</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sheet<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//按列数分组</span>
            <span class="token keyword">let</span> columnNum<span class="token operator">=</span>fieldArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token keyword">let</span> arrList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> i <span class="token operator">+=</span> columnNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                arrList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> columnNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            arrList<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//包装成对象</span>
            <span class="token keyword">let</span> newArrList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            arrList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">outerItem<span class="token punctuation">,</span> outerIndex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> newOuterItem <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                outerItem<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    newOuterItem<span class="token punctuation">[</span>fieldArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                newArrList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newOuterItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>newArrList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsBinaryString</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> file2JSON<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token constant">XLSX</span> <span class="token keyword">from</span> <span class="token string">&#39;xlsx&#39;</span>

<span class="token keyword">let</span> spread<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token comment">// 展开嵌套一层JSON</span>
    <span class="token function">count</span><span class="token punctuation">(</span><span class="token parameter">jsonArr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        jsonArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">regionItem<span class="token punctuation">,</span>regionIndex</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>regionItem<span class="token punctuation">.</span>CampusList<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                regionItem<span class="token punctuation">.</span>CampusList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">campusItem<span class="token punctuation">,</span>campusIndex</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token keyword">let</span> row<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>Campus<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>Campus<span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>DailyWatchCount<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>DailyWatchCount<span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>MothlyWatchCount<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>MothlyWatchCount<span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>WatchCount<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>WatchCount<span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>PassRateCount<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>PassRateCount<span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>NoCount<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>NoCount<span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>CampusPassRate<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>CampusPassRate<span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>CampusRank<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>CampusRank<span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>Regions<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>Regions<span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>RegionPassRate<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>RegionPassRate<span class="token punctuation">;</span>
                    row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>count<span class="token punctuation">.</span>Rank<span class="token punctuation">]</span><span class="token operator">=</span>regionItem<span class="token punctuation">.</span>Rank<span class="token punctuation">;</span>
                    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">noPassList</span><span class="token punctuation">(</span><span class="token parameter">jsonArr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        jsonArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">regionItem<span class="token punctuation">,</span>regionIndex</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>regionItem<span class="token punctuation">.</span>Region<span class="token operator">!==</span><span class="token string">&quot;汇总&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>regionItem<span class="token punctuation">.</span>Campus<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    regionItem<span class="token punctuation">.</span>Campus<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">campusItem<span class="token punctuation">,</span>campusIndex</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                        <span class="token keyword">let</span> row<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span>campusItem<span class="token punctuation">.</span>Campus<span class="token operator">===</span><span class="token string">&quot;汇总&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// 校区汇总</span>
                            row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>Region<span class="token punctuation">]</span><span class="token operator">=</span>regionItem<span class="token punctuation">.</span>Region<span class="token punctuation">;</span>
                            row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>Campus<span class="token punctuation">]</span><span class="token operator">=</span>regionItem<span class="token punctuation">.</span>Campus<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Campus<span class="token punctuation">;</span>
                            row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>Name<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;汇总&quot;</span><span class="token punctuation">;</span>
                            row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>ForgottenDay<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>ForgottenDay<span class="token punctuation">;</span>
                            row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>NoPassDay<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>NoPassDay<span class="token punctuation">;</span>
                            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token comment">// 校区人员</span>
                            campusItem<span class="token punctuation">.</span>NoPassList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">noPassItem<span class="token punctuation">,</span>noPassIndex</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                                row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>Region<span class="token punctuation">]</span><span class="token operator">=</span>regionItem<span class="token punctuation">.</span>Region<span class="token punctuation">;</span>
                                row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>Campus<span class="token punctuation">]</span><span class="token operator">=</span>campusItem<span class="token punctuation">.</span>Campus<span class="token punctuation">;</span>
                                row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>Name<span class="token punctuation">]</span><span class="token operator">=</span>noPassItem<span class="token punctuation">.</span>Name<span class="token punctuation">;</span>
                                row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>ForgottenDay<span class="token punctuation">]</span><span class="token operator">=</span>noPassItem<span class="token punctuation">.</span>ForgottenDay<span class="token punctuation">;</span>
                                row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>NoPassDay<span class="token punctuation">]</span><span class="token operator">=</span>noPassItem<span class="token punctuation">.</span>NoPassDay<span class="token punctuation">;</span>
                                result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span><span class="token punctuation">)</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token comment">// 大区汇总</span>
                <span class="token keyword">let</span> row<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>Region<span class="token punctuation">]</span><span class="token operator">=</span>regionItem<span class="token punctuation">.</span>Region<span class="token punctuation">;</span>
                row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>Campus<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;汇总&quot;</span><span class="token punctuation">;</span>
                row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>Name<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;汇总&quot;</span><span class="token punctuation">;</span>
                row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>ForgottenDay<span class="token punctuation">]</span><span class="token operator">=</span>regionItem<span class="token punctuation">.</span>ForgottenDay<span class="token punctuation">;</span>
                row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>noPassList<span class="token punctuation">.</span>NoPassDay<span class="token punctuation">]</span><span class="token operator">=</span>regionItem<span class="token punctuation">.</span>NoPassDay<span class="token punctuation">;</span>
                result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">detail</span><span class="token punctuation">(</span><span class="token parameter">jsonArr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        jsonArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> row<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>Address<span class="token punctuation">]</span><span class="token operator">=</span>item<span class="token punctuation">.</span>Address<span class="token punctuation">;</span>
            row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>Time<span class="token punctuation">]</span><span class="token operator">=</span>item<span class="token punctuation">.</span>Time<span class="token punctuation">;</span>
            row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>Name<span class="token punctuation">]</span><span class="token operator">=</span>item<span class="token punctuation">.</span>Name<span class="token punctuation">;</span>
            row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>IsForgottenCheck<span class="token punctuation">]</span><span class="token operator">=</span>item<span class="token punctuation">.</span>IsForgottenCheck<span class="token punctuation">;</span>
            row<span class="token punctuation">[</span>header<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>IsNoCheck<span class="token punctuation">]</span><span class="token operator">=</span>item<span class="token punctuation">.</span>IsNoCheck<span class="token punctuation">;</span>
            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> header<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;count&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token string-property property">&quot;Campus&quot;</span><span class="token operator">:</span><span class="token string">&quot;涉及校区&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;DailyWatchCount&quot;</span><span class="token operator">:</span><span class="token string">&quot;计划每天巡检次数&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;MothlyWatchCount&quot;</span><span class="token operator">:</span><span class="token string">&quot;计划每月巡检天数&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;WatchCount&quot;</span><span class="token operator">:</span><span class="token string">&quot;计划巡检次数&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;PassRateCount&quot;</span><span class="token operator">:</span><span class="token string">&quot;手机巡检合格次数&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;NoCount&quot;</span><span class="token operator">:</span><span class="token string">&quot;漏检次数&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;CampusPassRate&quot;</span><span class="token operator">:</span><span class="token string">&quot;巡检合格率&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;CampusRank&quot;</span><span class="token operator">:</span><span class="token string">&quot;全校排名&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;Regions&quot;</span><span class="token operator">:</span><span class="token string">&quot;区域合格率&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;RegionPassRate&quot;</span><span class="token operator">:</span><span class="token string">&quot;区域合格率&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;Rank&quot;</span><span class="token operator">:</span><span class="token string">&quot;区域排名&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;noPassList&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token string-property property">&quot;Region&quot;</span><span class="token operator">:</span><span class="token string">&quot;大区&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;Campus&quot;</span><span class="token operator">:</span><span class="token string">&quot;校区&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;Name&quot;</span><span class="token operator">:</span><span class="token string">&quot;计划巡检人员&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;ForgottenDay&quot;</span><span class="token operator">:</span><span class="token string">&quot;漏检（天）&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;NoPassDay&quot;</span><span class="token operator">:</span><span class="token string">&quot;未检（天）&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;detail&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token string-property property">&quot;Address&quot;</span><span class="token operator">:</span><span class="token string">&quot;名字&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;Time&quot;</span><span class="token operator">:</span><span class="token string">&quot;计划时间&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;Name&quot;</span><span class="token operator">:</span><span class="token string">&quot;计划巡检人员&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;IsForgottenCheck&quot;</span><span class="token operator">:</span><span class="token string">&quot;漏检&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;IsNoCheck&quot;</span><span class="token operator">:</span><span class="token string">&quot;未检&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">exportJsonToExcel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dataArr<span class="token punctuation">,</span>type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataArr<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>dataArr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 定义导出的格式类型</span>
    <span class="token keyword">const</span> wopts <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">bookType</span><span class="token operator">:</span> <span class="token string">&#39;xlsx&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">bookSST</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;binary&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> wb <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">SheetNames</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Sheet1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">Sheets</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">Props</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// 转成单页(Sheet)数据</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">json_to_sheet</span><span class="token punctuation">(</span>spread<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">(</span>dataArr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// </span>

    <span class="token comment">// 合并单元格</span>
    <span class="token comment">// let merges=[];</span>
    <span class="token comment">// data[&quot;!merges&quot;]=merges;</span>

    wb<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span><span class="token string">&#39;Sheet1&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>
    <span class="token function">saveAs</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">s2ab</span><span class="token punctuation">(</span><span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> wopts<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;application/octet-stream&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>wopts<span class="token punctuation">.</span>bookType<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token comment">// 导出excel</span>
<span class="token keyword">const</span> <span class="token function-variable function">saveAs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> fileName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> tmpa <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    tmpa<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName <span class="token operator">||</span> <span class="token string">&quot;下载&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 绑定a标签</span>
    <span class="token keyword">const</span> href <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    tmpa<span class="token punctuation">.</span>href <span class="token operator">=</span> href<span class="token punctuation">;</span>
    <span class="token comment">// 模拟点击实现下载</span>
    tmpa<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token comment">// 延时释放</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//用URL.revokeObjectURL()来释放这个object URL</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">s2ab</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> ArrayBuffer <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> view<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> buf<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> buf<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> buf<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">export</span> <span class="token keyword">default</span> exportJsonToExcel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33),e=[o];function c(u,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","other.html.vue"]]);export{r as default};
