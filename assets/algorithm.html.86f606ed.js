import{_ as r,r as i,o as k,c as d,b as s,e as n,w as p,d as a,a as e}from"./app.e4556a3b.js";var v="/assets/17_telephone_keypad.e78766ac.png",m="/assets/divisor.57f4ea5d.jpg",b="/assets/sort1.b53ce91d.jpg",g="/assets/queue1.d93a2162.png",f="/assets/quicksort.64699c85.png",h="/assets/quick-sort.7779a11d.png",y="/assets/symmetric-binary-tree.f6bf665c.png",w="/assets/heap.0654a94f.jpg",x="/assets/heapsort.9e266f29.jpg",j="/assets/toMaxDui.83ebe948.png",_="/assets/robot_maze.0d20ad91.png",q="/assets/robot-path.7f341e71.png",A="/assets/optimal-path1.eb0fb426.png",N="/assets/optimal-path1.eb0fb426.png",M="/assets/optimal-path3.7ce8a6d9.png";const P={},C=s("h1",{id:"\u524D\u7AEF\u7B97\u6CD5",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u524D\u7AEF\u7B97\u6CD5","aria-hidden":"true"},"#"),a(" \u524D\u7AEF\u7B97\u6CD5")],-1),R={class:"table-of-contents"},L=a("\u9762\u8BD5\u7B97\u6CD5\u8003\u70B9"),S=a("\u73AF\u5883\u642D\u5EFA"),F=a("\u57FA\u7840\u7B97\u6CD5-\u5B57\u7B26\u4E32"),E=a("\u2460 \u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5355\u8BCD III"),Q=a("\u2461 \u8BA1\u6570\u4E8C\u8FDB\u5236\u5B50\u4E32"),T=a("\u57FA\u7840\u7B97\u6CD5-\u6570\u7EC4"),H=a("\u2462 \u516C\u5F0F\u8FD0\u7B97\uFF08\u7535\u8BDD\u53F7\u7801\u7684\u7EC4\u5408\uFF09"),I=a("\u2463 \u5F52\u7C7B\u8FD0\u7B97\uFF08\u5361\u724C\u5206\u7EC4\uFF09"),B=a("\u2464 \u7B5B\u9009\u8FD0\u7B97\uFF08\u79CD\u82B1\u95EE\u9898\uFF09"),G=a("\u2465 \u4E8C\u8FDB\u5236\u8FD0\u7B97\uFF08\u683C\u96F7\u7F16\u7801\uFF09"),O=a("\u6B63\u5219\u8868\u8FBE\u5F0F"),z=a("\u2466 \u91CD\u590D\u7684\u5B50\u5B57\u7B26\u4E32"),D=a("\u6392\u5E8F\u7C7B"),$=a("\u2468 \u5192\u6CE1\u6392\u5E8F\uFF08\u5148\u628A\u6700\u5927\u503C\u5192\u51FA\u6765\uFF0C\u518D\u628A\u5012\u6570\u7B2C\u4E8C\u5927\u7684\u5192\u51FA\u6765\uFF0C\u4EE5\u6B64\u7C7B\u63A8"),W=a("\u57FA\u7840\u7B97\u6CD5\u4E4B\u9012\u5F52\u7C7B"),X=a("\u6570\u636E\u7ED3\u6784\u4E4B\u6808"),U=a("\u2470 \u68D2\u7403\u6BD4\u8D5B"),K=a("\u6570\u636E\u7ED3\u6784\u4E4B\u961F\u5217"),V=a("\u2472 \u8BBE\u8BA1\u5FAA\u73AF\u961F\u5217"),J=a("\u6570\u636E\u7ED3\u6784\u4E4B\u94FE\u8868"),Z=a("\u3251 \u6392\u5E8F\u94FE\u8868"),Y=a("\u6570\u636E\u7ED3\u6784\u4E4B\u77E9\u9635"),nn=a("\u3253 \u87BA\u65CB\u77E9\u9635"),sn=a("\u8FDB\u9636\u7B97\u6CD5\uFF08\u601D\u60F3\uFF09"),an=a("\u8FDB\u9636\u7B97\u6CD5\u4E4B\u8D2A\u5FC3\u7B97\u6CD5"),pn=a("\u8FDB\u9636\u7B97\u6CD5\u4E4B\u52A8\u6001\u89C4\u5212"),tn=a("\u325D \u4E0D\u540C\u8DEF\u5F84II"),en=a("\u325E K\u7AD9\u4E2D\u8F6C\u5185\u6700\u4FBF\u5B9C\u7684\u822A\u73ED"),on=a("\u3010\u9762\u8BD5\u9898\u3011"),cn=a(`\u30107\u3011\u627E\u51FA\u4E00\u4E2A\u957F\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED\u91CD\u590D\u6B21\u6570\u6700\u591A\u7684\u5B57\u7B26\uFF0C\u5982\uFF1A\u5728"nddemdereeeffetcssssfggddregg"\u4E2D's'\u91CD\u590D\u51FA\u73B0\u6B21\u6570(4)\u6B21\u6700\u591A\uFF0C\u56E0\u6B64's'\u4E3A\u8FDE\u7EED\u91CD\u590D\u51FA\u73B0\u6700\u957F\u7684\u5B57\u7B26\u3002`),ln=a("\u301010\u3011\u5B9E\u73B0\u4E00\u4E2Apromise\u5EF6\u8FDF\u5BF9\u8C61 defer"),un=a("\u301011\u3011\u5982\u4F55\u7EC8\u6B62promise\u94FE\uFF1F"),rn=a("\u301012\u3011Promise.all"),kn=a("\u301013\u3011Promise.race"),dn=a("\u301014\u3011\u5982\u4F55\u7EC8\u6B62\u4E00\u4E2Apromise(\u4E2D\u65ADpromise) promise\u8D85\u65F6"),vn=e(`<ul><li>leetcode\u5237\u9898</li></ul><h2 id="\u9762\u8BD5\u7B97\u6CD5\u8003\u70B9" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u7B97\u6CD5\u8003\u70B9" aria-hidden="true">#</a> \u9762\u8BD5\u7B97\u6CD5\u8003\u70B9</h2><ul><li>\u89C1\u591A\u8BC6\u5E7F\uFF08\u6BCF\u4E2A\u7C7B\u578B\u90FD\u8981\u80FD\u8BF4\u51FA\u4E00\u4E8C\u4E09\u6765\uFF0C\u5177\u4F53\u7EC6\u8282\u4E0D\u8981\u7EA0\u7ED3\uFF09</li><li>\u53CD\u5E94\u8FC5\u901F\uFF08\u5FEB\u901F\u7528js\u5B9E\u73B0\u51FA\u6765\u6808\uFF0C\u961F\u5217\u7B49\uFF09</li><li>\u5C31\u7B97\u7ACB\u9A6C\u5199\u4E0D\u51FA\u6765\uFF0C\u81F3\u5C11\u5FEB\u901F\u8BF4\u51FA\u601D\u8DEF</li></ul><h2 id="\u73AF\u5883\u642D\u5EFA" tabindex="-1"><a class="header-anchor" href="#\u73AF\u5883\u642D\u5EFA" aria-hidden="true">#</a> \u73AF\u5883\u642D\u5EFA</h2><ul><li>\u4E0B\u8F7D\u6E90\u7801(.babelrc .eslintrc.js package.json)</li><li>npm instll</li><li>\u4F7F\u7528\u6E90\u7801 <ul><li>master\u5206\u652F\uFF1A\u73AF\u5883\u642D\u5EFA\u539F\u59CB\u5185\u5BB9(git checkout master)</li><li>dev\u5206\u652F\uFF1A\u6240\u6709\u6E90\u7801(git checkout dev)</li></ul></li><li>\u68C0\u9A8C\u4EE3\u7801\u662F\u5426\u6B63\u5E38 <code>npm test</code></li></ul><h2 id="\u57FA\u7840\u7B97\u6CD5-\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u7B97\u6CD5-\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u57FA\u7840\u7B97\u6CD5-\u5B57\u7B26\u4E32</h2><h3 id="_1-\u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5355\u8BCD-iii" tabindex="-1"><a class="header-anchor" href="#_1-\u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5355\u8BCD-iii" aria-hidden="true">#</a> \u2460 \u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5355\u8BCD III</h3><p>\u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u4F60\u9700\u8981\u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u6BCF\u4E2A\u5355\u8BCD\u7684\u5B57\u7B26\u987A\u5E8F\uFF0C\u540C\u65F6\u4ECD\u4FDD\u7559\u7A7A\u683C\u548C\u5355\u8BCD\u7684\u521D\u59CB\u987A\u5E8F\u3002</p><p>\u793A\u4F8B\xA01:</p><p>\u8F93\u5165: &quot;Let&#39;s take LeetCode contest&quot; \u8F93\u51FA: &quot;s&#39;teL ekat edoCteeL tsetnoc&quot;\xA0 \u6CE8\u610F\uFF1A\u5728\u5B57\u7B26\u4E32\u4E2D\uFF0C\u6BCF\u4E2A\u5355\u8BCD\u7531\u5355\u4E2A\u7A7A\u683C\u5206\u9694\uFF0C\u5E76\u4E14\u5B57\u7B26\u4E32\u4E2D\u4E0D\u4F1A\u6709\u4EFB\u4F55\u989D\u5916\u7684\u7A7A\u683C\u3002</p><ul><li>\u6CE8\u610F\u70B9 <ul><li>\u8BA9\u4EE3\u7801\u66F4\u52A0\u4F18\u96C5\uFF08\u4E0D\u8981\u4EA7\u751F\u591A\u4F59\u7684\u53D8\u91CF\uFF09</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">reverseWords</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">reverseWords</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F53\u73B0\u51FAsplit\u4E24\u79CD\u7528\u6CD5\u90FD\u6E05\u695A</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">reverseWords</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528match\u6765\u505A\uFF08\u5927\u4E8E\u4E00\u4E2A\u5355\u8BCD\u6216\u8005&#39;\u7684\u96C6\u5408\u7684\u6570\u7EC4\uFF09</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\w&#39;]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">reverseWords</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u91CD\u5199\u4EE5\u4E0A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\S]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u8BA1\u6570\u4E8C\u8FDB\u5236\u5B50\u4E32" tabindex="-1"><a class="header-anchor" href="#_2-\u8BA1\u6570\u4E8C\u8FDB\u5236\u5B50\u4E32" aria-hidden="true">#</a> \u2461 \u8BA1\u6570\u4E8C\u8FDB\u5236\u5B50\u4E32</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32 <span class="token function">s\uFF0C\u8BA1\u7B97\u5177\u6709\u76F8\u540C\u6570\u91CF0\u548C1\u7684\u975E\u7A7A</span><span class="token punctuation">(</span>\u8FDE\u7EED<span class="token punctuation">)</span>\u5B50\u5B57\u7B26\u4E32\u7684\u6570\u91CF\uFF0C\u5E76\u4E14\u8FD9\u4E9B\u5B50\u5B57\u7B26\u4E32\u4E2D\u7684\u6240\u6709<span class="token number">0</span>\u548C\u6240\u6709<span class="token number">1</span>\u90FD\u662F\u7EC4\u5408\u5728\u4E00\u8D77\u7684\u3002

\u91CD\u590D\u51FA\u73B0\u7684\u5B50\u4E32\u8981\u8BA1\u7B97\u5B83\u4EEC\u51FA\u73B0\u7684\u6B21\u6570\u3002

\u793A\u4F8B <span class="token number">1</span> <span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token string">&quot;00110011&quot;</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token number">6</span>
<span class="token literal-property property">\u89E3\u91CA</span><span class="token operator">:</span> \u6709<span class="token number">6</span>\u4E2A\u5B50\u4E32\u5177\u6709\u76F8\u540C\u6570\u91CF\u7684\u8FDE\u7EED<span class="token number">1</span>\u548C<span class="token number">0</span>\uFF1A\u201C<span class="token number">0011</span>\u201D\uFF0C\u201C<span class="token number">01</span>\u201D\uFF0C\u201C<span class="token number">1100</span>\u201D\uFF0C\u201C<span class="token number">10</span>\u201D\uFF0C\u201C<span class="token number">0011</span>\u201D \u548C \u201C<span class="token number">01</span>\u201D\u3002

\u8BF7\u6CE8\u610F\uFF0C\u4E00\u4E9B\u91CD\u590D\u51FA\u73B0\u7684\u5B50\u4E32\u8981\u8BA1\u7B97\u5B83\u4EEC\u51FA\u73B0\u7684\u6B21\u6570\u3002

\u53E6\u5916\uFF0C\u201C<span class="token number">00110011</span>\u201D\u4E0D\u662F\u6709\u6548\u7684\u5B50\u4E32\uFF0C\u56E0\u4E3A\u6240\u6709\u7684<span class="token number">0</span>\uFF08\u548C<span class="token number">1</span>\uFF09\u6CA1\u6709\u7EC4\u5408\u5728\u4E00\u8D77\u3002
\u793A\u4F8B <span class="token number">2</span> <span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token string">&quot;10101&quot;</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token number">4</span>
<span class="token literal-property property">\u89E3\u91CA</span><span class="token operator">:</span> \u6709<span class="token number">4</span>\u4E2A\u5B50\u4E32\uFF1A\u201C<span class="token number">10</span>\u201D\uFF0C\u201C<span class="token number">01</span>\u201D\uFF0C\u201C<span class="token number">10</span>\u201D\uFF0C\u201C<span class="token number">01</span>\u201D\uFF0C\u5B83\u4EEC\u5177\u6709\u76F8\u540C\u6570\u91CF\u7684\u8FDE\u7EED<span class="token number">1</span>\u548C<span class="token number">0</span>\u3002
\u6CE8\u610F\uFF1A

s<span class="token punctuation">.</span>length \u5728<span class="token number">1</span>\u5230<span class="token number">50</span><span class="token punctuation">,</span><span class="token number">000</span>\u4E4B\u95F4\u3002
s \u53EA\u5305\u542B\u201C<span class="token number">0</span>\u201D\u6216\u201C<span class="token number">1</span>\u201D\u5B57\u7B26\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5199\u51FA\u6240\u6709\u60C5\u51B5\uFF0C\u7136\u540E\u627E\u51FA\u89C4\u5F8B <ul><li>00110011---&gt;0011</li><li>0110011 ---&gt;01</li><li>110011 ---&gt;1100</li><li>10011 ---&gt;10</li><li>0011 ---&gt;0011</li><li>011 ---&gt;01</li><li>11 ---&gt;</li><li>1 ---&gt;</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">countBinarySubstrings</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u5EFA\u7ACB\u6570\u636E\u7ED3\u6784\uFF0C\u5806\u6808\uFF0C\u4FDD\u5B58\u6570\u636E</span>
    <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// \u7ED9\u4E00\u4E2A\u5B57\u7B26\u4E32\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u5B50\u4E32</span>
    <span class="token keyword">let</span> <span class="token function-variable function">match</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> j <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(0+|1+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token comment">// \u4E0E\u8FD0\u7B971\u53D80\uFF0C0\u53D81</span>
      <span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token punctuation">(</span>j<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>j<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
      <span class="token comment">// \u6B63\u5219\u5BF9\u8C61\u4E2D\u53EF\u4EE5\u4F7F\u7528\u6A21\u677F\u5B57\u7B26\u4E32\u6765\u7528\u53D8\u91CF</span>
      <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">^(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>j<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>o<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u8FD4\u56DE\u5339\u914D\u5230\u7684\u7B2C\u4E00\u4E2A\u7ED3\u679C</span>
          <span class="token keyword">return</span> RegExp<span class="token punctuation">.</span>$1
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4F9D\u6B21\u628A\u6700\u524D\u9762\u7684\u6570\u5B57\u53BB\u6389</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> sub <span class="token operator">=</span> <span class="token function">match</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sub<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> r
<span class="token punctuation">}</span>
<span class="token function">countBinarySubstrings</span><span class="token punctuation">(</span><span class="token string">&#39;00101&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u77E5\u8BC6\u70B9 <ul><li>slice</li><li>match</li><li>repeat</li><li>push</li><li>RegExp</li></ul></li></ul><h2 id="\u57FA\u7840\u7B97\u6CD5-\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u7B97\u6CD5-\u6570\u7EC4" aria-hidden="true">#</a> \u57FA\u7840\u7B97\u6CD5-\u6570\u7EC4</h2>`,21),mn=e('<h3 id="_3-\u516C\u5F0F\u8FD0\u7B97-\u7535\u8BDD\u53F7\u7801\u7684\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#_3-\u516C\u5F0F\u8FD0\u7B97-\u7535\u8BDD\u53F7\u7801\u7684\u7EC4\u5408" aria-hidden="true">#</a> \u2462 \u516C\u5F0F\u8FD0\u7B97\uFF08\u7535\u8BDD\u53F7\u7801\u7684\u7EC4\u5408\uFF09</h3><p>\u7ED9\u5B9A\u4E00\u4E2A\u4EC5\u5305\u542B\u6570\u5B57\xA02-9\xA0\u7684\u5B57\u7B26\u4E32\uFF0C\u8FD4\u56DE\u6240\u6709\u5B83\u80FD\u8868\u793A\u7684\u5B57\u6BCD\u7EC4\u5408\u3002</p><p>\u7ED9\u51FA\u6570\u5B57\u5230\u5B57\u6BCD\u7684\u6620\u5C04\u5982\u4E0B\uFF08\u4E0E\u7535\u8BDD\u6309\u952E\u76F8\u540C\uFF09\u3002\u6CE8\u610F 1 \u4E0D\u5BF9\u5E94\u4EFB\u4F55\u5B57\u6BCD\u3002</p><p><img src="'+v+`" alt="\u7535\u8BDD\u53F7\u7801\u7EC4\u5408"></p><p>\u793A\u4F8B:</p><p>\u8F93\u5165\uFF1A&quot;23&quot; \u8F93\u51FA\uFF1A[&quot;ad&quot;, &quot;ae&quot;, &quot;af&quot;, &quot;bd&quot;, &quot;be&quot;, &quot;bf&quot;, &quot;cd&quot;, &quot;ce&quot;, &quot;cf&quot;]. \u8BF4\u660E: \u5C3D\u7BA1\u4E0A\u9762\u7684\u7B54\u6848\u662F\u6309\u5B57\u5178\u5E8F\u6392\u5217\u7684\uFF0C\u4F46\u662F\u4F60\u53EF\u4EE5\u4EFB\u610F\u9009\u62E9\u7B54\u6848\u8F93\u51FA\u7684\u987A\u5E8F\u3002</p><ul><li>\u627E\u51FA\u89C4\u5F8B\uFF1A\u53EA\u8981\u524D\u4E24\u9879\u5408\u5E76\u597D,\u66FF\u4EE3\u539F\u6765\u6570\u7EC4\uFF0C\u518D\u7EE7\u7EED\u548C\u540E\u9762\u5408\u5E76</li><li>\u5199\u51FA\u7A0B\u5E8F\u4F2A\u4EE3\u7801</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5BF9\u8F93\u5165\u505A\u5904\u7406\uFF0C\u5982\u679C\u5C0F\u4E8E1\u8FD4\u56DE\u7A7A\uFF08LeetCode\u6D4B\u8BD5\u7528\u4F8B\uFF09</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5EFA\u7ACB\u7535\u8BDD\u53F7\u7801\u952E\u76D8\u6620\u5C04</span>
  <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;def&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ghi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;jkl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mno&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pqrs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tuv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;wxyz&#39;</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5982\u679C\u53EA\u7ED9\u4E86\u4E00\u4E2A\u6309\u952E\uFF0C\u76F4\u63A5\u628A\u6309\u952E\u5185\u5BB9\u53D6\u51FA\u6765\u5E76\u6309\u5355\u4E2A\u5B57\u7B26\u5206\u7EC4\u5C31\u53EF\u4EE5\u4E86\uFF08LeetCode\u6D4B\u8BD5\u7528\u4F8B\uFF09</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> map<span class="token punctuation">[</span>str<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u628A\u8F93\u5165\u5B57\u7B26\u4E32\u6309\u5355\u5B57\u7B26\u5206\u9694\u53D8\u6210\u6570\u7EC4\uFF0C234=&gt;[2,3,4]</span>
  <span class="token keyword">let</span> num <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u4FDD\u5B58\u952E\u76D8\u6620\u5C04\u540E\u7684\u5B57\u6BCD\u5185\u5BB9\uFF0C\u5982 23=&gt;[&#39;abc&#39;,&#39;def&#39;]</span>
  <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  num<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      code<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> <span class="token function-variable function">comb</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E34\u65F6\u53D8\u91CF\u7528\u6765\u4FDD\u5B58\u524D\u4E24\u4E2A\u7EC4\u5408\u7684\u7ED3\u679C</span>
    <span class="token keyword">let</span> tmp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// \u6700\u5916\u5C42\u7684\u5FAA\u73AF\u662F\u904D\u5386\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u91CC\u5C42\u7684\u5FAA\u73AF\u662F\u904D\u5386\u7B2C\u4E8C\u4E2A\u5143\u7D20</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> il <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> il<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> jl <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> jl<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        tmp<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> tmp<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">comb</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> tmp
    <span class="token punctuation">}</span>
    <span class="token comment">// \u51FD\u6570\u4F53\u5E94\u8BE5\u8FD4\u56DE\u7B2C\u4E00\u4E2A\uFF0C\u6700\u7EC8\u53EA\u5269\u4E00\u4E2A</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">comb</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),bn=e(`<h3 id="_4-\u5F52\u7C7B\u8FD0\u7B97-\u5361\u724C\u5206\u7EC4" tabindex="-1"><a class="header-anchor" href="#_4-\u5F52\u7C7B\u8FD0\u7B97-\u5361\u724C\u5206\u7EC4" aria-hidden="true">#</a> \u2463 \u5F52\u7C7B\u8FD0\u7B97\uFF08\u5361\u724C\u5206\u7EC4\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u7ED9\u5B9A\u4E00\u526F\u724C\uFF0C\u6BCF\u5F20\u724C\u4E0A\u90FD\u5199\u7740\u4E00\u4E2A\u6574\u6570\u3002

\u6B64\u65F6\uFF0C\u4F60\u9700\u8981\u9009\u5B9A\u4E00\u4E2A\u6570\u5B57 <span class="token constant">X</span>\uFF0C\u4F7F\u6211\u4EEC\u53EF\u4EE5\u5C06\u6574\u526F\u724C\u6309\u4E0B\u8FF0\u89C4\u5219\u5206\u6210 <span class="token number">1</span> \u7EC4\u6216\u66F4\u591A\u7EC4\uFF1A

\u6BCF\u7EC4\u90FD\u6709 <span class="token constant">X</span> \u5F20\u724C\u3002
\u7EC4\u5185\u6240\u6709\u7684\u724C\u4E0A\u90FD\u5199\u7740\u76F8\u540C\u7684\u6574\u6570\u3002
\u4EC5\u5F53\u4F60\u53EF\u9009\u7684 <span class="token constant">X</span> <span class="token operator">&gt;=</span> <span class="token number">2</span> \u65F6\u8FD4\u56DE <span class="token boolean">true</span>\u3002

 

\u793A\u4F8B <span class="token number">1</span>\uFF1A

\u8F93\u5165\uFF1A<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token boolean">true</span>
\u89E3\u91CA\uFF1A\u53EF\u884C\u7684\u5206\u7EC4\u662F <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>\uFF0C<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>\uFF0C<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>\uFF0C<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
\u793A\u4F8B <span class="token number">2</span>\uFF1A

\u8F93\u5165\uFF1A<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token boolean">false</span>
\u89E3\u91CA\uFF1A\u6CA1\u6709\u6EE1\u8DB3\u8981\u6C42\u7684\u5206\u7EC4\u3002
\u793A\u4F8B <span class="token number">3</span>\uFF1A

\u8F93\u5165\uFF1A<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token boolean">false</span>
\u89E3\u91CA\uFF1A\u6CA1\u6709\u6EE1\u8DB3\u8981\u6C42\u7684\u5206\u7EC4\u3002
\u793A\u4F8B <span class="token number">4</span>\uFF1A

\u8F93\u5165\uFF1A<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token boolean">true</span>
\u89E3\u91CA\uFF1A\u53EF\u884C\u7684\u5206\u7EC4\u662F <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
\u793A\u4F8B <span class="token number">5</span>\uFF1A

\u8F93\u5165\uFF1A<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token boolean">true</span>
\u89E3\u91CA\uFF1A\u53EF\u884C\u7684\u5206\u7EC4\u662F <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>\uFF0C<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>\uFF0C<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>

\u63D0\u793A\uFF1A

<span class="token number">1</span> <span class="token operator">&lt;=</span> deck<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">10000</span>
<span class="token number">0</span> <span class="token operator">&lt;=</span> deck<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">10000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u770B\u9898\u76EE <ul><li>\u7B54\u6848\u90FD\u662F\u6392\u5E8F\u7684\uFF0C\u6240\u4EE5\u9700\u8981\u5148\u6392\u5E8F</li><li>\u76F8\u540C\u6570\u5B57\u8FC7\u591A\u9700\u8981\u62C6\u5206\uFF0C\u662F\u6700\u5927\u516C\u7EA6\u6570\u5373\u53EF <img src="`+m+'" alt="\u6700\u5927\u516C\u7EA6\u6570"></li></ul></li></ul>',3),gn=a("\u6700\u5927\u516C\u7EA6\u6570\uFF1Agcd(a,b) = gcd(b,a mod b)"),fn=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// </span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token comment">// \u6C42\u6700\u5927\u516C\u7EA6\u6570</span>
  <span class="token keyword">let</span> <span class="token function-variable function">gcd</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> a
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">gcd</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>a<span class="token operator">%</span>b<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token comment">//   \u5361\u724C\u6392\u5E8F\uFF0C\u6392\u5E8F\u7684\u76EE\u7684\u5C31\u662F\u4E3A\u4E86\u8BA9\u76F8\u540C\u7684\u724C\u6392\u5728\u4E00\u8D77\u65B9\u4FBF\u6211\u4EEC\u5206\u7EC4</span>
  <span class="token keyword">let</span> str<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u5206\u7EC4(\u5355\u5F20\u6216\u8005\u591A\u5F20)</span>
  <span class="token keyword">let</span> group<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d)\\1+|\\d</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>group<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> a<span class="token operator">=</span>group<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length
    <span class="token keyword">let</span> b<span class="token operator">=</span>group<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length
    <span class="token keyword">let</span> v<span class="token operator">=</span><span class="token function">gcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>v<span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token comment">// \u7ED3\u679C\u653E\u8FDB\u53BB\u8DDF\u4E0B\u4E00\u4E2A\u6BD4</span>
      group<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> group<span class="token punctuation">.</span>length<span class="token operator">?</span>group<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">1</span><span class="token operator">:</span><span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">hasGroupsSizeX</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">deck</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">let</span> minLen <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span>
  <span class="token keyword">let</span> result

  <span class="token comment">// \u5361\u724C\u6309\u503C\u5206\u7EC4</span>
  deck<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      map<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    map<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
  <span class="token comment">// \u83B7\u53D6\u6570\u91CF\u6700\u5C11\u7684\u5361\u724C\u6570\u91CF</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&lt;</span> minLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      minLen <span class="token operator">=</span> map<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">.</span>length
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span>minLen <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4ECE\u6BCF\u7EC42\u5F20\u5F00\u59CB\u67E5\u770B\u80FD\u5426\u5206\u7EC4\uFF0C\u80FD\u5206\u7EC4\u5219\u8FD4\u56DEtrue </span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> minLen<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> <span class="token boolean">true</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">%</span> i <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">hasGroupsSizeX</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">deck</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7EDF\u8BA1\u6570\u5B57\u4E2A\u6570</span>
    <span class="token keyword">const</span> numMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> deck<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>numMap<span class="token punctuation">[</span>deck<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            numMap<span class="token punctuation">[</span>deck<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            numMap<span class="token punctuation">[</span>deck<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">++</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> valuesArr <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>numMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&gt;</span> b <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token comment">// console.log(&#39;valuesArr&#39;, valuesArr)</span>
    <span class="token comment">// \u4E5F\u5C31\u662F\u8BF4\u6700\u5927\u516C\u7EA6\u6570\u5F97\u5927\u4E8E 1</span>
    <span class="token keyword">return</span> <span class="token operator">!</span>valuesArr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token function">gcd</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> valuesArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span> value <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u6B27\u91CC\u51E0\u5FB7\u7B97\u6CD5\uFF0C\u8F97\u8F6C\u76F8\u9664\u6CD5\u3002</span>
<span class="token keyword">function</span> <span class="token function">gcd</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> r <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>a <span class="token operator">%</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">gcd</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-\u7B5B\u9009\u8FD0\u7B97-\u79CD\u82B1\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_5-\u7B5B\u9009\u8FD0\u7B97-\u79CD\u82B1\u95EE\u9898" aria-hidden="true">#</a> \u2464 \u7B5B\u9009\u8FD0\u7B97\uFF08\u79CD\u82B1\u95EE\u9898\uFF09</h3>`,4),hn=a("\u6CE8\u610Fmax\u52A01\u65F6\u8981\u8BB0\u5F97\u90A3\u5757\u5730\u53D8\u62101"),yn=e(` \`\`\`js \u5047\u8BBE\u4F60\u6709\u4E00\u4E2A\u5F88\u957F\u7684\u82B1\u575B\uFF0C\u4E00\u90E8\u5206\u5730\u5757\u79CD\u690D\u4E86\u82B1\uFF0C\u53E6\u4E00\u90E8\u5206\u5374\u6CA1\u6709\u3002\u53EF\u662F\uFF0C\u82B1\u5349\u4E0D\u80FD\u79CD\u690D\u5728\u76F8\u90BB\u7684\u5730\u5757\u4E0A\uFF0C\u5B83\u4EEC\u4F1A\u4E89\u593A\u6C34\u6E90\uFF0C\u4E24\u8005\u90FD\u4F1A\u6B7B\u53BB\u3002 <p>\u7ED9\u5B9A\u4E00\u4E2A\u82B1\u575B\uFF08\u8868\u793A\u4E3A\u4E00\u4E2A\u6570\u7EC4\u5305\u542B0\u548C1\uFF0C\u5176\u4E2D0\u8868\u793A\u6CA1\u79CD\u690D\u82B1\uFF0C1\u8868\u793A\u79CD\u690D\u4E86\u82B1\uFF09\uFF0C\u548C\u4E00\u4E2A\u6570\xA0n\xA0\u3002\u80FD\u5426\u5728\u4E0D\u6253\u7834\u79CD\u690D\u89C4\u5219\u7684\u60C5\u51B5\u4E0B\u79CD\u5165\xA0n\xA0\u6735\u82B1\uFF1F\u80FD\u5219\u8FD4\u56DETrue\uFF0C\u4E0D\u80FD\u5219\u8FD4\u56DEFalse\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: flowerbed = [1,0,0,0,1], n = 1 \u8F93\u51FA: True \u793A\u4F8B 2:</p><p>\u8F93\u5165: flowerbed = [1,0,0,0,1], n = 2 \u8F93\u51FA: False \u6CE8\u610F:</p><p>\u6570\u7EC4\u5185\u5DF2\u79CD\u597D\u7684\u82B1\u4E0D\u4F1A\u8FDD\u53CD\u79CD\u690D\u89C4\u5219\u3002 \u8F93\u5165\u7684\u6570\u7EC4\u957F\u5EA6\u8303\u56F4\u4E3A [1, 20000]\u3002 n \u662F\u975E\u8D1F\u6574\u6570\uFF0C\u4E14\u4E0D\u4F1A\u8D85\u8FC7\u8F93\u5165\u6570\u7EC4\u7684\u5927\u5C0F\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u6280\u5DE7\uFF1A\u628A\u8F93\u5165\u8FB9\u957F

\`\`\`js
// \u573A\u666F\u4E00
[0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1]
// \u573A\u666F\u4E8C
[1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1]
[0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u95EE\u9898\uFF1A <ul><li>\u8FB9\u754C\u95EE\u9898\uFF08\u524D\u540E\u52A0\u4E2A0\u53EF\u89E3\u51B3\uFF09</li><li>\u6761\u4EF6010 [0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1] +1 | |</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">flowerbed<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    flowerbed<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    flowerbed<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> len<span class="token operator">=</span>flowerbed<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>flowerbed<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> flowerbed<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> flowerbed<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            flowerbed<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            max<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> max <span class="token operator">&gt;=</span> n
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u603B\u7ED3 <ul><li>\u5B66\u4F1A\u95EE\u9898\u62BD\u8C61</li><li>\u5B66\u4F1A\u6570\u5B66\u5EFA\u6A21\u601D\u60F3</li><li>\u5B66\u4F1A\u52A8\u6001\u8F93\u5165\uFF08\u591A\u627E\u8F93\u5165\uFF0C\u800C\u4E0D\u662F\u901A\u8FC7\u8BE5\u4EE3\u7801\uFF09</li></ul></li></ul><h3 id="_6-\u4E8C\u8FDB\u5236\u8FD0\u7B97-\u683C\u96F7\u7F16\u7801" tabindex="-1"><a class="header-anchor" href="#_6-\u4E8C\u8FDB\u5236\u8FD0\u7B97-\u683C\u96F7\u7F16\u7801" aria-hidden="true">#</a> \u2465 \u4E8C\u8FDB\u5236\u8FD0\u7B97\uFF08\u683C\u96F7\u7F16\u7801\uFF09</h3>`,11),wn=a("1. parseInt(num,2)\u8F6C\u6362\u4E8C\u8FDB\u5236\u4E3A\u5341\u8FDB\u5236"),xn=s("br",null,null,-1),jn=a("2. \u6CE8\u610F\u4E24\u4E2A\u8FDE\u7EED\u7684\u6570\u503C\u4EC5\u6709\u4E00\u4E2A\u4F4D\u6570\u7684\u5DEE\u5F02"),_n=e(` \`\`\`js \u683C\u96F7\u7F16\u7801\u662F\u4E00\u4E2A\u4E8C\u8FDB\u5236\u6570\u5B57\u7CFB\u7EDF\uFF0C\u5728\u8BE5\u7CFB\u7EDF\u4E2D\uFF0C\u4E24\u4E2A\u8FDE\u7EED\u7684\u6570\u503C\u4EC5\u6709\u4E00\u4E2A\u4F4D\u6570\u7684\u5DEE\u5F02\u3002 <p>\u7ED9\u5B9A\u4E00\u4E2A\u4EE3\u8868\u7F16\u7801\u603B\u4F4D\u6570\u7684\u975E\u8D1F\u6574\u6570 n\uFF0C\u6253\u5370\u5176\u683C\u96F7\u7F16\u7801\u5E8F\u5217\u3002\u683C\u96F7\u7F16\u7801\u5E8F\u5217\u5FC5\u987B\u4EE5 0 \u5F00\u5934\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165:\xA02 \u8F93\u51FA:\xA0[0,1,3,2] \u89E3\u91CA: 00 - 0 01 - 1 11 - 3 10 - 2</p><p>\u5BF9\u4E8E\u7ED9\u5B9A\u7684\xA0n\uFF0C\u5176\u683C\u96F7\u7F16\u7801\u5E8F\u5217\u5E76\u4E0D\u552F\u4E00\u3002 \u4F8B\u5982\uFF0C[0,2,3,1]\xA0\u4E5F\u662F\u4E00\u4E2A\u6709\u6548\u7684\u683C\u96F7\u7F16\u7801\u5E8F\u5217\u3002</p><p>00 - 0 10 - 2 11 - 3 01 - 1 \u793A\u4F8B\xA02:</p><p>\u8F93\u5165:\xA00 \u8F93\u51FA:\xA0[0] \u89E3\u91CA: \u6211\u4EEC\u5B9A\u4E49\u683C\u96F7\u7F16\u7801\u5E8F\u5217\u5FC5\u987B\u4EE5 0 \u5F00\u5934\u3002 \xA0 \u7ED9\u5B9A\u7F16\u7801\u603B\u4F4D\u6570\u4E3A n \u7684\u683C\u96F7\u7F16\u7801\u5E8F\u5217\uFF0C\u5176\u957F\u5EA6\u4E3A 2n\u3002\u5F53 n = 0 \u65F6\uFF0C\u957F\u5EA6\u4E3A 20 = 1\u3002 \xA0 \u56E0\u6B64\uFF0C\u5F53 n = 0 \u65F6\uFF0C\u5176\u683C\u96F7\u7F16\u7801\u5E8F\u5217\u4E3A [0]\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>![\u683C\u96F7\u7F16\u7801](./img/Gray.jpg)
\`\`\`js
export default (n)=&gt;{
  // \u9012\u5F52\u51FD\u6570\uFF0C\u7528\u6765\u7B97\u8F93\u5165\u4E3An\u7684\u683C\u96F7\u7F16\u7801\u5E8F\u5217
  let gray = function(n){
    if( n === 1){
      return [&#39;0&#39;,&#39;1&#39;];
    } else {
      let prev = gray(n-1);
      let res = [];
      let max = Math.pow(2,n)-1;
      for(let i =0;i&lt;prev.length;i++){
        res[i] = \`0\${prev[i]}\`;
        res[max - i] = \`1\${prev[i]}\`;
      }
      return res;
    }
  }
  if(n === 0){
    return [0]
  }
  var res = gray(n);
  return res.map(item =&gt; {
    return parseInt(item,2)
  })
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">grayCode</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">let</span> temp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
              arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
              <span class="token keyword">continue</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          
          
          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                  <span class="token keyword">let</span> num<span class="token operator">=</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>j<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  temp<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
          arr<span class="token operator">=</span>temp<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u53D1\u73B0\u89C4\u5F8B\uFF0C\u52A8\u6001\u8F93\u5165</li></ul><h2 id="\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u6B63\u5219\u8868\u8FBE\u5F0F</h2><h3 id="_7-\u91CD\u590D\u7684\u5B50\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_7-\u91CD\u590D\u7684\u5B50\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u2466 \u91CD\u590D\u7684\u5B50\u5B57\u7B26\u4E32</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u7ED9\u5B9A\u4E00\u4E2A\u975E\u7A7A\u7684\u5B57\u7B26\u4E32\uFF0C\u5224\u65AD\u5B83\u662F\u5426\u53EF\u4EE5\u7531\u5B83\u7684\u4E00\u4E2A\u5B50\u4E32\u91CD\u590D\u591A\u6B21\u6784\u6210\u3002\u7ED9\u5B9A\u7684\u5B57\u7B26\u4E32\u53EA\u542B\u6709\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD\uFF0C\u5E76\u4E14\u957F\u5EA6\u4E0D\u8D85\u8FC7<span class="token number">10000</span>\u3002

\u793A\u4F8B <span class="token number">1</span><span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token string">&quot;abab&quot;</span>

<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> True

<span class="token literal-property property">\u89E3\u91CA</span><span class="token operator">:</span> \u53EF\u7531\u5B50\u5B57\u7B26\u4E32 <span class="token string">&quot;ab&quot;</span> \u91CD\u590D\u4E24\u6B21\u6784\u6210\u3002
\u793A\u4F8B <span class="token number">2</span><span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token string">&quot;aba&quot;</span>

<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> False
\u793A\u4F8B <span class="token number">3</span><span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token string">&quot;abcabcabcabc&quot;</span>

<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> True

<span class="token literal-property property">\u89E3\u91CA</span><span class="token operator">:</span> \u53EF\u7531\u5B50\u5B57\u7B26\u4E32 <span class="token string">&quot;abc&quot;</span> <span class="token function">\u91CD\u590D\u56DB\u6B21\u6784\u6210\u3002</span> <span class="token punctuation">(</span>\u6216\u8005\u5B50\u5B57\u7B26\u4E32 <span class="token string">&quot;abcabc&quot;</span> \u91CD\u590D\u4E24\u6B21\u6784\u6210\u3002<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u7528\u6B63\u5219\u53BB\u505A /^(\\w+)\\1+$/\u5373\u4E3A\u5BF9\u5E94\u6B63\u5219\u8868\u8FBE\u5F0F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> reg<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\w+)\\1+$</span><span class="token regex-delimiter">/</span></span>
    <span class="token keyword">return</span> reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),qn=e(` ### \u2467\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D \`\`\`js \u7ED9\u4F60\u4E00\u4E2A\u5B57\u7B26\u4E32\xA0s\xA0\u548C\u4E00\u4E2A\u5B57\u7B26\u89C4\u5F8B\xA0p\uFF0C\u8BF7\u4F60\u6765\u5B9E\u73B0\u4E00\u4E2A\u652F\u6301 &#39;.&#39;\xA0\u548C\xA0&#39;*&#39;\xA0\u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u3002 <p>&#39;.&#39; \u5339\u914D\u4EFB\u610F\u5355\u4E2A\u5B57\u7B26 &#39;*&#39; \u5339\u914D\u96F6\u4E2A\u6216\u591A\u4E2A\u524D\u9762\u7684\u90A3\u4E00\u4E2A\u5143\u7D20 \u6240\u8C13\u5339\u914D\uFF0C\u662F\u8981\u6DB5\u76D6\xA0\u6574\u4E2A\xA0\u5B57\u7B26\u4E32\xA0s\u7684\uFF0C\u800C\u4E0D\u662F\u90E8\u5206\u5B57\u7B26\u4E32\u3002</p><p>\u8BF4\u660E:</p><p>s\xA0\u53EF\u80FD\u4E3A\u7A7A\uFF0C\u4E14\u53EA\u5305\u542B\u4ECE\xA0a-z\xA0\u7684\u5C0F\u5199\u5B57\u6BCD\u3002 p\xA0\u53EF\u80FD\u4E3A\u7A7A\uFF0C\u4E14\u53EA\u5305\u542B\u4ECE\xA0a-z\xA0\u7684\u5C0F\u5199\u5B57\u6BCD\uFF0C\u4EE5\u53CA\u5B57\u7B26\xA0.\xA0\u548C\xA0*\u3002 \u793A\u4F8B 1:</p><p>\u8F93\u5165: s = &quot;aa&quot; p = &quot;a&quot; \u8F93\u51FA: false \u89E3\u91CA: &quot;a&quot; \u65E0\u6CD5\u5339\u914D &quot;aa&quot; \u6574\u4E2A\u5B57\u7B26\u4E32\u3002 \u793A\u4F8B 2:</p><p>\u8F93\u5165: s = &quot;aa&quot; p = &quot;a*&quot; \u8F93\u51FA: true \u89E3\u91CA:\xA0\u56E0\u4E3A &#39;*&#39; \u4EE3\u8868\u53EF\u4EE5\u5339\u914D\u96F6\u4E2A\u6216\u591A\u4E2A\u524D\u9762\u7684\u90A3\u4E00\u4E2A\u5143\u7D20, \u5728\u8FD9\u91CC\u524D\u9762\u7684\u5143\u7D20\u5C31\u662F &#39;a&#39;\u3002\u56E0\u6B64\uFF0C\u5B57\u7B26\u4E32 &quot;aa&quot; \u53EF\u88AB\u89C6\u4E3A &#39;a&#39; \u91CD\u590D\u4E86\u4E00\u6B21\u3002 \u793A\u4F8B\xA03:</p><p>\u8F93\u5165: s = &quot;ab&quot; p = &quot;.<em>&quot; \u8F93\u51FA: true \u89E3\u91CA:\xA0&quot;.</em>&quot; \u8868\u793A\u53EF\u5339\u914D\u96F6\u4E2A\u6216\u591A\u4E2A\uFF08&#39;*&#39;\uFF09\u4EFB\u610F\u5B57\u7B26\uFF08&#39;.&#39;\uFF09\u3002 \u793A\u4F8B 4:</p><p>\u8F93\u5165: s = &quot;aab&quot; p = &quot;c<em>a</em>b&quot; \u8F93\u51FA: true \u89E3\u91CA:\xA0\u56E0\u4E3A &#39;*&#39; \u8868\u793A\u96F6\u4E2A\u6216\u591A\u4E2A\uFF0C\u8FD9\u91CC &#39;c&#39; \u4E3A 0 \u4E2A, &#39;a&#39; \u88AB\u91CD\u590D\u4E00\u6B21\u3002\u56E0\u6B64\u53EF\u4EE5\u5339\u914D\u5B57\u7B26\u4E32 &quot;aab&quot;\u3002 \u793A\u4F8B 5:</p><p>\u8F93\u5165: s = &quot;mississippi&quot; p = &quot;mis<em>is</em>p*.&quot; \u8F93\u51FA: false</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u4E00\u4E2A\u5B57\u7B26\u4E00\u4E2A\u5B57\u7B26\u5BF9\u6BD4\uFF0C\u5BF9\u6BD4\u5B8C\u4E00\u4E2A\u6254\u6389\u4E00\u7EC4\uFF0C\u7136\u540E\u91CD\u590D\u521A\u624D\u7684\u52A8\u4F5C
- \u4E09\u79CD\u60C5\u51B5\uFF1A\u65E0\u6A21\u5F0F\uFF0C\u6709\u6A21\u5F0F*,\u6709\u6A21\u5F0F.

\`\`\`js
export default (s,p)=&gt;{
    let isMatch=(s,p)=&gt;{
        // \u8FB9\u754C\u60C5\u51B5\uFF0C\u5982\u679Cs\u548Cp\u90FD\u4E3A\u7A7A\uFF0C\u8BF4\u660E\u5904\u7406\u7ED3\u675F\uFF0C\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse
        if(p.length&lt;=0){
            return !s.length
        }
        // \u5224\u65ADp\u6A21\u5F0F\u5B57\u7B26\u4E32\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u548Cs\u5B57\u7B26\u4E32\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u662F\u4E0D\u662F\u5339\u914D
        let match=false
        if(s.length&gt;0&amp;&amp;(p[0]===s[0]||p[0]===&#39;.&#39;)){
            match=true
        }
        // p\u6709\u6A21\u5F0F\u7684\uFF0C\u5B57\u7B26\u540E\u9762\u6709*
        if(p.length&gt;1&amp;&amp;p[1]===&#39;*&#39;){
            // \u7B2C\u4E00\u79CD\u60C5\u51B5\uFF1As*\u5339\u914D0\u4E2A\u5B57\u7B26
            // \u7B2C\u4E8C\u79CD\u60C5\u51B5\uFF1As*\u5339\u914D1\u4E2A\u5B57\u7B26\uFF0C\u9012\u5F52\u4E0B\u53BB\uFF0C\u7528\u6765\u8868\u793As*\u5339\u914D\u591A\u4E2As
            return isMatch(s,p.slice(2))||(match &amp;&amp; isMatch(s.slice(1),p))
        }else{// \u5B57\u7B26\u540E\u9762\u6CA1\u6709*
            return match &amp;&amp; isMatch(s.slice(1),p.slice(1))
        }
    }
    return isMatch(s,p)
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6392\u5E8F\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u7C7B" aria-hidden="true">#</a> \u6392\u5E8F\u7C7B</h2><p><img src="`+b+'" alt="\u5404\u7C7B\u6392\u5E8F"></p><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6 <ul><li>\u8FD0\u884C\u7684\u6B21\u6570(\u5E38\u6570\uFF1AO(1)\uFF0C\u7EBF\u6027\u5173\u7CFBO(n),\u500D\u6570\u5173\u7CFB\uFF1AO(n*2))</li></ul></li><li>\u7A7A\u95F4\u590D\u6742\u5EA6 <ul><li>\u5360\u7528\u7684\u5185\u5B58(\u5E38\u6570\uFF1Ao1,\u7EBF\u6027\u5173\u7CFBO(n),\u500D\u6570\u5173\u7CFBO(n*2))</li></ul></li></ul><h3 id="_9-\u5192\u6CE1\u6392\u5E8F-\u5148\u628A\u6700\u5927\u503C\u5192\u51FA\u6765-\u518D\u628A\u5012\u6570\u7B2C\u4E8C\u5927\u7684\u5192\u51FA\u6765-\u4EE5\u6B64\u7C7B\u63A8" tabindex="-1"><a class="header-anchor" href="#_9-\u5192\u6CE1\u6392\u5E8F-\u5148\u628A\u6700\u5927\u503C\u5192\u51FA\u6765-\u518D\u628A\u5012\u6570\u7B2C\u4E8C\u5927\u7684\u5192\u51FA\u6765-\u4EE5\u6B64\u7C7B\u63A8" aria-hidden="true">#</a> \u2468 \u5192\u6CE1\u6392\u5E8F\uFF08\u5148\u628A\u6700\u5927\u503C\u5192\u51FA\u6765\uFF0C\u518D\u628A\u5012\u6570\u7B2C\u4E8C\u5927\u7684\u5192\u51FA\u6765\uFF0C\u4EE5\u6B64\u7C7B\u63A8</h3><p>\u8DDF\u540E\u4E00\u4E2A\u5143\u7D20\u5BF9\u6BD4\uFF0C\u5982\u679C\u8F83\u5927\uFF0C\u5C31\u4EA4\u6362\uFF0C\u4E00\u76F4\u628A\u6700\u5927\u7684\u6362\u5230\u6700\u540E\u4E00\u4E2A\uFF0C\u7136\u540E\u91CD\u590Dlength-1\u6B21\u3002</p>',15),An=["src"],Nn=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// \u76F8\u90BB\u5143\u7D20\u4E24\u4E24\u5BF9\u6BD4</span>
                <span class="token keyword">var</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// \u5143\u7D20\u4EA4\u6362</span>
                arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Mn=a(" ### \u2469 \u9009\u62E9\u6392\u5E8F\uFF08\u9009\u4E2D\u6700\u5C0F\u7684\u503C\uFF0C\u548C\u7B2C\u4E00\u4E2A\u4EA4\u6362\uFF0C\u518D\u9009\u4E2D\u7B2C\u4E8C\u5C0F\u7684\u503C\uFF0C\u548C\u7B2C\u4E8C\u4E2A\u4EA4\u6362\uFF0C\u4EE5\u6B64\u7C7B\u63A8\uFF09 - \u9996\u5148\u5728\u672A\u6392\u5E8F\u5E8F\u5217\u4E2D\u627E\u5230\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u5B58\u653E\u5230\u6392\u5E8F\u5E8F\u5217\u7684\u8D77\u59CB\u4F4D\u7F6E\u3002 - \u518D\u4ECE\u5269\u4F59\u672A\u6392\u5E8F\u5143\u7D20\u4E2D\u7EE7\u7EED\u5BFB\u627E\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u7136\u540E\u653E\u5230\u5DF2\u6392\u5E8F\u5E8F\u5217\u7684\u672B\u5C3E\u3002 - \u91CD\u590D\u7B2C\u4E8C\u6B65\uFF0C\u76F4\u5230\u6240\u6709\u5143\u7D20\u5747\u6392\u5E8F\u5B8C\u6BD5\u3002 "),Pn=["src"],Cn=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">selectionSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">var</span> minIndex<span class="token punctuation">,</span> temp<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// \u5BFB\u627E\u6700\u5C0F\u7684\u6570</span>
                minIndex <span class="token operator">=</span> j<span class="token punctuation">;</span>                 <span class="token comment">// \u5C06\u6700\u5C0F\u6570\u7684\u7D22\u5F15\u4FDD\u5B58</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Rn=e(` ### \u246A 922.\u6309\u5947\u5076\u6392\u5E8F \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u975E\u8D1F\u6574\u6570\u6570\u7EC4\xA0A\uFF0C A \u4E2D\u4E00\u534A\u6574\u6570\u662F\u5947\u6570\uFF0C\u4E00\u534A\u6574\u6570\u662F\u5076\u6570\u3002 <p>\u5BF9\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\uFF0C\u4EE5\u4FBF\u5F53\xA0A[i] \u4E3A\u5947\u6570\u65F6\uFF0Ci\xA0\u4E5F\u662F\u5947\u6570\uFF1B\u5F53\xA0A[i]\xA0\u4E3A\u5076\u6570\u65F6\uFF0C i \u4E5F\u662F\u5076\u6570\u3002</p><p>\u4F60\u53EF\u4EE5\u8FD4\u56DE\u4EFB\u4F55\u6EE1\u8DB3\u4E0A\u8FF0\u6761\u4EF6\u7684\u6570\u7EC4\u4F5C\u4E3A\u7B54\u6848\u3002</p><p></p><p>\u793A\u4F8B\uFF1A</p><p>\u8F93\u5165\uFF1A[4,2,5,7] \u8F93\u51FA\uFF1A[4,5,2,7] \u89E3\u91CA\uFF1A[4,7,2,5]\uFF0C[2,5,4,7]\uFF0C[2,7,4,5] \u4E5F\u4F1A\u88AB\u63A5\u53D7\u3002</p><p>\u63D0\u793A\uFF1A</p><p>2 &lt;= A.length &lt;= 20000 A.length % 2 == 0 0 &lt;= A[i] &lt;= 1000</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\`\`\`js
export default (arr)=&gt;{
    // \u5347\u5E8F\u6392\u5E8F
    arr.sort((a,b)=&gt;a-b)
    // \u58F0\u660E\u4E00\u4E2A\u7A7A\u6570\u7EC4\u7528\u6765\u5B58\u50A8\u5947\u5076\u6392\u5E8F\u540E\u7684\u6570\u7EC4
    let r=[]
    // \u8BB0\u5F55\u5947\u6570\uFF0C\u5076\u6570\u4F4D\u4E0B\u6807
    let odd=1
    let even=0
    // \u5BF9\u6570\u7EC4\u8FDB\u884C\u904D\u5386
    arr.forEach(item=&gt;{
        if(item%2===1){
            r[odd]=item
            odd+=2
        }else{
            r[even]=item
            even+=2
        }
    })
    return r
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sort(compareFunction)</p><ul><li>\u5982\u679C\u6CA1\u6709\u6307\u660E compareFunction \uFF0C\u90A3\u4E48\u5143\u7D20\u4F1A\u6309\u7167\u8F6C\u6362\u4E3A\u7684\u5B57\u7B26\u4E32\u7684\u8BF8\u4E2A\u5B57\u7B26\u7684Unicode\u4F4D\u70B9\u8FDB\u884C\u6392\u5E8F\u3002\u4F8B\u5982 &quot;Banana&quot; \u4F1A\u88AB\u6392\u5217\u5230 &quot;cherry&quot; \u4E4B\u524D\u3002\u5F53\u6570\u5B57\u6309\u7531\u5C0F\u5230\u5927\u6392\u5E8F\u65F6\uFF0C9 \u51FA\u73B0\u5728 80 \u4E4B\u524D\uFF0C\u4F46\u56E0\u4E3A\uFF08\u6CA1\u6709\u6307\u660E compareFunction\uFF09\uFF0C\u6BD4\u8F83\u7684\u6570\u5B57\u4F1A\u5148\u88AB\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\uFF0C\u6240\u4EE5\u5728Unicode\u987A\u5E8F\u4E0A &quot;80&quot; \u8981\u6BD4 &quot;9&quot; \u8981\u9760\u524D\u3002</li><li>\u6307\u5B9A\u4E86compareFunction\uFF0Ca-b\u4ECE\u5C0F\u5230\u5927\uFF0Cb-a\u4ECE\u5927\u5230\u5C0F</li></ul>`,11),Ln=e(` ### \u246B \u6570\u7EC4\u4E2D\u7684\u7B2CK\u4E2A\u6700\u5927\u5143\u7D20 \`\`\`js \u5728\u672A\u6392\u5E8F\u7684\u6570\u7EC4\u4E2D\u627E\u5230\u7B2C k \u4E2A\u6700\u5927\u7684\u5143\u7D20\u3002\u8BF7\u6CE8\u610F\uFF0C\u4F60\u9700\u8981\u627E\u7684\u662F\u6570\u7EC4\u6392\u5E8F\u540E\u7684\u7B2C k \u4E2A\u6700\u5927\u7684\u5143\u7D20\uFF0C\u800C\u4E0D\u662F\u7B2C k \u4E2A\u4E0D\u540C\u7684\u5143\u7D20\u3002 <p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: [3,2,1,5,6,4] \u548C k = 2 \u8F93\u51FA: 5 \u793A\u4F8B\xA02:</p><p>\u8F93\u5165: [3,2,3,1,2,4,5,5,6] \u548C k = 4 \u8F93\u51FA: 4 \u8BF4\u660E:</p><p>\u4F60\u53EF\u4EE5\u5047\u8BBE k \u603B\u662F\u6709\u6548\u7684\uFF0C\u4E14 1 \u2264 k \u2264 \u6570\u7EC4\u7684\u957F\u5EA6\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\`\`\`js
export default (arr)=&gt;{
    return arr.sort((a,b)=&gt;b-a)[k-1]
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u66F4\u9AD8\u6027\u80FD\u7684\u529E\u6CD5</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> len<span class="token operator">=</span>arr<span class="token punctuation">.</span>length
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span>len<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token operator">-</span>k<span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            temp<span class="token operator">=</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token operator">&gt;</span>arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>
                arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>temp
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">[</span>len<span class="token operator">-</span><span class="token punctuation">(</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">findKthLargest</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> len<span class="token operator">=</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>len<span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>len<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&gt;</span>arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">let</span> temp<span class="token operator">=</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">===</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> arr<span class="token punctuation">[</span>len<span class="token operator">-</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4E00\u5B9A\u8981\u5403\u900F\u57FA\u672C\u6392\u5E8F\u6CD5</li></ul>`,9),Sn=a("\u6CE8\u610F\u540E\u9762\u7684\u7B2C\u4E00\u4E2A\u548C\u7B2C\u4E8C\u4E2A\u7684\u95F4\u8DDD\u6CA1\u6709\u904D\u5386\u5230\uFF0C\u9700\u8981\u5355\u72EC\u5224\u65AD"),Fn=e(` ### \u246C \u6700\u5927\u95F4\u8DDD \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u65E0\u5E8F\u7684\u6570\u7EC4\uFF0C\u627E\u51FA\u6570\u7EC4\u5728\u6392\u5E8F\u4E4B\u540E\uFF0C\u76F8\u90BB\u5143\u7D20\u4E4B\u95F4\u6700\u5927\u7684\u5DEE\u503C\u3002 <p>\u5982\u679C\u6570\u7EC4\u5143\u7D20\u4E2A\u6570\u5C0F\u4E8E 2\uFF0C\u5219\u8FD4\u56DE 0\u3002</p><p>\u793A\u4F8B\xA01:</p><p>\u8F93\u5165: [3,6,9,1] \u8F93\u51FA: 3 \u89E3\u91CA: \u6392\u5E8F\u540E\u7684\u6570\u7EC4\u662F [1,3,6,9], \u5176\u4E2D\u76F8\u90BB\u5143\u7D20 (3,6) \u548C (6,9) \u4E4B\u95F4\u90FD\u5B58\u5728\u6700\u5927\u5DEE\u503C 3\u3002 \u793A\u4F8B\xA02:</p><p>\u8F93\u5165: [10] \u8F93\u51FA: 0 \u89E3\u91CA: \u6570\u7EC4\u5143\u7D20\u4E2A\u6570\u5C0F\u4E8E 2\uFF0C\u56E0\u6B64\u8FD4\u56DE 0\u3002 \u8BF4\u660E:</p><p>\u4F60\u53EF\u4EE5\u5047\u8BBE\u6570\u7EC4\u4E2D\u6240\u6709\u5143\u7D20\u90FD\u662F\u975E\u8D1F\u6574\u6570\uFF0C\u4E14\u6570\u503C\u5728 32 \u4F4D\u6709\u7B26\u53F7\u6574\u6570\u8303\u56F4\u5185\u3002 \u8BF7\u5C1D\u8BD5\u5728\u7EBF\u6027\u65F6\u95F4\u590D\u6742\u5EA6\u548C\u7A7A\u95F4\u590D\u6742\u5EA6\u7684\u6761\u4EF6\u4E0B\u89E3\u51B3\u6B64\u95EE\u9898\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\`\`\`js
var maximumGap = function(arr) {
    if(arr.length&lt;2) return 0
    let temp,max=0,space;
    for(let i=0;i&lt;arr.length-1;i++){
        for(let j=0;j&lt;arr.length-1-i;j++){
            if(arr[j]&gt;arr[j+1]){
                temp=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;
            }
        }
        if(i&gt;0){
            space=arr[arr.length-i]-arr[arr.length-i-1];
            max=max&gt;space?max:space;
        }
    }
    return Math.max(max, arr[1] - arr[0])
};
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token keyword">let</span> space
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> len<span class="token punctuation">,</span> tmp<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>
                arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            space <span class="token operator">=</span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>space <span class="token operator">&gt;</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                max <span class="token operator">=</span> space
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),En=a("\u6CE8\u610F\u8FC7\u6EE4\u6389\u8D1F\u6574\u6570\uFF0C\u6CE8\u610F\u8FB9\u754C\u60C5\u51B5"),Qn=e(` ### \u246D \u7F3A\u5931\u7684\u7B2C\u4E00\u4E2A\u6B63\u6570 \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u672A\u6392\u5E8F\u7684\u6574\u6570\u6570\u7EC4\uFF0C\u627E\u51FA\u5176\u4E2D\`\u6CA1\u6709\u51FA\u73B0\u7684\`\`\u6700\u5C0F\u7684\`\`\u6B63\u6574\u6570\`\u3002 <p>\u793A\u4F8B\xA01:</p><p>\u8F93\u5165: [1,2,0] \u8F93\u51FA: 3 \u793A\u4F8B\xA02:</p><p>\u8F93\u5165: [3,4,-1,1] \u8F93\u51FA: 2 \u793A\u4F8B\xA03:</p><p>\u8F93\u5165: [7,8,9,11,12] \u8F93\u51FA: 1 \u8BF4\u660E:</p><p>\u4F60\u7684\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u5E94\u4E3AO(n)\uFF0C\u5E76\u4E14\u53EA\u80FD\u4F7F\u7528\u5E38\u6570\u7EA7\u522B\u7684\u7A7A\u95F4\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
- \u7B2C\u4E00\u4E2A\u662F1,\u8FD4\u56DE1\u3002\u7B2C\u4E00\u4E2A\u4E0D\u662F1\uFF0C\u904D\u5386\u6570\u7EC4\uFF0C\u5982\u679C\u4E24\u4E2A\u6570\u503C\u5DEE\u503C\u5927\u4E8E\u4E00\uFF0C\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u6570\u503C+1\u3002

\`\`\`js
export default (arr)=&gt;{
    // \u8FC7\u6EE4\u6389\u975E\u6B63\u6574\u6570
    arr=arr.filter(item=&gt;item&gt;0)
    // \u6B63\u6574\u6570\u6570\u7EC4\u662F\u4E0D\u662F\u4E3A\u7A7A
    if(arr.length){
        // \u5347\u5E8F\uFF0C\u65B9\u4FBF\u53D6\u6700\u5C0F\u503C
        arr.sort((a,b)=&gt;a-b)
        // \u7B2C\u4E00\u4E2A\u5143\u7D20\u4E0D\u4E3A1\uFF0C\u8FD4\u56DE1
        if(arr[0]!==1){
            return 1
        }else{
            // \u4ECE\u5DE6\u8FB9\u5F00\u59CB\u904D\u5386\uFF0C\u53EA\u8981\u4E0B\u4E00\u4E2A\u5143\u7D20\u548C\u5F53\u524D\u5143\u7D20\u5DEE\u503C&gt;1\uFF0C\u8FD4\u56DE\u5F53\u524D\u5143\u7D20\u52A01
            for(let i=0,len=arr.length-1;i&lt;len;i++){
                if(arr[i+1]-arr[i]&gt;1){
                    return arr[i]+1
                }
            }
            // \u5982\u679C\u662F\u8FDE\u7EED\u6B63\u6574\u6570\uFF0C\u5219\u8FD4\u56DE\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u52A01
            return arr.pop()+1
        }
    }else{
        return 1
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F7F\u7528\u9009\u62E9\u6392\u5E8F</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// \u8FC7\u6EE4\u6389\u975E\u6B63\u6574\u6570</span>
    arr<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span>item<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5B9E\u73B0\u9009\u62E9\u6392\u5E8F\uFF0C\u5148\u62FF\u5230\u6700\u5C0F\u503C\uFF0C\u5982\u679C\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E0D\u662F1\u76F4\u63A5\u8FD4\u56DE1\uFF0C\u5982\u679C\u662F1\uFF0C\u5C31\u8981\u6BD4\u76F8\u90BB\u5143\u7D20\u5DEE\u503C</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token operator">=</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">,</span>min<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        min<span class="token operator">=</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;</span>min<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">let</span> c<span class="token operator">=</span>min
                min<span class="token operator">=</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>c
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>min
        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>arr<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> arr<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>min<span class="token operator">!==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span>length<span class="token operator">?</span>arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u57FA\u7840\u7B97\u6CD5\u4E4B\u9012\u5F52\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u7B97\u6CD5\u4E4B\u9012\u5F52\u7C7B" aria-hidden="true">#</a> \u57FA\u7840\u7B97\u6CD5\u4E4B\u9012\u5F52\u7C7B</h2>`,9),Tn=e(` ### \u246E \u590D\u539FIP\u5730\u5740 \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u53EA\u5305\u542B\u6570\u5B57\u7684\u5B57\u7B26\u4E32\uFF0C\u590D\u539F\u5B83\u5E76\u8FD4\u56DE\u6240\u6709\u53EF\u80FD\u7684 IP \u5730\u5740\u683C\u5F0F\u3002 <p>\u793A\u4F8B:</p><p>\u8F93\u5165: &quot;25525511135&quot; \u8F93\u51FA: [&quot;255.255.11.135&quot;, &quot;255.255.111.35&quot;]</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- IP\u75314\u90E8\u5206\u6784\u6210\uFF0C\u6BCF\u90E8\u5206\u8303\u56F40~255\uFF08\u9012\u5F52\uFF09
- \u6240\u6709\u60C5\u51B5\u90FD\u5217\u51FA\u6765(\u6BCF\u4E2A\u5B50\u5B57\u7B26\u4E32\u90FD\u53EF\u4EE5\u662F\u4E00\u4F4D\u6570\u5230\u4E09\u4F4D\u6570)\uFF0C\u7136\u540E\u6309\u6761\u4EF6\u7B5B\u9009
\`\`\`js
export default (str)=&gt;{
    // \u4FDD\u5B58\u6240\u6709\u7B26\u5408\u6761\u4EF6\u7684ip
    let r=[]
    // \u9012\u5F52\u51FD\u6570
    let search=(cur,sub)=&gt;{
        if(cur.length===4&amp;&amp;cur.join(&#39;&#39;)===str){
            r.push(cur.join(&#39;.&#39;))
        }else{
            for(let i=0,len=Math.min(3,sub.length),tmp;i&lt;len;i++){
                tmp=sub.substr(0,i+1)
                if(tmp&lt;256){
                    search(cur.concat([tmp]),sub.substr(i+1))
                }
            }
        }
    }
    search([],str)
    return r
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u9012\u5F52\u7684\u672C\u8D28\uFF08\u5C31\u662F\u4E00\u4E2Awhile\u5FAA\u73AF\uFF0C\u4F46\u53EF\u4EE5\u6709\u591A\u4E2A\u6761\u4EF6\u6216\u5730\u65B9\u8C03\u7528\uFF09 <ul><li>\u6BCF\u4E00\u4E2A\u5904\u7406\u8FC7\u7A0B\u662F\u76F8\u540C\u7684</li><li>\u8F93\u5165\u8F93\u51FA\u662F\u76F8\u540C\u7684</li><li>\u5904\u7406\u6B21\u6570\u672A\u77E5</li></ul></li></ul>`,5),Hn=e(` ### \u246F \u4E0E\u6240\u6709\u5355\u8BCD\u76F8\u5173\u8054\u7684\u5B57\u7B26\u4E32 \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32\xA0s\xA0\u548C\u4E00\u4E9B\u957F\u5EA6\u76F8\u540C\u7684\u5355\u8BCD\xA0words\u3002\u627E\u51FA s \u4E2D\u6070\u597D\u53EF\u4EE5\u7531\xA0words \u4E2D\u6240\u6709\u5355\u8BCD\u4E32\u8054\u5F62\u6210\u7684\u5B50\u4E32\u7684\u8D77\u59CB\u4F4D\u7F6E\u3002 <p>\u6CE8\u610F\u5B50\u4E32\u8981\u4E0E\xA0words \u4E2D\u7684\u5355\u8BCD\u5B8C\u5168\u5339\u914D\uFF0C\u4E2D\u95F4\u4E0D\u80FD\u6709\u5176\u4ED6\u5B57\u7B26\uFF0C\u4F46\u4E0D\u9700\u8981\u8003\u8651\xA0words\xA0\u4E2D\u5355\u8BCD\u4E32\u8054\u7684\u987A\u5E8F\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1A s = &quot;barfoothefoobarman&quot;, words = [&quot;foo&quot;,&quot;bar&quot;] \u8F93\u51FA\uFF1A[0,9] \u89E3\u91CA\uFF1A \u4ECE\u7D22\u5F15 0 \u548C 9 \u5F00\u59CB\u7684\u5B50\u4E32\u5206\u522B\u662F &quot;barfoor&quot; \u548C &quot;foobar&quot; \u3002 \u8F93\u51FA\u7684\u987A\u5E8F\u4E0D\u91CD\u8981, [9,0] \u4E5F\u662F\u6709\u6548\u7B54\u6848\u3002 \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1A s = &quot;wordgoodgoodgoodbestword&quot;, words = [&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;] \u8F93\u51FA\uFF1A[]</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u9012\u5F52\u5FAA\u73AF\u6765\u8BA1\u7B97\u51FA\u6240\u6709\u7684words\u7EC4\u5408\uFF0C\u7136\u540E\u5339\u914D\u5B57\u7B26\u4E32\u5373\u53EF\u3002
\`\`\`js
export default (str,words)=&gt;{
    // \u4FDD\u5B58\u7ED3\u679C
    let result=[]
    // \u8BB0\u5F55\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u505A\u8FB9\u754C\u6761\u4EF6\u8BA1\u7B97
    let num=words.length
    // \u9012\u5F52\u51FD\u6570\u4F53
    let range=(r,_arr)=&gt;{
        if(r.length===num){
            result.push(r)
        }else{
            _arr.forEach((item,idx)=&gt;{
                // \u5F53\u524D\u5143\u7D20\u8E22\u51FA\u53BB\uFF0C\u7559\u4E0B\u5269\u4E0B\u7684
                let tmp=[].concat(_arr)
                tmp.splice(idx,1)
                range(r.concat(item),tmp)
            })
        }
    }
    range([], words)
    // [0,9,-1]
    return result.map(item=&gt;{
        return str.indexOf(item.join(&#39;&#39;))
    }).filter(item=&gt;item!==-1).sort()
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u636E\u7ED3\u6784\u4E4B\u6808" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784\u4E4B\u6808" aria-hidden="true">#</a> \u6570\u636E\u7ED3\u6784\u4E4B\u6808</h2><ul><li>\u6808\u7684\u6982\u5FF5 <ul><li>\u7EBF\u6027\u8868\uFF0C\u8FD0\u7B97\u53D7\u9650\uFF08\u4EC5\u5141\u8BB8\u4E00\u7AEF\u7684\u63D2\u5165\u548C\u5220\u9664\uFF09</li></ul></li></ul><h3 id="_17-\u68D2\u7403\u6BD4\u8D5B" tabindex="-1"><a class="header-anchor" href="#_17-\u68D2\u7403\u6BD4\u8D5B" aria-hidden="true">#</a> \u2470 \u68D2\u7403\u6BD4\u8D5B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u4F60\u73B0\u5728\u662F\u68D2\u7403\u6BD4\u8D5B\u8BB0\u5F55\u5458\u3002
\u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32\u5217\u8868\uFF0C\u6BCF\u4E2A\u5B57\u7B26\u4E32\u53EF\u4EE5\u662F\u4EE5\u4E0B\u56DB\u79CD\u7C7B\u578B\u4E4B\u4E00\uFF1A
<span class="token number">1.</span>\u6574\u6570\uFF08\u4E00\u8F6E\u7684\u5F97\u5206\uFF09\uFF1A\u76F4\u63A5\u8868\u793A\u60A8\u5728\u672C\u8F6E\u4E2D\u83B7\u5F97\u7684\u79EF\u5206\u6570\u3002
<span class="token number">2.</span> <span class="token string">&quot;+&quot;</span>\uFF08\u4E00\u8F6E\u7684\u5F97\u5206\uFF09\uFF1A\u8868\u793A\u672C\u8F6E\u83B7\u5F97\u7684\u5F97\u5206\u662F\u524D\u4E24\u8F6E\u6709\u6548 \u56DE\u5408\u5F97\u5206\u7684\u603B\u548C\u3002
<span class="token number">3.</span> <span class="token string">&quot;D&quot;</span>\uFF08\u4E00\u8F6E\u7684\u5F97\u5206\uFF09\uFF1A\u8868\u793A\u672C\u8F6E\u83B7\u5F97\u7684\u5F97\u5206\u662F\u524D\u4E00\u8F6E\u6709\u6548 \u56DE\u5408\u5F97\u5206\u7684\u4E24\u500D\u3002
<span class="token number">4.</span> <span class="token string">&quot;C&quot;</span>\uFF08\u4E00\u4E2A\u64CD\u4F5C\uFF0C\u8FD9\u4E0D\u662F\u4E00\u4E2A\u56DE\u5408\u7684\u5206\u6570\uFF09\uFF1A\u8868\u793A\u60A8\u83B7\u5F97\u7684\u6700\u540E\u4E00\u4E2A\u6709\u6548 \u56DE\u5408\u7684\u5206\u6570\u662F\u65E0\u6548\u7684\uFF0C\u5E94\u8BE5\u88AB\u79FB\u9664\u3002

\u6BCF\u4E00\u8F6E\u7684\u64CD\u4F5C\u90FD\u662F\u6C38\u4E45\u6027\u7684\uFF0C\u53EF\u80FD\u4F1A\u5BF9\u524D\u4E00\u8F6E\u548C\u540E\u4E00\u8F6E\u4EA7\u751F\u5F71\u54CD\u3002
\u4F60\u9700\u8981\u8FD4\u56DE\u4F60\u5728\u6240\u6709\u56DE\u5408\u4E2D\u5F97\u5206\u7684\u603B\u548C\u3002

\u793A\u4F8B <span class="token number">1</span><span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;+&quot;</span><span class="token punctuation">]</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token number">30</span>
<span class="token literal-property property">\u89E3\u91CA</span><span class="token operator">:</span> 
\u7B2C<span class="token number">1</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token number">5</span>\u5206\u3002\u603B\u548C\u662F\uFF1A<span class="token number">5</span>\u3002
\u7B2C<span class="token number">2</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token number">2</span>\u5206\u3002\u603B\u548C\u662F\uFF1A<span class="token number">7</span>\u3002
\u64CD\u4F5C<span class="token number">1</span>\uFF1A\u7B2C<span class="token number">2</span>\u8F6E\u7684\u6570\u636E\u65E0\u6548\u3002\u603B\u548C\u662F\uFF1A<span class="token number">5</span>\u3002
\u7B2C<span class="token number">3</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token number">10</span>\u5206\uFF08\u7B2C<span class="token number">2</span>\u8F6E\u7684\u6570\u636E\u5DF2\u88AB\u5220\u9664\uFF09\u3002\u603B\u6570\u662F\uFF1A<span class="token number">15</span>\u3002
\u7B2C<span class="token number">4</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token number">5</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">=</span> <span class="token number">15</span>\u5206\u3002\u603B\u6570\u662F\uFF1A<span class="token number">30</span>\u3002
\u793A\u4F8B <span class="token number">2</span><span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;-2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;9&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;+&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;+&quot;</span><span class="token punctuation">]</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token number">27</span>
<span class="token literal-property property">\u89E3\u91CA</span><span class="token operator">:</span> 
\u7B2C<span class="token number">1</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token number">5</span>\u5206\u3002\u603B\u548C\u662F\uFF1A<span class="token number">5</span>\u3002
\u7B2C<span class="token number">2</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token operator">-</span><span class="token number">2</span>\u5206\u3002\u603B\u6570\u662F\uFF1A<span class="token number">3</span>\u3002
\u7B2C<span class="token number">3</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token number">4</span>\u5206\u3002\u603B\u548C\u662F\uFF1A<span class="token number">7</span>\u3002
\u64CD\u4F5C<span class="token number">1</span>\uFF1A\u7B2C<span class="token number">3</span>\u8F6E\u7684\u6570\u636E\u65E0\u6548\u3002\u603B\u6570\u662F\uFF1A<span class="token number">3</span>\u3002
\u7B2C<span class="token number">4</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token operator">-</span><span class="token number">4</span>\u5206\uFF08\u7B2C\u4E09\u8F6E\u7684\u6570\u636E\u5DF2\u88AB\u5220\u9664\uFF09\u3002\u603B\u548C\u662F\uFF1A<span class="token operator">-</span><span class="token number">1</span>\u3002
\u7B2C<span class="token number">5</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token number">9</span>\u5206\u3002\u603B\u6570\u662F\uFF1A<span class="token number">8</span>\u3002
\u7B2C<span class="token number">6</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token operator">-</span><span class="token number">4</span> <span class="token operator">+</span> <span class="token number">9</span> <span class="token operator">=</span> <span class="token number">5</span>\u5206\u3002\u603B\u6570\u662F<span class="token number">13</span>\u3002
\u7B2C<span class="token number">7</span>\u8F6E\uFF1A\u4F60\u53EF\u4EE5\u5F97\u5230<span class="token number">9</span> <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">14</span>\u5206\u3002\u603B\u6570\u662F<span class="token number">27</span>\u3002
\u6CE8\u610F\uFF1A

\u8F93\u5165\u5217\u8868\u7684\u5927\u5C0F\u5C06\u4ECB\u4E8E<span class="token number">1</span>\u548C<span class="token number">1000</span>\u4E4B\u95F4\u3002
\u5217\u8868\u4E2D\u7684\u6BCF\u4E2A\u6574\u6570\u90FD\u5C06\u4ECB\u4E8E<span class="token operator">-</span><span class="token number">30000</span>\u548C<span class="token number">30000</span>\u4E4B\u95F4\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// \u7528\u6570\u7EC4\u6765\u5B9E\u73B0\u5806\u6808\u7ED3\u6784\uFF0Cpop,push(\u4ECE\u540E\u9762\u6DFB\u52A0\uFF0C\u4ECE\u540E\u9762\u5220\u9664)</span>
    <span class="token keyword">let</span> result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// \u4E0A\u4E00\u8F6E\u7684\u6570\u636E</span>
    <span class="token keyword">let</span> pre1
    <span class="token comment">// \u4E0A\u4E0A\u8F6E\u7684\u6570\u636E</span>
    <span class="token keyword">let</span> pre2
    <span class="token comment">// \u5BF9\u6570\u7EC4\u8FDB\u884C\u904D\u5386\uFF0C\u904D\u5386\u7684\u76EE\u7684\u662F\u5904\u7406\u5F97\u5206</span>
    arr<span class="token punctuation">,</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">switch</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&#39;C&#39;</span><span class="token operator">:</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    result<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span>
            <span class="token keyword">case</span> <span class="token string">&#39;D&#39;</span><span class="token operator">:</span>
                pre1<span class="token operator">=</span>result<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>pre1<span class="token punctuation">,</span>pre1<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span>
            <span class="token keyword">case</span> <span class="token string">&#39;+&#39;</span><span class="token operator">:</span>
                pre1<span class="token operator">=</span>result<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                pre2<span class="token operator">=</span>result<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>pre2<span class="token punctuation">,</span>pre1<span class="token punctuation">,</span>pre1<span class="token operator">+</span>pre2<span class="token punctuation">)</span>
                <span class="token keyword">break</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">total<span class="token punctuation">,</span>num</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>total<span class="token operator">+</span>num<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),In=e(` ### \u2471 85.\u6700\u5927\u77E9\u5F62 \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u4EC5\u5305\u542B\xA00 \u548C 1 \u7684\u4E8C\u7EF4\u4E8C\u8FDB\u5236\u77E9\u9635\uFF0C\u627E\u51FA\u53EA\u5305\u542B 1 \u7684\u6700\u5927\u77E9\u5F62\uFF0C\u5E76\u8FD4\u56DE\u5176\u9762\u79EF\u3002 <p>\u793A\u4F8B:</p><p>\u8F93\u5165: [ [&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;], [&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;], [&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;], [&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;] ] \u8F93\u51FA: 6</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>![\u6700\u5927\u77E9\u5F62](./img/biggestRectangle.png)
\`\`\`js
export default (arr) =&gt; {
  let result = []
  let reg = /1{2,}/g
  // \u628A\u4E8C\u4F4D\u6570\u7EC4\u91CD\u65B0\u8868\u8FBE\uFF0C\u628A\u76F8\u90BB\u76841\u63D0\u53D6\u51FA\u6765\uFF08\u8D77\u59CB\u70B9+\u622A\u6B62\u70B9\uFF09
  arr = arr.map(item =&gt; {
    let str = item.join(&#39;&#39;)
    let r = reg.exec(str)
    let rs = []
    while (r) {
      rs.push([r.index, r.index + r[0].length - 1])
      r = reg.exec(str)
    }
    return rs
  })
  // \u901A\u8FC7\u9012\u5F52\u8BA1\u7B97\u76F8\u90BB\u7684\u77E9\u9635
  let maxRect = (arr, result, n = 1) =&gt; {
    // \u5F39\u51FA\u7B2C\u4E00\u884C
    let top = arr.pop()
    // \u5F39\u51FA\u7B2C\u4E8C\u884C
    let next = arr.pop()
    // \u8BB0\u5F55\u7B2C\u4E00\u884C\u7684\u6BCF\u4E00\u4E2A\u8D77\u59CB\u70B9\u548C\u622A\u6B62\u70B9
    let tt
    // \u8BB0\u5F55\u7B2C\u4E8C\u884C\u7684\u6BCF\u4E00\u4E2A\u8D77\u59CB\u70B9\u548C\u622A\u6B62\u70B9
    let nn
    // \u8BB0\u5F55\u4EA4\u53C9\u7684\u8D77\u59CB\u7D22\u5F15
    let start
    // \u8BB0\u5F55\u4EA4\u53C9\u7684\u622A\u6B62\u7D22\u5F15
    let end
    let width = 1
    let maxWidth = 1
    n++
    for (let i = 0, il = top.length; i &lt; il; i++) {
      tt = top[i]
      for (let j = 0, jl = next.length; j &lt; jl; j++) {
        nn = next[j]
        width = Math.min(tt[1], nn[1]) - Math.max(tt[0], nn[0])
        // \u4FEE\u6539\u907F\u514D\u76F8\u90BB\u4E24\u4E2A\u6570\u7684\u5DEE\u503C\u4E3A1\uFF08\u5B9E\u9645\u5BBD\u5EA6\u4E3A2\uFF09\u6CA1\u6709\u4E3Astart,end\u8D4B\u503C\u5BFC\u81F4\u7684bug,\u5E94\u8BE5\u52A0\u4E0A=
        if (width &gt;= maxWidth) {
          maxWidth = width
          start = Math.max(tt[0], nn[0])
          end = Math.min(tt[1], nn[1])
        }
      }
    }
    // \u5982\u679C\u6CA1\u6709\u627E\u5230\u4EA4\u53C9\u70B9
    if (start === undefined || end === undefined) {
      if (n &lt; 3) {
        return false
      } else {
        width = top[0][1] - top[0][0] + 1
        if (width &gt; 1) {
          result.push((n - 1) * width)
        }
      }
    } else {
      // \u627E\u5230\u4EA4\u53C9\u70B9\u7EE7\u7EED\u4E0B\u4E00\u884C
      if (arr.length &gt; 0) {
        arr.push([
          [start, end]
        ])
        maxRect(arr, result, n++)
      } else {
        // \u4ECE\u67D0\u4E00\u884C\u4E00\u76F4\u8BA1\u7B97\u5230\u6700\u540E\u4E00\u884C\uFF0C\u8FD9\u4E2A\u65F6\u5019start\u548Cend\u4E00\u76F4\u6709\u503C\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u8FDB\u5165\u5230if\u5C42\uFF0C\u8FD9\u4E2A\u65F6\u5019n\u5C31\u662F\u7D2F\u8BA1\u7684\u884C\u6570\uFF08\u9AD8\uFF09\uFF0Cend-start+1\u5C31\u662F\u5BBD
        result.push(n * (end - start + 1))
      }
    }
  }
  while (arr.length &gt; 1) {
    maxRect([].concat(arr), result)
    arr.pop()
  }
  // \u53D6\u6700\u5927\u503C
  let max = 0
  let item = result.pop()
  while (item) {
    if (item &gt; max) {
      max = item
    }
    item = result.pop()
  }
  return max &gt; 0 ? max : -1
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">1{2,}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
  <span class="token comment">// \u628A\u4E8C\u4F4D\u6570\u7EC4\u91CD\u65B0\u8868\u8FBE\uFF0C\u628A\u76F8\u90BB\u76841\u63D0\u53D6\u51FA\u6765\uFF08\u8D77\u59CB\u70B9+\u622A\u6B62\u70B9\uFF09</span>
  arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> str <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> r <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token keyword">let</span> rs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      rs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>r<span class="token punctuation">.</span>index<span class="token punctuation">,</span> r<span class="token punctuation">.</span>index <span class="token operator">+</span> r<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      r <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> rs
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// [ [], [ [ 2, 4 ] ], [ [ 0, 4 ] ], [] ]</span>
  <span class="token comment">// \u901A\u8FC7\u9012\u5F52\u8BA1\u7B97\u76F8\u90BB\u7684\u77E9\u9635</span>
  <span class="token keyword">let</span> <span class="token function-variable function">maxRect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> result<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F39\u51FA\u7B2C\u4E00\u884C</span>
    <span class="token keyword">let</span> top <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5F39\u51FA\u7B2C\u4E8C\u884C</span>
    <span class="token keyword">let</span> next <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8BB0\u5F55\u7B2C\u4E00\u884C\u7684\u6BCF\u4E00\u4E2A\u8D77\u59CB\u70B9\u548C\u622A\u6B62\u70B9</span>
    <span class="token keyword">let</span> tt
    <span class="token comment">// \u8BB0\u5F55\u7B2C\u4E8C\u884C\u7684\u6BCF\u4E00\u4E2A\u8D77\u59CB\u70B9\u548C\u622A\u6B62\u70B9</span>
    <span class="token keyword">let</span> nn
    <span class="token comment">// \u8BB0\u5F55\u4EA4\u53C9\u7684\u8D77\u59CB\u7D22\u5F15</span>
    <span class="token keyword">let</span> start
    <span class="token comment">// \u8BB0\u5F55\u4EA4\u53C9\u7684\u622A\u6B62\u7D22\u5F15</span>
    <span class="token keyword">let</span> end
    <span class="token keyword">let</span> width <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">let</span> maxWidth <span class="token operator">=</span> <span class="token number">1</span>
    n<span class="token operator">++</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> il <span class="token operator">=</span> top<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> il<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tt <span class="token operator">=</span> top<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> jl <span class="token operator">=</span> next<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> jl<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        nn <span class="token operator">=</span> next<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
        width <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>tt<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nn<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>tt<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nn<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token comment">// \u4FEE\u6539\u907F\u514D\u76F8\u90BB\u4E24\u4E2A\u6570\u7684\u5DEE\u503C\u4E3A1\uFF08\u5B9E\u9645\u5BBD\u5EA6\u4E3A2\uFF09\u6CA1\u6709\u4E3Astart,end\u8D4B\u503C\u5BFC\u81F4\u7684bug,\u5E94\u8BE5\u52A0\u4E0A=</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">&gt;=</span> maxWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          maxWidth <span class="token operator">=</span> width
          start <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>tt<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nn<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
          end <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>tt<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nn<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u627E\u5230\u4EA4\u53C9\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> end <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        width <span class="token operator">=</span> top<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> top<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> width<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u627E\u5230\u4EA4\u53C9\u70B9\u7EE7\u7EED\u4E0B\u4E00\u884C</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
          <span class="token punctuation">[</span>start<span class="token punctuation">,</span> end<span class="token punctuation">]</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token function">maxRect</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> result<span class="token punctuation">,</span> n<span class="token operator">++</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4ECE\u67D0\u4E00\u884C\u4E00\u76F4\u8BA1\u7B97\u5230\u6700\u540E\u4E00\u884C\uFF0C\u8FD9\u4E2A\u65F6\u5019start\u548Cend\u4E00\u76F4\u6709\u503C\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u8FDB\u5165\u5230if\u5C42\uFF0C\u8FD9\u4E2A\u65F6\u5019n\u5C31\u662F\u7D2F\u8BA1\u7684\u884C\u6570\uFF08\u9AD8\uFF09\uFF0Cend-start+1\u5C31\u662F\u5BBD</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n <span class="token operator">*</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">maxRect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>
    arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u53D6\u6700\u5927\u503C</span>
  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> item <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">&gt;</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      max <span class="token operator">=</span> item
    <span class="token punctuation">}</span>
    item <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> max <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> max <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u636E\u7ED3\u6784\u4E4B\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784\u4E4B\u961F\u5217" aria-hidden="true">#</a> \u6570\u636E\u7ED3\u6784\u4E4B\u961F\u5217</h2><ul><li>\u7279\u6B8A\u7684\u7EBF\u6027\u8868\uFF0C\u53EA\u5141\u8BB8\u5728\u8868\u7684\u524D\u7AEF\u5220\u9664\uFF0C\u8868\u7684\u540E\u7AEF\u63D2\u5165\uFF08\u5148\u8FDB\u5148\u51FA\uFF09</li></ul><h3 id="_19-\u8BBE\u8BA1\u5FAA\u73AF\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#_19-\u8BBE\u8BA1\u5FAA\u73AF\u961F\u5217" aria-hidden="true">#</a> \u2472 \u8BBE\u8BA1\u5FAA\u73AF\u961F\u5217</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8BBE\u8BA1\u4F60\u7684\u5FAA\u73AF\u961F\u5217\u5B9E\u73B0\u3002 \u5FAA\u73AF\u961F\u5217\u662F\u4E00\u79CD\u7EBF\u6027\u6570\u636E\u7ED3\u6784\uFF0C\u5176\u64CD\u4F5C\u8868\u73B0\u57FA\u4E8E <span class="token constant">FIFO</span>\uFF08\u5148\u8FDB\u5148\u51FA\uFF09\u539F\u5219\u5E76\u4E14\u961F\u5C3E\u88AB\u8FDE\u63A5\u5728\u961F\u9996\u4E4B\u540E\u4EE5\u5F62\u6210\u4E00\u4E2A\u5FAA\u73AF\u3002\u5B83\u4E5F\u88AB\u79F0\u4E3A\u201C\u73AF\u5F62\u7F13\u51B2\u5668\u201D\u3002

\u5FAA\u73AF\u961F\u5217\u7684\u4E00\u4E2A\u597D\u5904\u662F\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u8FD9\u4E2A\u961F\u5217\u4E4B\u524D\u7528\u8FC7\u7684\u7A7A\u95F4\u3002\u5728\u4E00\u4E2A\u666E\u901A\u961F\u5217\u91CC\uFF0C\u4E00\u65E6\u4E00\u4E2A\u961F\u5217\u6EE1\u4E86\uFF0C\u6211\u4EEC\u5C31\u4E0D\u80FD\u63D2\u5165\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u5373\u4F7F\u5728\u961F\u5217\u524D\u9762\u4ECD\u6709\u7A7A\u95F4\u3002\u4F46\u662F\u4F7F\u7528\u5FAA\u73AF\u961F\u5217\uFF0C\u6211\u4EEC\u80FD\u4F7F\u7528\u8FD9\u4E9B\u7A7A\u95F4\u53BB\u5B58\u50A8\u65B0\u7684\u503C\u3002

\u4F60\u7684\u5B9E\u73B0\u5E94\u8BE5\u652F\u6301\u5982\u4E0B\u64CD\u4F5C\uFF1A

<span class="token function">MyCircularQueue</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token operator">:</span> \u6784\u9020\u5668\uFF0C\u8BBE\u7F6E\u961F\u5217\u957F\u5EA6\u4E3A k \u3002
<span class="token literal-property property">Front</span><span class="token operator">:</span> \u4ECE\u961F\u9996\u83B7\u53D6\u5143\u7D20\u3002\u5982\u679C\u961F\u5217\u4E3A\u7A7A\uFF0C\u8FD4\u56DE <span class="token operator">-</span><span class="token number">1</span> \u3002
<span class="token literal-property property">Rear</span><span class="token operator">:</span> \u83B7\u53D6\u961F\u5C3E\u5143\u7D20\u3002\u5982\u679C\u961F\u5217\u4E3A\u7A7A\uFF0C\u8FD4\u56DE <span class="token operator">-</span><span class="token number">1</span> \u3002
<span class="token function">enQueue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">:</span> \u5411\u5FAA\u73AF\u961F\u5217\u63D2\u5165\u4E00\u4E2A\u5143\u7D20\u3002\u5982\u679C\u6210\u529F\u63D2\u5165\u5219\u8FD4\u56DE\u771F\u3002
<span class="token function">deQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> \u4ECE\u5FAA\u73AF\u961F\u5217\u4E2D\u5220\u9664\u4E00\u4E2A\u5143\u7D20\u3002\u5982\u679C\u6210\u529F\u5220\u9664\u5219\u8FD4\u56DE\u771F\u3002
<span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> \u68C0\u67E5\u5FAA\u73AF\u961F\u5217\u662F\u5426\u4E3A\u7A7A\u3002
<span class="token function">isFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> \u68C0\u67E5\u5FAA\u73AF\u961F\u5217\u662F\u5426\u5DF2\u6EE1\u3002
 
\u793A\u4F8B\uFF1A

MyCircularQueue circularQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MycircularQueue</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BBE\u7F6E\u957F\u5EA6\u4E3A 3</span>

circularQueue<span class="token punctuation">.</span><span class="token function">enQueue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE true</span>

circularQueue<span class="token punctuation">.</span><span class="token function">enQueue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE true</span>

circularQueue<span class="token punctuation">.</span><span class="token function">enQueue</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE true</span>

circularQueue<span class="token punctuation">.</span><span class="token function">enQueue</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE false\uFF0C\u961F\u5217\u5DF2\u6EE1</span>

circularQueue<span class="token punctuation">.</span><span class="token function">Rear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE 3</span>

circularQueue<span class="token punctuation">.</span><span class="token function">isFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE true</span>

circularQueue<span class="token punctuation">.</span><span class="token function">deQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE true</span>

circularQueue<span class="token punctuation">.</span><span class="token function">enQueue</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE true</span>

circularQueue<span class="token punctuation">.</span><span class="token function">Rear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE 4</span>

\u63D0\u793A\uFF1A

\u6240\u6709\u7684\u503C\u90FD\u5728 <span class="token number">0</span> \u81F3 <span class="token number">1000</span> \u7684\u8303\u56F4\u5185\uFF1B
\u64CD\u4F5C\u6570\u5C06\u5728 <span class="token number">1</span> \u81F3 <span class="token number">1000</span> \u7684\u8303\u56F4\u5185\uFF1B
\u8BF7\u4E0D\u8981\u4F7F\u7528\u5185\u7F6E\u7684\u961F\u5217\u5E93\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+g+'" alt="\u961F\u52171"></p>',10),Bn=a("\u6CE8\u610F\u6DFB\u52A0\u6570\u636E\u65F6\u961F\u5C3E\u6307\u9488\u8981\u6C42\u4F59this.max\uFF0C\u83B7\u53D6\u961F\u5C3E\u6570\u636E\u65F6\u8981\u961F\u5C3E\u6307\u9488\u51CF\u4E00\uFF0C\u5E76\u4E14\u5982\u679C\u6307\u9488\u51CF\u4E00\u5C0F\u4E8E0\uFF0C\u5373\u4E3A\u6570\u7EC4\u6700\u540E\u4E00\u4F4D"),Gn=e(` \`\`\`js export default class MyCircularQueue { constructor (k) { // \u4FDD\u5B58\u6570\u636E\u957F\u5EA6\u4E3Ak\u7684\u6570\u636E\u7ED3\u6784 this.list=Array(k) // \u961F\u9996\u7684\u6307\u9488 this.front=0 // \u961F\u5C3E\u7684\u6307\u9488 this.rear=0 // \u961F\u5217\u7684\u957F\u5EA6 this.max=k } enQueue (num) { if(this.isFull()){ return false }else{ this.list[this.rear]=num this.rear=(this.rear+1)%this.max return true } } deQueue () { let v=this.list[this.front] this.list[this.front]=&#39;&#39; this.front=(this.front+1)%this.max return v } isEmpty () { return this.front===this.rear&amp;&amp;!this.list[this.front] } isFull () { return this.front===this.rear&amp;&amp;!!this.list[this.front] } Front () { return this.list[this.front] } Rear () { let rear=this.rear-1 <pre><code>    return this.list[rear&lt;0?this.max-1:rear]
}
</code></pre><p>}</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
\`\`\`js
class MycircularQueue{
    constructor(len){
        this.list=new Array(len);
        this.front=0;
        this.rear=0;
        this.max=len;
    }
    Front(){
        return this.list.length?this.list(this.front):-1;
    }
    Rear(){
        let rear=this.rear-1;
        return this.list[rear&lt;0?this.max-1:rear]
    }
    enQueue(value){
        if(this.isFull()){
            return false;
        }else{
            this.list[this.rear]=value;
            this.rear=(this.rear+1)%this.max;
            return true;
        }
    }
    deQueue(){
        if(this.list.length&gt;0){
            this.list[this.front]=&quot;&quot;;
            this.front++;
            return true;
        }else{
            return false;
        }
    }
    isEmpty(){
        return this.front===this.rear&amp;&amp;!this.list[this.front]
    }
    isFull(){
        return this.front===this.rear&amp;&amp;this.list[this.front]
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),On=e(` ### \u2473 \u4EFB\u52A1\u8C03\u5EA6\u5668 \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u7528\u5B57\u7B26\u6570\u7EC4\u8868\u793A\u7684 CPU \u9700\u8981\u6267\u884C\u7684\u4EFB\u52A1\u5217\u8868\u3002\u5176\u4E2D\u5305\u542B\u4F7F\u7528\u5927\u5199\u7684 A - Z \u5B57\u6BCD\u8868\u793A\u768426 \u79CD\u4E0D\u540C\u79CD\u7C7B\u7684\u4EFB\u52A1\u3002\u4EFB\u52A1\u53EF\u4EE5\u4EE5\u4EFB\u610F\u987A\u5E8F\u6267\u884C\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u4EFB\u52A1\u90FD\u53EF\u4EE5\u5728 1 \u4E2A\u5355\u4F4D\u65F6\u95F4\u5185\u6267\u884C\u5B8C\u3002CPU \u5728\u4EFB\u4F55\u4E00\u4E2A\u5355\u4F4D\u65F6\u95F4\u5185\u90FD\u53EF\u4EE5\u6267\u884C\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u6216\u8005\u5728\u5F85\u547D\u72B6\u6001\u3002 <p>\u7136\u800C\uFF0C\u4E24\u4E2A\u76F8\u540C\u79CD\u7C7B\u7684\u4EFB\u52A1\u4E4B\u95F4\u5FC5\u987B\u6709\u957F\u5EA6\u4E3A\xA0n \u7684\u51B7\u5374\u65F6\u95F4\uFF0C\u56E0\u6B64\u81F3\u5C11\u6709\u8FDE\u7EED n \u4E2A\u5355\u4F4D\u65F6\u95F4\u5185 CPU \u5728\u6267\u884C\u4E0D\u540C\u7684\u4EFB\u52A1\uFF0C\u6216\u8005\u5728\u5F85\u547D\u72B6\u6001\u3002</p><p>\u4F60\u9700\u8981\u8BA1\u7B97\u5B8C\u6210\u6240\u6709\u4EFB\u52A1\u6240\u9700\u8981\u7684\u6700\u77ED\u65F6\u95F4\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165: tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 2 \u8F93\u51FA: 8 \u6267\u884C\u987A\u5E8F: A -&gt; B -&gt; (\u5F85\u547D) -&gt; A -&gt; B -&gt; (\u5F85\u547D) -&gt; A -&gt; B. \u6CE8\uFF1A</p><p>\u4EFB\u52A1\u7684\u603B\u4E2A\u6570\u4E3A\xA0[1, 10000]\u3002 n \u7684\u53D6\u503C\u8303\u56F4\u4E3A [0, 100]\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
![&#39;\u961F\u52172&#39;](./img/queue2.png)

- \u4EFB\u52A1\u591A\u7684\u4F18\u5148\u6267\u884C\u5373\u53EF

\`\`\`js
export default (tasks, n) =&gt; {
    let q = &#39;&#39;
    let Q = {}
    // \u6BCF\u79CD\u4EFB\u52A1\u7684\u6570\u91CF
    tasks.forEach(item =&gt; {
        if (Q[item]) {
            Q[item]++
        } else {
            Q[item] = 1
        }
    })
    while (1) {
        let keys = Object.keys(Q)
        if (!keys[0]) {
            break
        }
        // n+1\u4E3A\u4E00\u7EC4
        let tmp = []
        for (let i = 0; i &lt;= n; i++) {
            let max = 0
            let key
            let pos
            // \u4ECE\u6240\u6709\u7684\u4EFB\u52A1\u4E2D\u627E\u5230\u672A\u5904\u7406\u6570\u6700\u5927\u7684\uFF0C\u4F18\u5148\u5B89\u6392
            keys.forEach((item, idx) =&gt; {
                if (Q[item] &gt; max) {
                    max = Q[item]
                    key = item
                    pos = idx
                }
            })
            if (key) {
                tmp.push(key)
                keys.splice(pos, 1)
                Q[key]--;
                if (Q[key] &lt; 1) {
                    delete Q[key]
                }
            } else {
                break
            }
        }
        q += tmp.join(&#39;&#39;).padEnd(n + 1, &#39;-&#39;)
    }
    // A--A--A--
    q = q.replace(/-+$/g, &#39;&#39;)
    return q.length
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u636E\u7ED3\u6784\u4E4B\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784\u4E4B\u94FE\u8868" aria-hidden="true">#</a> \u6570\u636E\u7ED3\u6784\u4E4B\u94FE\u8868</h2><ul><li>\u77E5\u8BC6\u70B9 <ul><li>\u5982\u4F55\u624B\u52A8\u5730\u521B\u5EFA\u4E00\u4E2A\u94FE\u8868\u7684\u6570\u636E\u7ED3\u6784(NodeList)</li><li>\u77E5\u9053\u94FE\u8868\u5982\u4F55\u6392\u5E8F(sort)</li><li>\u5982\u4F55\u68C0\u6D4B\u94FE\u8868\u662F\u5426\u662F\u95ED\u73AF\u7684</li></ul></li><li>\u6982\u5FF5 <ul><li>\u94FE\u8868\u7531\u4E00\u7CFB\u5217\u7ED3\u70B9\uFF08\u5143\u7D20\uFF09\u7EC4\u6210\uFF0C\u7ED3\u70B9\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u52A8\u6001\u751F\u6210\u3002\u6BCF\u4E2A\u7ED3\u70B9\u5305\u62EC\u4E24\u4E2A\u90E8\u5206\uFF1A<code>\u5B58\u50A8\u6570\u636E\u5143\u7D20\u7684\u6570\u636E\u57DF</code>\u548C<code>\u5B58\u50A8\u4E0B\u4E00\u4E2A\u7ED3\u70B9\u5730\u5740\u7684\u6307\u9488\u57DF</code>\u3002</li><li>\u94FE\u8868\u53EA\u66B4\u9732\u4E00\u4E2A\u5934\u6307\u9488\uFF0C\u540E\u9762\u7684\u5143\u7D20\u5FC5\u987B\u901A\u8FC7\u5934\u6307\u9488\u4E0D\u65AD\u7684next\uFF0C\u624D\u80FD\u62FF\u5230</li></ul></li><li>js\u4E2D\u6CA1\u6709\u94FE\u8868\u7ED3\u6784 <ul><li>\u6570\u7EC4\u53EF\u4EE5\u5145\u5F53\u961F\u5217\uFF0C\u53EF\u4EE5\u5145\u5F53\u5806\u6808\uFF0C\u4F46\u662F\u4E0D\u80FD\u5145\u5F53\u94FE\u8868</li></ul></li></ul>`,9),zn=e(`<h3 id="_21-\u6392\u5E8F\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#_21-\u6392\u5E8F\u94FE\u8868" aria-hidden="true">#</a> \u3251 \u6392\u5E8F\u94FE\u8868</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u5728 <span class="token constant">O</span><span class="token punctuation">(</span>n log n<span class="token punctuation">)</span> \u65F6\u95F4\u590D\u6742\u5EA6\u548C\u5E38\u6570\u7EA7\u7A7A\u95F4\u590D\u6742\u5EA6\u4E0B\uFF0C\u5BF9\u94FE\u8868\u8FDB\u884C\u6392\u5E8F\u3002

\u793A\u4F8B <span class="token number">1</span><span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token number">4</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">2</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">1</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">3</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token number">1</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">2</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">3</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">4</span>
\u793A\u4F8B <span class="token number">2</span><span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">5</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">3</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">4</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">0</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">3</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">4</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4EC0\u4E48\u662F\u5FEB\u901F\u6392\u5E8F\uFF1F <ul><li>\u9009\u62E9\u4E00\u4E2A\u57FA\u51C6\u503C\uFF0C\u5C0F\u4E8E\u7684\u653E\u5B83\u5DE6\u8FB9\uFF0C\u5927\u4E8E\u7684\u653E\u5B83\u53F3\u8FB9\uFF0C\u7136\u540E\u5DE6\u8FB9\u53F3\u8FB9\u518D\u9009\u4E00\u4E2A\u57FA\u51C6\u503C\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002</li></ul></li></ul><p><img src="`+f+'" alt="\u5FEB\u901F\u6392\u5E8F"></p><p><img src="'+h+`" alt="\u94FE\u8868\u7684\u5FEB\u901F\u6392\u5E8F"></p><ul><li>\u5B9A\u4E49\u4E24\u4E2A\u6307\u9488\uFF0Cq\u6307\u9488\u904D\u5386\u6240\u6709\u94FE\u8868\u8282\u70B9\uFF0C\u5982\u679Cq\u6307\u9488\u6307\u5411\u7684\u5143\u7D20\u5C0F\u4E8E\u57FA\u51C6\u5143\u7D20\uFF0C\u5C31\u548Cp\u6307\u9488\u7684\u540E\u4E00\u4E2A\u5143\u7D20\u8FDB\u884C\u4EA4\u6362\uFF0C\u540C\u65F6p\u540E\u79FB\u4E00\u4F4D\u3002\u6700\u540E\u8BA9\u57FA\u51C6\u5143\u7D20\u548C\u5C0F\u4E8E\u5B83\u7684\u540E\u4E00\u4E2A\u5143\u7D20\u8FDB\u884C\u4EA4\u6362</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u58F0\u660E\u94FE\u8868\u7684\u8282\u70B9</span>

<span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u58F0\u660E\u94FE\u8868\u7684\u6570\u636E\u7ED3\u6784</span>

<span class="token keyword">class</span> <span class="token class-name">NodeList</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u58F0\u660E\u94FE\u8868\u7684\u5934\u90E8\u8282\u70B9</span>
        <span class="token keyword">let</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> next <span class="token operator">=</span> head
        arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            next<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
            next <span class="token operator">=</span> next<span class="token punctuation">.</span>next
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> head
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4EA4\u6362\u4E24\u4E2A\u8282\u70B9\u7684\u503C</span>
<span class="token keyword">let</span> <span class="token function-variable function">swap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> q</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> p<span class="token punctuation">.</span>val
    p<span class="token punctuation">.</span>val <span class="token operator">=</span> q<span class="token punctuation">.</span>val
    q<span class="token punctuation">.</span>val <span class="token operator">=</span> val
<span class="token punctuation">}</span>

<span class="token comment">// \u5BFB\u627E\u57FA\u51C6\u5143\u7D20\u7684\u8282\u70B9</span>
<span class="token keyword">let</span> <span class="token function-variable function">partion</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">begin<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> begin<span class="token punctuation">.</span>val
    <span class="token keyword">let</span> p <span class="token operator">=</span> begin
    <span class="token keyword">let</span> q <span class="token operator">=</span> begin<span class="token punctuation">.</span>next
    <span class="token keyword">while</span> <span class="token punctuation">(</span>q <span class="token operator">!==</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            p <span class="token operator">=</span> p<span class="token punctuation">.</span>next
            <span class="token function">swap</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        q <span class="token operator">=</span> q<span class="token punctuation">.</span>next
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BA9\u57FA\u51C6\u5143\u7D20\u8DD1\u5230\u4E2D\u95F4\u53BB</span>
    <span class="token function">swap</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> begin<span class="token punctuation">)</span>
    <span class="token keyword">return</span> p
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token parameter">begin<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>begin <span class="token operator">!==</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> part <span class="token operator">=</span> <span class="token function">partion</span><span class="token punctuation">(</span>begin<span class="token punctuation">,</span> end<span class="token punctuation">)</span>
        <span class="token function">sort</span><span class="token punctuation">(</span>begin<span class="token punctuation">,</span> part<span class="token punctuation">)</span>
        <span class="token function">sort</span><span class="token punctuation">(</span>part<span class="token punctuation">.</span>next<span class="token punctuation">,</span> end<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span>
    Node<span class="token punctuation">,</span>
    NodeList
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u62FF\u5230\u5934\u6307\u9488</span>
<span class="token keyword">let</span> head <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">NodeList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// \u5BF9\u5934\u6307\u9488\u8FDB\u884C\u6392\u5E8F</span>
<span class="token function">sort</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span>
<span class="token keyword">let</span> res<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> next<span class="token operator">=</span>head
<span class="token keyword">while</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
    next<span class="token operator">=</span>next<span class="token punctuation">.</span>next
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment">// [1,2,3,4,6,7,9,10,12]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">merge</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">l<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token string">&#39;sb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> current <span class="token operator">=</span> result<span class="token punctuation">;</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span>l <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> r<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            current<span class="token punctuation">.</span>next <span class="token operator">=</span> l<span class="token punctuation">;</span>
            l <span class="token operator">=</span> l<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            current<span class="token punctuation">.</span>next <span class="token operator">=</span> r<span class="token punctuation">;</span>
            r <span class="token operator">=</span> r<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    current<span class="token punctuation">.</span>next <span class="token operator">=</span> l <span class="token operator">||</span> r<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5F52\u5E76\u6392\u5E8F</span>
<span class="token keyword">var</span> <span class="token function-variable function">sortList</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>head <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> head<span class="token punctuation">.</span>next <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> head<span class="token punctuation">;</span>
    <span class="token keyword">let</span> fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">let</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span>fast<span class="token punctuation">.</span>next <span class="token operator">&amp;&amp;</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> mid <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    slow<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token function">sortList</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">sortList</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),Dn=e(` ### \u3252 \u73AF\u5F62\u94FE\u8868 \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u94FE\u8868\uFF0C\u5224\u65AD\u94FE\u8868\u4E2D\u662F\u5426\u6709\u73AF\u3002 <p>\u4E3A\u4E86\u8868\u793A\u7ED9\u5B9A\u94FE\u8868\u4E2D\u7684\u73AF\uFF0C\u6211\u4EEC\u4F7F\u7528\u6574\u6570 pos \u6765\u8868\u793A\u94FE\u8868\u5C3E\u8FDE\u63A5\u5230\u94FE\u8868\u4E2D\u7684\u4F4D\u7F6E\uFF08\u7D22\u5F15\u4ECE 0 \u5F00\u59CB\uFF09\u3002 \u5982\u679C pos \u662F -1\uFF0C\u5219\u5728\u8BE5\u94FE\u8868\u4E2D\u6CA1\u6709\u73AF\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Ahead = [3,2,0,-4], pos = 1 \u8F93\u51FA\uFF1Atrue \u89E3\u91CA\uFF1A\u94FE\u8868\u4E2D\u6709\u4E00\u4E2A\u73AF\uFF0C\u5176\u5C3E\u90E8\u8FDE\u63A5\u5230\u7B2C\u4E8C\u4E2A\u8282\u70B9\u3002</p><p>\u793A\u4F8B\xA02\uFF1A</p><p>\u8F93\u5165\uFF1Ahead = [1,2], pos = 0 \u8F93\u51FA\uFF1Atrue \u89E3\u91CA\uFF1A\u94FE\u8868\u4E2D\u6709\u4E00\u4E2A\u73AF\uFF0C\u5176\u5C3E\u90E8\u8FDE\u63A5\u5230\u7B2C\u4E00\u4E2A\u8282\u70B9\u3002</p><p>\u793A\u4F8B 3\uFF1A</p><p>\u8F93\u5165\uFF1Ahead = [1], pos = -1 \u8F93\u51FA\uFF1Afalse \u89E3\u91CA\uFF1A\u94FE\u8868\u4E2D\u6CA1\u6709\u73AF\u3002</p><p>\u8FDB\u9636\uFF1A</p><p>\u4F60\u80FD\u7528 O(1)\uFF08\u5373\uFF0C\u5E38\u91CF\uFF09\u5185\u5B58\u89E3\u51B3\u6B64\u95EE\u9898\u5417\uFF1F</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u73AF\u5F62\u68C0\u6D4B\u539F\u7406
  - \u4E24\u4E2A\u6307\u9488\u4E00\u4E2A\u5FEB\uFF0C\u4E00\u4E2A\u6162\uFF0C\u540C\u65F6\u51FA\u53D1\u3002\u5FEB\u7684\u548C\u6162\u7684\u76F8\u9047
  - \u5FEB\u7684\u5728\u6162\u7684\u540E\u9762
\`\`\`js
// \u58F0\u660E\u94FE\u8868\u7684\u8282\u70B9
class Node {
    constructor(value) {
        this.val = value;
        this.next = undefined
    }
}

// \u58F0\u660E\u94FE\u8868\u7684\u6570\u636E\u7ED3\u6784
class NodeList {
    constructor(arr) {
        // \u58F0\u660E\u94FE\u8868\u7684\u5934\u90E8\u8282\u70B9
        let head = new Node(arr.shift())
        let next = head
        arr.forEach(item =&gt; {
            next.next = new Node(item)
            next = next.next
        })
        return head
    }
}

export default function isCircle(head) {
    // \u6162\u6307\u9488
    let slow = head
        // \u5FEB\u6307\u9488
    let fast = head.next
    while (1) {
        if (!fast || !fast.next) {
            return false
        } else if (fast === slow || fast.next === slow) {
            return true
        } else {
            slow = slow.next
            fast = fast.next.next
        }
    }
}
export {
    Node,
    NodeList
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u68C0\u6D4B</span>
<span class="token keyword">let</span> head<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">NodeList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// \u8BBE\u7F6E\u73AF\u72B6</span>
head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token operator">=</span>head<span class="token punctuation">.</span>next
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isCircle</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u636E\u7ED3\u6784\u4E4B\u77E9\u9635" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784\u4E4B\u77E9\u9635" aria-hidden="true">#</a> \u6570\u636E\u7ED3\u6784\u4E4B\u77E9\u9635</h2><ul><li>\u4E8C\u7EF4\u77E9\u9635</li></ul><h3 id="_23-\u87BA\u65CB\u77E9\u9635" tabindex="-1"><a class="header-anchor" href="#_23-\u87BA\u65CB\u77E9\u9635" aria-hidden="true">#</a> \u3253 \u87BA\u65CB\u77E9\u9635</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u7ED9\u5B9A\u4E00\u4E2A\u5305\u542B m x n \u4E2A\u5143\u7D20\u7684\u77E9\u9635\uFF08m \u884C<span class="token punctuation">,</span> n \u5217\uFF09\uFF0C\u8BF7\u6309\u7167\u987A\u65F6\u9488\u87BA\u65CB\u987A\u5E8F\uFF0C\u8FD4\u56DE\u77E9\u9635\u4E2D\u7684\u6240\u6709\u5143\u7D20\u3002

\u793A\u4F8B <span class="token number">1</span><span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span>
<span class="token punctuation">[</span>
 <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
 <span class="token punctuation">[</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
 <span class="token punctuation">[</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span> <span class="token punctuation">]</span>
<span class="token punctuation">]</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
\u793A\u4F8B <span class="token number">2</span><span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span>
<span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u62C6\u89E3\u6210\u4E00\u6B65\u4E00\u6B65\u7684\uFF0C\u800C\u4E14\u8981\u62C6\u6210\u6BCF\u4E00\u6B65\u662F\u76F8\u540C\u7684 <ul><li>\u7B2C\u4E00\u5708\u662F\u7B2C\u4E00\u884C\u5168\u90E8\uFF0C\u7B2C\u4E8C\u884C\u5230\u5012\u6570\u7B2C\u4E8C\u884C\u662F\u7B2C\u4E00\u4E2A\u548C\u6700\u540E\u4E00\u4E2A\uFF0C\u6700\u540E\u4E00\u884C\u5168\u90E8\uFF0C\u63A5\u7740\u91CC\u9762\u7684\u4F5C\u4E3A\u4E00\u4E2A\u65B0\u7684\u77E9\u9635\uFF0C\u7EE7\u7EED\u91CD\u590D\u8FD9\u4E2A\u6B65\u9AA4\u3002</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5904\u7406\u6BCF\u4E00\u5708\u7684\u6570\u636E\u904D\u5386\u8FC7\u7A0B</span>
    <span class="token keyword">let</span> <span class="token function-variable function">map</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7B2C\u4E00\u884C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                r <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u6700\u540E\u4E00\u884C</span>
                r <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u5176\u5B83\u884C\u6700\u540E\u4E00\u4E2A</span>
                r<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u53BB\u6389\u7B2C\u4E00\u884C</span>
        arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u53BB\u6389\u6700\u540E\u4E00\u884C</span>
        arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u53BB\u6389\u5269\u4F59\u884C\u7684\u7B2C\u4E00\u4E2A\uFF0C\u5E76\u653E\u5165\u7ED3\u679C\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u8FD8\u6709\u5176\u5B83\u884C\u6CA1\u5904\u7406</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">map</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> r<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u5426\u5219\u76F4\u63A5\u8FD4\u56DE\u7ED3\u679C\u6570\u7EC4r</span>
            <span class="token keyword">return</span> r
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">map</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),$n=e(` ### \u3254 \u65CB\u8F6C\u56FE\u50CF \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A n\xA0\xD7\xA0n \u7684\u4E8C\u7EF4\u77E9\u9635\u8868\u793A\u4E00\u4E2A\u56FE\u50CF\u3002 <p>\u5C06\u56FE\u50CF\u987A\u65F6\u9488\u65CB\u8F6C 90 \u5EA6\u3002</p><p>\u8BF4\u660E\uFF1A</p><p>\u4F60\u5FC5\u987B\u5728\u539F\u5730\u65CB\u8F6C\u56FE\u50CF\uFF0C\u8FD9\u610F\u5473\u7740\u4F60\u9700\u8981\u76F4\u63A5\u4FEE\u6539\u8F93\u5165\u7684\u4E8C\u7EF4\u77E9\u9635\u3002\u8BF7\u4E0D\u8981\u4F7F\u7528\u53E6\u4E00\u4E2A\u77E9\u9635\u6765\u65CB\u8F6C\u56FE\u50CF\u3002</p><p>\u793A\u4F8B 1:</p><p>\u7ED9\u5B9A matrix = [ [1,2,3], [4,5,6], [7,8,9] ],</p><p>\u539F\u5730\u65CB\u8F6C\u8F93\u5165\u77E9\u9635\uFF0C\u4F7F\u5176\u53D8\u4E3A: [ [7,4,1], [8,5,2], [9,6,3] ] \u793A\u4F8B 2:</p><p>\u7ED9\u5B9A matrix = [ [ 5, 1, 9,11], [ 2, 4, 8,10], [13, 3, 6, 7], [15,14,12,16] ],</p><p>\u539F\u5730\u65CB\u8F6C\u8F93\u5165\u77E9\u9635\uFF0C\u4F7F\u5176\u53D8\u4E3A: [ [15,13, 2, 5], [14, 3, 4, 1], [12, 6, 8, 9], [16, 7,10,11] ]</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u627E\u5230456\u8FD9\u4E2A\u8F74\uFF0C\u4EA4\u6362\u540E\u518D\u4EE5753\u4E3A\u8F74\uFF0C\u4EA4\u6362\u540E\u5373\u53EF
![\u65CB\u8F6C\u56FE\u50CF](./img/rotateImage.png)
\`\`\`js
function rotateImg(arr){

}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6n\u7684\u7EF4\u5EA6</span>
    <span class="token keyword">let</span> vecor <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
        <span class="token comment">// \u5782\u76F4\u7FFB\u8F6C</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> vecor <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> tmp<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> vecor<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>vecor <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>
            arr<span class="token punctuation">[</span>vecor <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5BF9\u89D2\u7EBF\u7FFB\u8F6C</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vecor<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> tmp<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> tmp
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),Wn=e(` ## \u3255 \u6570\u636E\u7ED3\u6784\u4E4B\u4E8C\u53C9\u6811 - \u7279\u6027 - \u4E00\u4E2A\u8282\u70B9\u53EA\u6709\u4E24\u4E2A\u5B50\u8282\u70B9\uFF0C\u5DE6\u8282\u70B9\u548C\u53F3\u8282\u70B9 ![\u4E8C\u53C9\u6811](./img/binaryTree.png) - \u5B9E\u73B0\u4E8C\u53C9\u6811\u7ED3\u6784 \`\`\`js // \u4E8C\u53C9\u6811\u7684\u8282\u70B9 class Node { constructor(val) { this.val = val this.left = this.right = undefined } } <p>class Tree { constructor(data) { // \u4E34\u65F6\u5B58\u50A8\u6240\u6709\u8282\u70B9\uFF0C\u65B9\u4FBF\u5BFB\u627E\u7236\u5B50\u8282\u70B9 let nodeList = [] // \u9876\u8282\u70B9 let root for (let i = 0, len = data.length; i &lt; len; i++) { let node = new Node(data[i]) nodeList.push(node) if (i &gt; 0) { // \u8BA1\u7B97\u5F53\u524D\u8282\u70B9\u5C5E\u4E8E\u54EA\u4E00\u5C42 let n = Math.floor(Math.sqrt(i + 1)) // \u8BB0\u5F55\u5F53\u524D\u5C42\u7684\u8D77\u59CB\u70B9 let q = Math.pow(2, n) - 1 // \u8BB0\u5F55\u4E0A\u4E00\u5C42\u7684\u8D77\u59CB\u70B9 p = Math.pow(2, n - 1) - 1 // \u627E\u5230\u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9 let parent = nodeList[p + Math.floor((i - q) / 2)] // \u5C06\u5F53\u524D\u8282\u70B9\u548C\u4E0A\u4E00\u5C42\u7684\u7236\u8282\u70B9\u505A\u5173\u8054 if (parent.left) { parent.right = node } else { parent.left = node } } } root = nodeList.shift() // \u91CA\u653E\u6570\u7EC4 nodeList.length = 0 return root } }</p><p>export default Tree</p><p>export { Node }</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;mark-cross&gt;&lt;/mark-cross&gt;
### \u3256 \u5BF9\u79F0\u4E8C\u53C9\u6811
\`\`\`js
\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u53C9\u6811\uFF0C\u68C0\u67E5\u5B83\u662F\u5426\u662F\u955C\u50CF\u5BF9\u79F0\u7684\u3002

\u4F8B\u5982\uFF0C\u4E8C\u53C9\u6811 [1,2,2,3,4,4,3] \u662F\u5BF9\u79F0\u7684\u3002

    1
   / \\
  2   2
 / \\ / \\
3  4 4  3
\u4F46\u662F\u4E0B\u9762\u8FD9\u4E2A [1,2,2,null,3,null,3] \u5219\u4E0D\u662F\u955C\u50CF\u5BF9\u79F0\u7684:

    1
   / \\
  2   2
   \\   \\
   3    3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+y+`" alt="\u5BF9\u79F0\u4E8C\u53C9\u6811"></p><ul><li>\u5DE6\u5B9A\u70B9\u7684\u5DE6\u8282\u70B9\u7B49\u4E8E\u53F3\u5B9A\u70B9\u7684\u53F3\u8282\u70B9\uFF0C\u4EE5\u6B64\u7C7B\u63A8</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E8C\u53C9\u6811\u7684\u8282\u70B9</span>
<span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val
        <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Tree</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E34\u65F6\u5B58\u50A8\u6240\u6709\u8282\u70B9\uFF0C\u65B9\u4FBF\u5BFB\u627E\u7236\u5B50\u8282\u70B9</span>
        <span class="token keyword">let</span> nodeList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token comment">// \u9876\u8282\u70B9</span>
        <span class="token keyword">let</span> root
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            nodeList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8BA1\u7B97\u5F53\u524D\u8282\u70B9\u5C5E\u4E8E\u54EA\u4E00\u5C42</span>
                <span class="token keyword">let</span> n <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token comment">// \u8BB0\u5F55\u5F53\u524D\u5C42\u7684\u8D77\u59CB\u70B9</span>
                <span class="token keyword">let</span> q <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>
                    <span class="token comment">// \u8BB0\u5F55\u4E0A\u4E00\u5C42\u7684\u8D77\u59CB\u70B9</span>
                p <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>
                    <span class="token comment">// \u627E\u5230\u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9</span>
                <span class="token keyword">let</span> parent <span class="token operator">=</span> nodeList<span class="token punctuation">[</span>p <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">-</span> q<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
                    <span class="token comment">// \u5C06\u5F53\u524D\u8282\u70B9\u548C\u4E0A\u4E00\u5C42\u7684\u7236\u8282\u70B9\u505A\u5173\u8054</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    parent<span class="token punctuation">.</span>right <span class="token operator">=</span> node
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    parent<span class="token punctuation">.</span>left <span class="token operator">=</span> node
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        root <span class="token operator">=</span> nodeList<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment">// \u91CA\u653E\u6570\u7EC4</span>
        nodeList<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">return</span> root
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token function">isSymmetry</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> <span class="token function-variable function">walk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>left <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>left <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>right<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token operator">!</span>left <span class="token operator">&amp;&amp;</span> right<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span>val <span class="token operator">!==</span> right<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token function">walk</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>left<span class="token punctuation">,</span> right<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">walk</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>right<span class="token punctuation">,</span> right<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">walk</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> root<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Tree

<span class="token keyword">export</span> <span class="token punctuation">{</span>
    Node
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> root <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Tree</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Tree<span class="token punctuation">.</span><span class="token function">isSymmetry</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,9),Xn=e(` ### \u3257 \u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811 \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u53C9\u6811\uFF0C\u5224\u65AD\u5176\u662F\u5426\u662F\u4E00\u4E2A\u6709\u6548\u7684\u4E8C\u53C9\u641C\u7D22\u6811\u3002 <p>\u5047\u8BBE\u4E00\u4E2A\u4E8C\u53C9\u641C\u7D22\u6811\u5177\u6709\u5982\u4E0B\u7279\u5F81\uFF1A</p><p>\u8282\u70B9\u7684\u5DE6\u5B50\u6811\u53EA\u5305\u542B\u5C0F\u4E8E\u5F53\u524D\u8282\u70B9\u7684\u6570\u3002 \u8282\u70B9\u7684\u53F3\u5B50\u6811\u53EA\u5305\u542B\u5927\u4E8E\u5F53\u524D\u8282\u70B9\u7684\u6570\u3002 \u6240\u6709\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u81EA\u8EAB\u5FC5\u987B\u4E5F\u662F\u4E8C\u53C9\u641C\u7D22\u6811\u3002 \u793A\u4F8B\xA01:</p><p>\u8F93\u5165: 2 / <br> 1 3 \u8F93\u51FA: true \u793A\u4F8B\xA02:</p><p>\u8F93\u5165: 5 / <br> 1 4 \xA0 / <br> \xA0 3 6 \u8F93\u51FA: false \u89E3\u91CA: \u8F93\u5165\u4E3A: [5,1,4,null,null,3,6]\u3002 \xA0 \u6839\u8282\u70B9\u7684\u503C\u4E3A 5 \uFF0C\u4F46\u662F\u5176\u53F3\u5B50\u8282\u70B9\u503C\u4E3A 4 \u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u6240\u6709\u7684\u5B50\u6811\u8DF3\u51FA\u6765\uFF0C\u770B\u770B\u662F\u4E0D\u662F\u5DE6\u8FB9\u5C0F\u53F3\u8FB9\u5927\u3002\u5982\u679C\u6240\u6709\u90FD\u6EE1\u8DB3\uFF0C\u90A3\u6574\u4E2A\u6811\u90FD\u6EE1\u8DB3\u4E86
\`\`\`js
// \u4E8C\u53C9\u6811\u7684\u8282\u70B9
class Node {
    constructor(val) {
        this.val = val
        this.left = this.right = undefined
    }
}

class Tree {
    constructor(data) {
        let root = new Node(data.shift())
            // \u904D\u5386\u6240\u6709\u7684\u6570\u636E\uFF0C\u9010\u6E10\u63D2\u5165\u5230\u5F53\u524D\u8FD9\u8BFE\u641C\u7D22\u6811\u4E2D\u53BB
        data.forEach(item =&gt; {
            this.insert(root, item)
        })
        return root
    }
    insert(node, data) {
        if (node.val &gt; data) {
            if (node.left === undefined) {
                node.left = new Node(data)
            } else {
                this.insert(node.left, data)
            }
        } else {
            if (node.right === undefined) {
                node.right = new Node(data)
            } else {
                this.insert(node.right, data)
            }
        }
    }
    static walk(root) {
        if (!root.left &amp;&amp; !root.right) {
            return true
        } else if (((root.left &amp;&amp; root.val &lt; root.left.val) || (root.right &amp;&amp; root.val &gt; root.right.val))) {
            return false
        } else {
            return Tree.walk(root.left) &amp;&amp; Tree.walk(root.right)
        }
    }
}
export default Tree
export {
    Node
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4E8C\u53C9\u641C\u7D22\u6811\u5BF9\u4E8E\u6392\u5E8F\u6709\u5F88\u5927\u53C2\u8003\u3002 <ul><li>\u505A\u597D\u4E86\u6392\u5E8F\u540E\uFF0C\u63D2\u5165\u548C\u5220\u9664\u975E\u5E38\u597D\u64CD\u4F5C\u3002</li></ul></li></ul>`,7),Un=e(' ## \u3258 \u6570\u636E\u7ED3\u6784\u4E4B\u5806 - \u6982\u5FF5 - \u5FC5\u987B\u662F\u5B8C\u5168\u4E8C\u53C9\u6811(n-1\u5C42\u5FC5\u987B\u662F\u6EE1\u4E8C\u53C9\u6811) - \u4EFB\u4E00\u7ED3\u70B9\u7684\u503C\u662F\u5176\u5B50\u6811\u6240\u6709\u7ED3\u70B9\u7684\u6700\u5927\u503C\uFF08\u6700\u5927\u5806\uFF09\u6216\u6700\u5C0F\u503C\uFF08\u6700\u5C0F\u5806\uFF09 <p><img src="'+w+'" alt="\u5806"></p><ul><li><p>\u4F5C\u7528</p><ul><li>\u5229\u7528\u5806\u505A\u6392\u5E8F\u548C\u67E5\u627E</li></ul></li><li><p>\u5806\u6392\u5E8F</p><ul><li>\u5B8C\u5168\u4E8C\u53C9\u6811\u8282\u70B9\u4E4B\u95F4\u7684\u5173\u7CFB <ul><li>\u5982\u679C\u7236\u8282\u70B9\u662Fi\uFF0C\u5B50\u8282\u70B9(\u5DE6)2<em>i+1\uFF0C\u5B50\u8282\u70B9(\u53F3)2</em>i+2</li></ul></li></ul><p><img src="'+x+'" alt="\u5B8C\u5168\u4E8C\u53C9\u6811\u8282\u70B9\u5173\u7CFB"></p><ul><li>\u666E\u901A\u7684\u5B8C\u5168\u4E8C\u53C9\u6811\u6784\u5EFA\u6700\u5927\u5806 <ul><li>\u627E\u5230\u6700\u540E\u4E00\u4E2A\u7236\u8282\u70B9\uFF0C\u9A8C\u8BC1\u7236\u8282\u70B9\u662F\u4E0D\u662F\u5B50\u6811\u4E2D\u7684\u6700\u5927\u503C\uFF0C\u518D\u4F9D\u6B21\u5F80\u524D\u5224\u65AD\u6BCF\u4E2A\u5B50\u6811\uFF0C\u4E0D\u662F\u7684\u4EA4\u6362\u6210\u6700\u5927\u503C\u3002\u5982\u679C\u4EA4\u6362\u540E\u5BF9\u67D0\u4E2A\u5B50\u6811\u8FDB\u884C\u4E86\u7834\u574F\uFF0C\u90A3\u9700\u8981\u518D\u6B21\u9A8C\u8BC1\u8FD9\u4E2A\u5B50\u6811\u3002\u627E\u5230\u7B2C\u4E00\u4E2A\u9876\u70B9\u7684\u6700\u5927\u503C\u540E\u3002\u79FB\u51FA\u6700\u5927\u503C\uFF0C\u628A\u53F3\u4E0B\u89D2\u7684\u503C\u653E\u5230\u6700\u5927\u503C\u4F4D\u7F6E\u4E0A\uFF0C\u7EE7\u7EED\u6784\u5EFA\u6700\u5927\u5806\uFF0C\u627E\u51FA\u7B2C\u4E8C\u5927\u7684\u503C\u3002\u4EE5\u6B64\u7C7B\u63A8\u3002\u76F4\u5230\u53EA\u5269\u4E00\u4E2A\u503C\u3002 <img src="'+j+`" alt="\u6784\u5EFA\u6700\u5927\u5806"></li></ul></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Heap</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data
    <span class="token punctuation">}</span>
    <span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> iArr <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data
            <span class="token keyword">let</span> n <span class="token operator">=</span> iArr<span class="token punctuation">.</span>lenth
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> iArr
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    Heap<span class="token punctuation">.</span><span class="token function">maxHeapify</span><span class="token punctuation">(</span>iArr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    Heap<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span>iArr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> j<span class="token punctuation">)</span>
                    Heap<span class="token punctuation">.</span><span class="token function">maxHeapify</span><span class="token punctuation">(</span>iArr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> j<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> iArr
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u4EA4\u6362\u4E24\u4E2A\u5143\u7D20</span>
    <span class="token keyword">static</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">===</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">let</span> c <span class="token operator">=</span> arr<span class="token punctuation">[</span>a<span class="token punctuation">]</span>
            arr<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>b<span class="token punctuation">]</span>
            arr<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> c
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6784\u5EFA\u6700\u5927\u5806</span>
    <span class="token keyword">static</span> <span class="token function">maxHeapify</span><span class="token punctuation">(</span><span class="token parameter">Arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5DE6\u8282\u70B9\uFF08\u7D22\u5F15\uFF09</span>
        <span class="token keyword">let</span> l <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span>
            <span class="token comment">// \u53F3\u8282\u70B9</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span>
        <span class="token keyword">let</span> largest <span class="token operator">=</span> i
            <span class="token comment">// \u7236\u8282\u70B9i\u5206\u522B\u548C\u5DE6\u8282\u70B9l\u548C\u53F3\u8282\u70B9r\u505A\u6BD4\u8F83\u53D6\u6700\u5927</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> size <span class="token operator">&amp;&amp;</span> Arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&gt;</span> Arr<span class="token punctuation">[</span>largest<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            largest <span class="token operator">=</span> l
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;=</span> size <span class="token operator">&amp;&amp;</span> Arr<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">&gt;</span> Arr<span class="token punctuation">[</span>largest<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            largest <span class="token operator">=</span> r
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>largest <span class="token operator">!=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Heap<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span>Arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> largest<span class="token punctuation">)</span>
            Heap<span class="token punctuation">.</span><span class="token function">maxHeapify</span><span class="token punctuation">(</span>Arr<span class="token punctuation">,</span> largest<span class="token punctuation">,</span> size<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Heap
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Kn=e(` ### \u3259 \u6839\u636E\u5B57\u7B26\u51FA\u73B0\u9891\u7387\u6392\u5E8F - \u7528\u5806\u6392\u5E8F\u505A\u8FD9\u9898\u65F6\u95F4\u590D\u6742\u5EA6\u548C\u7A7A\u95F4\u590D\u6742\u5EA6\u662F\u6700\u4F4E\u7684 \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u8BF7\u5C06\u5B57\u7B26\u4E32\u91CC\u7684\u5B57\u7B26\u6309\u7167\u51FA\u73B0\u7684\u9891\u7387\u964D\u5E8F\u6392\u5217\u3002 <p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: &quot;tree&quot;</p><p>\u8F93\u51FA: &quot;eert&quot;</p><p>\u89E3\u91CA: &#39;e&#39;\u51FA\u73B0\u4E24\u6B21\uFF0C&#39;r&#39;\u548C&#39;t&#39;\u90FD\u53EA\u51FA\u73B0\u4E00\u6B21\u3002 \u56E0\u6B64&#39;e&#39;\u5FC5\u987B\u51FA\u73B0\u5728&#39;r&#39;\u548C&#39;t&#39;\u4E4B\u524D\u3002\u6B64\u5916\uFF0C&quot;eetr&quot;\u4E5F\u662F\u4E00\u4E2A\u6709\u6548\u7684\u7B54\u6848\u3002 \u793A\u4F8B 2:</p><p>\u8F93\u5165: &quot;cccaaa&quot;</p><p>\u8F93\u51FA: &quot;cccaaa&quot;</p><p>\u89E3\u91CA: &#39;c&#39;\u548C&#39;a&#39;\u90FD\u51FA\u73B0\u4E09\u6B21\u3002\u6B64\u5916\uFF0C&quot;aaaccc&quot;\u4E5F\u662F\u6709\u6548\u7684\u7B54\u6848\u3002 \u6CE8\u610F&quot;cacaca&quot;\u662F\u4E0D\u6B63\u786E\u7684\uFF0C\u56E0\u4E3A\u76F8\u540C\u7684\u5B57\u6BCD\u5FC5\u987B\u653E\u5728\u4E00\u8D77\u3002 \u793A\u4F8B 3:</p><p>\u8F93\u5165: &quot;Aabb&quot;</p><p>\u8F93\u51FA: &quot;bbAa&quot;</p><p>\u89E3\u91CA: \u6B64\u5916\uFF0C&quot;bbaA&quot;\u4E5F\u662F\u4E00\u4E2A\u6709\u6548\u7684\u7B54\u6848\uFF0C\u4F46&quot;Aabb&quot;\u662F\u4E0D\u6B63\u786E\u7684\u3002 \u6CE8\u610F&#39;A&#39;\u548C&#39;a&#39;\u88AB\u8BA4\u4E3A\u662F\u4E24\u79CD\u4E0D\u540C\u7684\u5B57\u7B26\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
\`\`\`js
class Heap {
    constructor(str) {
        let map = new Map()
        str.split(&#39;&#39;).forEach(item =&gt; {
            if (map.has(item)) {
                map.set(item, map.get(item) + 1)
            } else {
                map.set(item, 1)
            }
        })
        this.map = map
        this.data = Array.from(map.values())
    }
    sort() {
        let iArr = this.data
        let n = iArr.lenth
        if (n &lt;= 1) {
            return iArr
        } else {
            for (let i = Math.florr(n / 2); i &gt;= 0; i--) {
                Heap.maxHeapify(iArr, i, n)
            }
            for (let j = 0; j &lt; n; j++) {
                Heap.swap(iArr, 0, n - 1 - j)
                Heap.maxHeapify(iArr, 0, n - 1 - j)
            }
            return iArr
        }
    }
    toString() {
            let arr = this.sort()
            let str = []
            while (arr.length) {
                let top = arr.pop()
                for (let [k, v] of this.map) {
                    if (v === top) {
                        str.push(k.repeat(v))
                        this.map.delete(k)
                        break
                    }
                }
            }
            return str.join(&#39;&#39;)
        }
        // \u4EA4\u6362\u4E24\u4E2A\u5143\u7D20
    static swap(arr, a, b) {
            if (a === b) {
                return &#39;&#39;
            }
            let c = arr[a]
            arr[a] = arr[b]
            arr[b] = c
        }
        // \u6784\u5EFA\u6700\u5927\u5806
    static maxHeapify(Arr, i, size) {
        // \u5DE6\u8282\u70B9\uFF08\u7D22\u5F15\uFF09
        let l = i * 2 + 1
            // \u53F3\u8282\u70B9
        let r = i * 2 + 2
        let largest = i
            // \u7236\u8282\u70B9i\u5206\u522B\u548C\u5DE6\u8282\u70B9l\u548C\u53F3\u8282\u70B9r\u505A\u6BD4\u8F83\u53D6\u6700\u5927
        if (l &lt;= size &amp;&amp; Arr[l] &gt; Arr[largest]) {
            largest = l
        }
        if (r &lt;= size &amp;&amp; Arr[r] &gt; Arr[largest]) {
            largest = r
        }
        if (largest != i) {
            Heap.swap(Arr, i, largest)
            Heap.maxHeapify(Arr, largest, size)
        }
    }
}
export default Heap
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),Vn=e(` ### \u325A \u8D85\u7EA7\u4E11\u6570 \`\`\`js \u7F16\u5199\u4E00\u6BB5\u7A0B\u5E8F\u6765\u67E5\u627E\u7B2C n \u4E2A\u8D85\u7EA7\u4E11\u6570\u3002 <p>\u8D85\u7EA7\u4E11\u6570\u662F\u6307\u5176\u6240\u6709\u8D28\u56E0\u6570\u90FD\u662F\u957F\u5EA6\u4E3A\xA0k\xA0\u7684\u8D28\u6570\u5217\u8868\xA0primes\xA0\u4E2D\u7684\u6B63\u6574\u6570\u3002</p><p>\u793A\u4F8B:</p><p>\u8F93\u5165: n = 12, primes = [2,7,13,19] \u8F93\u51FA: 32 \u89E3\u91CA: \u7ED9\u5B9A\u957F\u5EA6\u4E3A 4 \u7684\u8D28\u6570\u5217\u8868 primes = [2,7,13,19]\uFF0C\u524D 12 \u4E2A\u8D85\u7EA7\u4E11\u6570\u5E8F\u5217\u4E3A\uFF1A[1,2,4,7,8,13,14,16,19,26,28,32] \u3002 \u8BF4\u660E:</p><p>1\xA0\u662F\u4EFB\u4F55\u7ED9\u5B9A\xA0primes\xA0\u7684\u8D85\u7EA7\u4E11\u6570\u3002 \xA0\u7ED9\u5B9A\xA0primes\xA0\u4E2D\u7684\u6570\u5B57\u4EE5\u5347\u5E8F\u6392\u5217\u3002 0 &lt; k \u2264 100, 0 &lt; n \u2264 106, 0 &lt; primes[i] &lt; 1000 \u3002 \u7B2C\xA0n\xA0\u4E2A\u8D85\u7EA7\u4E11\u6570\u786E\u4FDD\u5728 32 \u4F4D\u6709\u7B26\u6574\u6570\u8303\u56F4\u5185\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u6982\u5FF5
    - \u8D28\u6570
        - \u5927\u4E8E1\u7684\u81EA\u7136\u6570\u4E2D\uFF0C\u9664\u4E861\u548C\u4ED6\u672C\u8EAB\u6CA1\u6709\u5176\u4ED6\u56E0\u6570
    - \u8D28\u56E0\u6570
        - \u4E00\u4E2A\u6570\u7684\u7EA6\u6570\uFF0C\u5E76\u4E14\u662F\u8D28\u6570
    - \u4E11\u6570
        - \u53EA\u5305\u542B\u56E0\u5B502\uFF0C3\uFF0C5\u7684\u6B63\u6574\u6570\uFF0C1\u4E5F\u662F\u4E11\u6570

- \u89E3\u9898\u601D\u8DEF
    - \u6C42\u89E3\u4EFB\u610F\u6574\u6570\u7684\u8D28\u56E0\u6570
    - \u8D28\u56E0\u6570\u662F\u5426\u5728\u6307\u5B9A\u8D28\u56E0\u6570\u8303\u56F4\u5185
    - \u662F\u5426\u8FBE\u5230\u6307\u5B9A\u4E2A\u6570n
\`\`\`js
// \u5806\u67E5\u627E
class Heap {
    constructor(arr) {
        this.data = arr
        this.max = arr.length
        this.sort()
    }
    sort() {
        let iArr = this.data
        let n = iArr.lenth
        if (n &lt;= 1) {
            return iArr
        } else {
            for (let i = Math.floor(n / 2); i &gt;= 0; i--) {
                Heap.maxHeapify(iArr, i, n)
            }
            return iArr
        }
    }
    find(val, i = 0) {
            let arr = this.data
            if (val &gt; arr[i] || i &gt; this.max) {
                return false
            } else if (val === arr[i]) {
                return val
            } else {
                return this.find(val, i * 2 + 1 || this.find(val, i * 2 + 2))
            }
        }
        // \u4EA4\u6362\u4E24\u4E2A\u5143\u7D20
    static swap(arr, a, b) {
            if (a === b) {
                return &#39;&#39;
            }
            let c = arr[a]
            arr[a] = arr[b]
            arr[b] = c
        }
        // \u6784\u5EFA\u6700\u5927\u5806
    static maxHeapify(Arr, i, size) {
        // \u5DE6\u8282\u70B9\uFF08\u7D22\u5F15\uFF09
        let l = i * 2 + 1
            // \u53F3\u8282\u70B9
        let r = i * 2 + 2
        let largest = i
            // \u7236\u8282\u70B9i\u5206\u522B\u548C\u5DE6\u8282\u70B9l\u548C\u53F3\u8282\u70B9r\u505A\u6BD4\u8F83\u53D6\u6700\u5927
        if (l &lt;= size &amp;&amp; Arr[l] &gt; Arr[largest]) {
            largest = l
        }
        if (r &lt;= size &amp;&amp; Arr[r] &gt; Arr[largest]) {
            largest = r
        }
        if (largest != i) {
            Heap.swap(Arr, i, largest)
            Heap.maxHeapify(Arr, largest, size)
        }
    }
}
export default Heap
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Ugly</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> primes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>n <span class="token operator">=</span> n
        <span class="token keyword">this</span><span class="token punctuation">.</span>primes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Heap</span><span class="token punctuation">(</span>primes<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">getAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8D85\u7EA7\u4E11\u6570\u5217\u8868</span>
            <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
            <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span>
            <span class="token keyword">let</span> primes <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>primes
            <span class="token keyword">while</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> arr <span class="token operator">=</span> Ugly<span class="token punctuation">.</span><span class="token function">getPrimes</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                <span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">0</span>
                <span class="token keyword">let</span> l <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>primes<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">break</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// k===l\u6709\u4E24\u79CD\u60C5\u51B5\uFF08\u5F53\u524D\u6570\u6CA1\u6709\u8D28\u56E0\u6570\u6216\u8005\u6240\u6709\u7684\u8D28\u56E0\u6570\u90FD\u5728\u6307\u5B9A\u5217\u8868\u4E2D\uFF09</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">===</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>primes<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                i<span class="token operator">++</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> res<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u8BA1\u7B97\u6307\u5B9A\u6B63\u6574\u6570n\u7684\u8D28\u56E0\u6570</span>
    <span class="token keyword">static</span> <span class="token function">getPrimes</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token function-variable function">prime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5B58\u50A8\u6240\u6709\u7684\u8D28\u56E0\u6570</span>
            <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> i <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">prime</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> arr
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">prime</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Ugly
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8FDB\u9636\u7B97\u6CD5-\u601D\u60F3" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u9636\u7B97\u6CD5-\u601D\u60F3" aria-hidden="true">#</a> \u8FDB\u9636\u7B97\u6CD5\uFF08\u601D\u60F3\uFF09</h2><ul><li>\u8D2A\u5FC3\u7B97\u6CD5\u601D\u60F3</li><li>\u52A8\u6001\u89C4\u5212\u601D\u60F3</li></ul><h2 id="\u8FDB\u9636\u7B97\u6CD5\u4E4B\u8D2A\u5FC3\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u9636\u7B97\u6CD5\u4E4B\u8D2A\u5FC3\u7B97\u6CD5" aria-hidden="true">#</a> \u8FDB\u9636\u7B97\u6CD5\u4E4B\u8D2A\u5FC3\u7B97\u6CD5</h2><ul><li>\u6982\u5FF5 <ul><li>\u901A\u8FC7\u6BCF\u4E00\u6B65\u7684\u6700\u4F18\u89E3\u6765\u8FBE\u5230\u6574\u4F53\u6700\u4F18\u89E3\u3002\u4F46\u4E0D\u4E00\u5B9A\u662F\u95EE\u9898\u7684\u6700\u4F18\u89E3\u3002</li><li>\u9009\u62E9\u7684\u8D2A\u5FC3\u7B56\u7565\u5FC5\u987B\u5177\u5907\u65E0\u540E\u6548\u6027\uFF08\u67D0\u4E2A\u72B6\u6001\u4EE5\u524D\u7684\u8FC7\u7A0B\u4E0D\u4F1A\u5F71\u54CD\u4EE5\u540E\u7684\u72B6\u6001\uFF0C\u53EA\u4E0E\u5F53\u524D\u72B6\u6001\u6709\u5173\uFF09</li></ul></li><li>\u5F53\u4E00\u4E2A\u95EE\u9898\u7279\u522B\u62BD\u8C61\uFF0C\u7279\u522B\u590D\u6742\u7684\u65F6\u5019\uFF0C\u53C8\u627E\u4E0D\u5230\u89C4\u5F8B\uFF0C\u4E0D\u77E5\u9053\u600E\u4E48\u529E\uFF0C\u53EF\u4EE5\u8003\u8651\u8D2A\u5FC3\u7B97\u6CD5\uFF0C\u901A\u8FC7\u4E0D\u65AD\u4F18\u5316\u7B56\u7565\uFF0C\u9760\u8FD1\u6700\u4F18\u89E3\u3002</li></ul>`,11),Jn=e(` ### \u325B \u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5B83\u7684\u7B2C\xA0i \u4E2A\u5143\u7D20\u662F\u4E00\u652F\u7ED9\u5B9A\u80A1\u7968\u7B2C i \u5929\u7684\u4EF7\u683C\u3002 <p>\u8BBE\u8BA1\u4E00\u4E2A\u7B97\u6CD5\u6765\u8BA1\u7B97\u4F60\u6240\u80FD\u83B7\u53D6\u7684\u6700\u5927\u5229\u6DA6\u3002\u4F60\u53EF\u4EE5\u5C3D\u53EF\u80FD\u5730\u5B8C\u6210\u66F4\u591A\u7684\u4EA4\u6613\uFF08\u591A\u6B21\u4E70\u5356\u4E00\u652F\u80A1\u7968\uFF09\u3002</p><p>\u6CE8\u610F\uFF1A\u4F60\u4E0D\u80FD\u540C\u65F6\u53C2\u4E0E\u591A\u7B14\u4EA4\u6613\uFF08\u4F60\u5FC5\u987B\u5728\u518D\u6B21\u8D2D\u4E70\u524D\u51FA\u552E\u6389\u4E4B\u524D\u7684\u80A1\u7968\uFF09\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: [7,1,5,3,6,4] \u8F93\u51FA: 7 \u89E3\u91CA: \u5728\u7B2C 2 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 1\uFF09\u7684\u65F6\u5019\u4E70\u5165\uFF0C\u5728\u7B2C 3 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 5\uFF09\u7684\u65F6\u5019\u5356\u51FA, \u8FD9\u7B14\u4EA4\u6613\u6240\u80FD\u83B7\u5F97\u5229\u6DA6 = 5-1 = 4 \u3002 \xA0 \u968F\u540E\uFF0C\u5728\u7B2C 4 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 3\uFF09\u7684\u65F6\u5019\u4E70\u5165\uFF0C\u5728\u7B2C 5 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 6\uFF09\u7684\u65F6\u5019\u5356\u51FA, \u8FD9\u7B14\u4EA4\u6613\u6240\u80FD\u83B7\u5F97\u5229\u6DA6 = 6-3 = 3 \u3002 \u793A\u4F8B 2:</p><p>\u8F93\u5165: [1,2,3,4,5] \u8F93\u51FA: 4 \u89E3\u91CA: \u5728\u7B2C 1 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 1\uFF09\u7684\u65F6\u5019\u4E70\u5165\uFF0C\u5728\u7B2C 5 \u5929 \uFF08\u80A1\u7968\u4EF7\u683C = 5\uFF09\u7684\u65F6\u5019\u5356\u51FA, \u8FD9\u7B14\u4EA4\u6613\u6240\u80FD\u83B7\u5F97\u5229\u6DA6 = 5-1 = 4 \u3002 \xA0 \u6CE8\u610F\u4F60\u4E0D\u80FD\u5728\u7B2C 1 \u5929\u548C\u7B2C 2 \u5929\u63A5\u8FDE\u8D2D\u4E70\u80A1\u7968\uFF0C\u4E4B\u540E\u518D\u5C06\u5B83\u4EEC\u5356\u51FA\u3002 \xA0 \u56E0\u4E3A\u8FD9\u6837\u5C5E\u4E8E\u540C\u65F6\u53C2\u4E0E\u4E86\u591A\u7B14\u4EA4\u6613\uFF0C\u4F60\u5FC5\u987B\u5728\u518D\u6B21\u8D2D\u4E70\u524D\u51FA\u552E\u6389\u4E4B\u524D\u7684\u80A1\u7968\u3002 \u793A\u4F8B\xA03:</p><p>\u8F93\u5165: [7,6,4,3,1] \u8F93\u51FA: 0 \u89E3\u91CA: \u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B, \u6CA1\u6709\u4EA4\u6613\u5B8C\u6210, \u6240\u4EE5\u6700\u5927\u5229\u6DA6\u4E3A 0\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
- \u7B56\u75651\uFF1A\u4ECE\u6700\u4F4E\u70B9\u4E70\u5165\uFF0C\u5728\u6700\u9AD8\u70B9\u5356\u51FA\uFF08\u8FFD\u6C42\u5355\u8BCD\u5229\u76CA\uFF09
- \u7B56\u75652\uFF1A\u4ECE\u4F4E\u70B9\u4E70\u5165\uFF0C\u53EA\u8981\u53EF\u4EE5\u8D5A\u94B1\u5C31\u5356\u51FA\uFF1B\u4E0D\u65AD\u4E70\u5356\uFF08\u8FFD\u6C42\u591A\u6B21\u5229\u76CA\uFF0C\u5355\u8BCD\u5229\u76CA\u4E0D\u591F\uFF09
- \u7B56\u75653\uFF1A\u4ECE\u4F4E\u70B9\u4E70\u5165\uFF0C\u5230\u4EF7\u683C\u9AD8\u70B9\u5356\u51FA\uFF0C\u4E0D\u65AD\u4E70\u5356\uFF08\u5728\u4FDD\u8BC1\u5355\u6B21\u5229\u76CA\u7684\u57FA\u7840\u4E0A\uFF0C\u5B9E\u73B0\u591A\u6B21\u4EA4\u6613\uFF09\uFF08\u6700\u8D2A\uFF09

\`\`\`js
export default (prices) =&gt; {
    // \u7528\u6765\u4FDD\u5B58\u5229\u6DA6
    let count = 0
    for (let i = 0, len = prices.length; i &lt; len; i++) {
        // \u5FAA\u73AFi\u7684\u4E0B\u4E00\u4E2A
        for (let j = i; j &lt; len - 1; j++) {
            if (prices[j + 1] &gt; prices[j]) {
                count += prices[j + 1] - prices[j]
                i = j
            } else {
                i = j
                break
            }
        }
    }
    return count
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6BCF\u5929\u548C\u524D\u4E00\u5929\u6BD4\u8F83\uFF0C\u9AD8\u4E86\u5C31\u52A0\u4E0A\u5DEE\u4EF7\uFF0C\u4F4E\u4E86\u5C31\u91CD\u65B0\u9009\u62E9\u4F4E\u70B9\u3002</li></ul>`,9),Zn=e(` ### \u325C \u67E0\u6AAC\u6C34\u627E\u96F6 \`\`\`js \u5728\u67E0\u6AAC\u6C34\u644A\u4E0A\uFF0C\u6BCF\u4E00\u676F\u67E0\u6AAC\u6C34\u7684\u552E\u4EF7\u4E3A\xA05\xA0\u7F8E\u5143\u3002 <p>\u987E\u5BA2\u6392\u961F\u8D2D\u4E70\u4F60\u7684\u4EA7\u54C1\uFF0C\uFF08\u6309\u8D26\u5355 bills \u652F\u4ED8\u7684\u987A\u5E8F\uFF09\u4E00\u6B21\u8D2D\u4E70\u4E00\u676F\u3002</p><p>\u6BCF\u4F4D\u987E\u5BA2\u53EA\u4E70\u4E00\u676F\u67E0\u6AAC\u6C34\uFF0C\u7136\u540E\u5411\u4F60\u4ED8 5 \u7F8E\u5143\u300110 \u7F8E\u5143\u6216 20 \u7F8E\u5143\u3002\u4F60\u5FC5\u987B\u7ED9\u6BCF\u4E2A\u987E\u5BA2\u6B63\u786E\u627E\u96F6\uFF0C\u4E5F\u5C31\u662F\u8BF4\u51C0\u4EA4\u6613\u662F\u6BCF\u4F4D\u987E\u5BA2\u5411\u4F60\u652F\u4ED8 5 \u7F8E\u5143\u3002</p><p>\u6CE8\u610F\uFF0C\u4E00\u5F00\u59CB\u4F60\u624B\u5934\u6CA1\u6709\u4EFB\u4F55\u96F6\u94B1\u3002</p><p>\u5982\u679C\u4F60\u80FD\u7ED9\u6BCF\u4F4D\u987E\u5BA2\u6B63\u786E\u627E\u96F6\uFF0C\u8FD4\u56DE\xA0true\xA0\uFF0C\u5426\u5219\u8FD4\u56DE false\xA0\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1A[5,5,5,10,20] \u8F93\u51FA\uFF1Atrue \u89E3\u91CA\uFF1A \u524D 3 \u4F4D\u987E\u5BA2\u90A3\u91CC\uFF0C\u6211\u4EEC\u6309\u987A\u5E8F\u6536\u53D6 3 \u5F20 5 \u7F8E\u5143\u7684\u949E\u7968\u3002 \u7B2C 4 \u4F4D\u987E\u5BA2\u90A3\u91CC\uFF0C\u6211\u4EEC\u6536\u53D6\u4E00\u5F20 10 \u7F8E\u5143\u7684\u949E\u7968\uFF0C\u5E76\u8FD4\u8FD8 5 \u7F8E\u5143\u3002 \u7B2C 5 \u4F4D\u987E\u5BA2\u90A3\u91CC\uFF0C\u6211\u4EEC\u627E\u8FD8\u4E00\u5F20 10 \u7F8E\u5143\u7684\u949E\u7968\u548C\u4E00\u5F20 5 \u7F8E\u5143\u7684\u949E\u7968\u3002 \u7531\u4E8E\u6240\u6709\u5BA2\u6237\u90FD\u5F97\u5230\u4E86\u6B63\u786E\u7684\u627E\u96F6\uFF0C\u6240\u4EE5\u6211\u4EEC\u8F93\u51FA true\u3002 \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1A[5,5,10] \u8F93\u51FA\uFF1Atrue \u793A\u4F8B 3\uFF1A</p><p>\u8F93\u5165\uFF1A[10,10] \u8F93\u51FA\uFF1Afalse \u793A\u4F8B 4\uFF1A</p><p>\u8F93\u5165\uFF1A[5,5,10,10,20] \u8F93\u51FA\uFF1Afalse \u89E3\u91CA\uFF1A \u524D 2 \u4F4D\u987E\u5BA2\u90A3\u91CC\uFF0C\u6211\u4EEC\u6309\u987A\u5E8F\u6536\u53D6 2 \u5F20 5 \u7F8E\u5143\u7684\u949E\u7968\u3002 \u5BF9\u4E8E\u63A5\u4E0B\u6765\u7684 2 \u4F4D\u987E\u5BA2\uFF0C\u6211\u4EEC\u6536\u53D6\u4E00\u5F20 10 \u7F8E\u5143\u7684\u949E\u7968\uFF0C\u7136\u540E\u8FD4\u8FD8 5 \u7F8E\u5143\u3002 \u5BF9\u4E8E\u6700\u540E\u4E00\u4F4D\u987E\u5BA2\uFF0C\u6211\u4EEC\u65E0\u6CD5\u9000\u56DE 15 \u7F8E\u5143\uFF0C\u56E0\u4E3A\u6211\u4EEC\u73B0\u5728\u53EA\u6709\u4E24\u5F20 10 \u7F8E\u5143\u7684\u949E\u7968\u3002 \u7531\u4E8E\u4E0D\u662F\u6BCF\u4F4D\u987E\u5BA2\u90FD\u5F97\u5230\u4E86\u6B63\u786E\u7684\u627E\u96F6\uFF0C\u6240\u4EE5\u7B54\u6848\u662F false\u3002</p><p>\u63D0\u793A\uFF1A</p><p>0 &lt;= bills.length &lt;= 10000 bills[i]\xA0\u4E0D\u662F\xA05\xA0\u5C31\u662F\xA010\xA0\u6216\u662F\xA020</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u95EE\u9898\uFF1A\u627E\u96F6\u94B1
    - \u7B56\u75651\uFF1A\u7ED9\u94B1\u627E\u96F6\uFF0C\u4E0D\u533A\u5206\u91D1\u989D\u76F4\u5230\u627E\u5230\u8DB3\u591F\u7684\u96F6\u94B1\uFF08\u8FFD\u6C42\u5355\u8BCD\u627E\u96F6\uFF09
    - \u7B56\u75652\uFF1A\u7ED9\u94B1\u627E\u96F6\uFF0C\u4F18\u5148\u7ED9\u91D1\u989D\u5927\u7684\u96F6\u94B1\uFF0C\u5C3D\u91CF\u628A\u96F6\u94B1\u653E\u5728\u624B\u91CC\uFF08\u8FFD\u6C42\u591A\u6B21\u627E\u96F6\uFF09(\u66F4\u8D2A)
\`\`\`js
export default (arr) =&gt; {
    // \u94B1\u7BB1
    let hand = []
        // \u662F\u5426\u8FD8\u6709\u987E\u5BA2
    while (arr.length) {
        // \u53D6\u51FA\u6700\u524D\u9762\u987E\u5BA2\u7684\u94B1
        let money = arr.shift()
        if (money === 5) {
            hand.push(money)
        } else {
            // \u624B\u91CC\u7684\u96F6\u94B1\u964D\u5E8F\u6392\u5217
            hand.sort((a,b)=&gt;b-a)
            // \u9700\u8981\u7684\u627E\u96F6
            let change = money - 5
            for (let i = 0, len = hand.length; i &lt; len; i++) {
                if (hand[i] &lt;= change) {
                    change -= hand[i]
                    hand.splice(i, 1)
                        // \u5220\u9664\u4E86\u5143\u7D20\uFF0C\u6570\u7EC4\u7684\u957F\u5EA6\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u8981\u7EF4\u6301\u521A\u624D\u7684i\u4E0D\u53D8
                    i--
                }
                if (change === 0) {
                    break
                }
            }
            // \u6CA1\u6709\u8DB3\u591F\u7684\u96F6\u94B1\u7ED9\u987E\u5BA2
            if (change !== 0) {
                return false
            } else {
                // \u987E\u5BA2\u7684\u94B1\u6536\u8D77\u6765
                hand.push(money)
            }
        }
    }
    return true
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u53EA\u9700\u8981\u4E00\u4E2A\u4E2A\u53D6\u503C\u65F6\u7528while</li><li>\u9700\u8981\u6BD4\u8F83\u7B49\u66F4\u590D\u6742\u5904\u7406\u7684\u7528for</li></ul><h2 id="\u8FDB\u9636\u7B97\u6CD5\u4E4B\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u9636\u7B97\u6CD5\u4E4B\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u8FDB\u9636\u7B97\u6CD5\u4E4B\u52A8\u6001\u89C4\u5212</h2><ul><li>\u6982\u5FF5 <ul><li>\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B <ul><li>\u7531\u6700\u4F18\u5B50\u7ED3\u6784\u5F97\u5230\u7684\u95EE\u9898\u7684\u516C\u5F0F</li></ul></li><li>\u6700\u4F18\u5B50\u7ED3\u6784 <ul><li>\u95EE\u9898\u7B80\u5316\u4E3A\u6700\u7B80\u5355\u7684\u60C5\u51B5</li></ul></li><li>\u8FB9\u754C <ul><li>\u7279\u6B8A\u60C5\u51B5</li></ul></li></ul></li><li>\u7528\u9014 <ul><li>\u4E0D\u540C\u8DEF\u5F84</li><li>\u6700\u77ED\u8DEF\u5F84</li></ul></li></ul><h3 id="_33-\u4E0D\u540C\u8DEF\u5F84ii" tabindex="-1"><a class="header-anchor" href="#_33-\u4E0D\u540C\u8DEF\u5F84ii" aria-hidden="true">#</a> \u325D \u4E0D\u540C\u8DEF\u5F84II</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u4E00\u4E2A\u673A\u5668\u4EBA\u4F4D\u4E8E\u4E00\u4E2A m x n \u7F51\u683C\u7684\u5DE6\u4E0A\u89D2 \uFF08\u8D77\u59CB\u70B9\u5728\u4E0B\u56FE\u4E2D\u6807\u8BB0\u4E3A\u201CStart\u201D \uFF09\u3002

\u673A\u5668\u4EBA\u6BCF\u6B21\u53EA\u80FD\u5411\u4E0B\u6216\u8005\u5411\u53F3\u79FB\u52A8\u4E00\u6B65\u3002\u673A\u5668\u4EBA\u8BD5\u56FE\u8FBE\u5230\u7F51\u683C\u7684\u53F3\u4E0B\u89D2\uFF08\u5728\u4E0B\u56FE\u4E2D\u6807\u8BB0\u4E3A\u201CFinish\u201D\uFF09\u3002

\u73B0\u5728\u8003\u8651\u7F51\u683C\u4E2D\u6709\u969C\u788D\u7269\u3002\u90A3\u4E48\u4ECE\u5DE6\u4E0A\u89D2\u5230\u53F3\u4E0B\u89D2\u5C06\u4F1A\u6709\u591A\u5C11\u6761\u4E0D\u540C\u7684\u8DEF\u5F84\uFF1F
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_+`" alt="\u673A\u5668\u4EBA\u8DEF\u5F84"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u7F51\u683C\u4E2D\u7684\u969C\u788D\u7269\u548C\u7A7A\u4F4D\u7F6E\u5206\u522B\u7528 <span class="token number">1</span> \u548C <span class="token number">0</span> \u6765\u8868\u793A\u3002

\u8BF4\u660E\uFF1Am \u548C n \u7684\u503C\u5747\u4E0D\u8D85\u8FC7 <span class="token number">100</span>\u3002

\u793A\u4F8B <span class="token number">1</span><span class="token operator">:</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span>
<span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token literal-property property">\u89E3\u91CA</span><span class="token operator">:</span>
3x3 \u7F51\u683C\u7684\u6B63\u4E2D\u95F4\u6709\u4E00\u4E2A\u969C\u788D\u7269\u3002
\u4ECE\u5DE6\u4E0A\u89D2\u5230\u53F3\u4E0B\u89D2\u4E00\u5171\u6709 <span class="token number">2</span> \u6761\u4E0D\u540C\u7684\u8DEF\u5F84\uFF1A
<span class="token number">1.</span> \u5411\u53F3 <span class="token operator">-</span><span class="token operator">&gt;</span> \u5411\u53F3 <span class="token operator">-</span><span class="token operator">&gt;</span> \u5411\u4E0B <span class="token operator">-</span><span class="token operator">&gt;</span> \u5411\u4E0B
<span class="token number">2.</span> \u5411\u4E0B <span class="token operator">-</span><span class="token operator">&gt;</span> \u5411\u4E0B <span class="token operator">-</span><span class="token operator">&gt;</span> \u5411\u53F3 <span class="token operator">-</span><span class="token operator">&gt;</span> \u5411\u53F3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u601D\u8DEF <img src="`+q+`" alt="\u673A\u5668\u4EBA\u8DEF\u5F84"></li><li>\u6700\u540E\u4E00\u6B65\u6709\u51E0\u79CD\u60C5\u51B5\uFF1F\u6700\u540E\u4E00\u6B65\u4E4B\u524D\u7684\u8DEF\u5F84\u7B49\u540C\u4E8E\u5982\u4E0A\u4E24\u4E2A\u56FE\u5F62\u3002</li><li>\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u5982\u4E0A</li><li>\u6700\u6709\u5B50\u7ED3\u6784\u5728\u65B9\u7A0B\u4E2D</li><li>\u8FB9\u754C\u4E09\u79CD\u60C5\u51B5\uFF1A\u56DB\u4E2A\u65B9\u5757\uFF0C\u4E00\u884C\uFF0C\u4E00\u5217</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// leetcode\u63D0\u4EA4\u8D85\u51FA\u65F6\u95F4\u9650\u5236\uFF01</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> m<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6700\u4F18\u5B50\u7ED3\u6784</span>
    <span class="token keyword">let</span> <span class="token function-variable function">dp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token function-variable function">dp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u68C0\u67E5\u8D77\u59CB\u6216\u8005\u76EE\u6807\u5143\u7D20\u662F\u4E0D\u662F1\uFF08\u88AB\u5360\u7528\u4E86\uFF09\uFF0C\u5982\u679C\u8D77\u59CB\u6216\u8005\u6700\u540E\u90A3\u4E2A\u683C\u5C31\u662F1\uFF0C\u8BF4\u660E\u600E\u4E48\u90FD\u600E\u4E48\u4E0D\u5230\u90A3\uFF0C\u76F4\u63A5\u8FD4\u56DE0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> n <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">2</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">||</span> n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arr<span class="token punctuation">[</span>m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">1</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">dp</span><span class="token punctuation">(</span>m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">dp</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">dp</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u904D\u5386\u6240\u6709\u7684\u4F4D\u7F6E\uFF0C\u5982\u679C\u9047\u5230\u969C\u788D\u7269\uFF0C\u4F4D\u7F6E\u503C\u6539\u4E3A0\uFF0C\u5982\u679C\u662F\u8D77\u70B9\uFF0C\u4F4D\u7F6E\u503C\u6539\u4E3A1\uFF0C\u5982\u679C\u662F\u8D77\u70B9\u7684\u4E24\u8FB9\uFF0C\u503C\u7B49\u4E8E\u5B83\u7684\u524D\u4E00\u4E2A\u503C\u3002\u5982\u679C\u90FD\u4E0D\u662F\uFF0C\u90A3\u7B49\u4E8E\u5B83\u7684\u5DE6\u683C\u5B50\u503C\u52A0\u4E0A\u683C\u5B50\u503C\u3002\u6700\u540E\u53F3\u4E0B\u89D2\u7684\u683C\u5B50\u503C\u5373\u4E3A\u8DEF\u5F84\u6761\u6570\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// leetcode\u6210\u529F\u901A\u8FC7</span>
<span class="token keyword">var</span> <span class="token function-variable function">uniquePathsWithObstacles</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obstacleGrid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>obstacleGrid<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> j<span class="token operator">&lt;</span>obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>j<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">0</span> <span class="token operator">||</span> j<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token operator">==</span><span class="token number">0</span><span class="token operator">?</span>obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">:</span>obstacleGrid<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> obstacleGrid<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> obstacleGrid<span class="token punctuation">[</span>obstacleGrid<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>obstacleGrid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_34-k\u7AD9\u4E2D\u8F6C\u5185\u6700\u4FBF\u5B9C\u7684\u822A\u73ED" tabindex="-1"><a class="header-anchor" href="#_34-k\u7AD9\u4E2D\u8F6C\u5185\u6700\u4FBF\u5B9C\u7684\u822A\u73ED" aria-hidden="true">#</a> \u325E K\u7AD9\u4E2D\u8F6C\u5185\u6700\u4FBF\u5B9C\u7684\u822A\u73ED</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u6709 n \u4E2A\u57CE\u5E02\u901A\u8FC7 m \u4E2A\u822A\u73ED\u8FDE\u63A5\u3002\u6BCF\u4E2A\u822A\u73ED\u90FD\u4ECE\u57CE\u5E02 u \u5F00\u59CB\uFF0C\u4EE5\u4EF7\u683C w \u62B5\u8FBE v\u3002

\u73B0\u5728\u7ED9\u5B9A\u6240\u6709\u7684\u57CE\u5E02\u548C\u822A\u73ED\uFF0C\u4EE5\u53CA\u51FA\u53D1\u57CE\u5E02 src \u548C\u76EE\u7684\u5730 dst\uFF0C\u4F60\u7684\u4EFB\u52A1\u662F\u627E\u5230\u4ECE src \u5230 dst \u6700\u591A\u7ECF\u8FC7 k \u7AD9\u4E2D\u8F6C\u7684\u6700\u4FBF\u5B9C\u7684\u4EF7\u683C\u3002 \u5982\u679C\u6CA1\u6709\u8FD9\u6837\u7684\u8DEF\u7EBF\uFF0C\u5219\u8F93\u51FA <span class="token operator">-</span><span class="token number">1</span>\u3002

\u793A\u4F8B <span class="token number">1</span><span class="token operator">:</span>
<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> 
n <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> edges <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
src <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> dst <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">1</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token number">200</span>
<span class="token literal-property property">\u89E3\u91CA</span><span class="token operator">:</span> 
\u57CE\u5E02\u822A\u73ED\u56FE\u5982\u4E0B
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+A+`" alt="\u6700\u6709\u8DEF\u5F841"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u4ECE\u57CE\u5E02 <span class="token number">0</span> \u5230\u57CE\u5E02 <span class="token number">2</span> \u5728 <span class="token number">1</span> \u7AD9\u4E2D\u8F6C\u4EE5\u5185\u7684\u6700\u4FBF\u5B9C\u4EF7\u683C\u662F <span class="token number">200</span>\uFF0C\u5982\u56FE\u4E2D\u7EA2\u8272\u6240\u793A\u3002
\u793A\u4F8B <span class="token number">2</span><span class="token operator">:</span>
<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> 
n <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> edges <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
src <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> dst <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">0</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token number">500</span>
<span class="token literal-property property">\u89E3\u91CA</span><span class="token operator">:</span> 
\u57CE\u5E02\u822A\u73ED\u56FE\u5982\u4E0B
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+N+`" alt="\u6700\u6709\u8DEF\u5F842"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u4ECE\u57CE\u5E02 <span class="token number">0</span> \u5230\u57CE\u5E02 <span class="token number">2</span> \u5728 <span class="token number">0</span> \u7AD9\u4E2D\u8F6C\u4EE5\u5185\u7684\u6700\u4FBF\u5B9C\u4EF7\u683C\u662F <span class="token number">500</span>\uFF0C\u5982\u56FE\u4E2D\u84DD\u8272\u6240\u793A\u3002
\u63D0\u793A\uFF1A

n \u8303\u56F4\u662F <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span>\uFF0C\u57CE\u5E02\u6807\u7B7E\u4ECE <span class="token number">0</span> \u5230 n <span class="token operator">-</span> <span class="token number">1.</span>
\u822A\u73ED\u6570\u91CF\u8303\u56F4\u662F <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">*</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>
<span class="token function">\u6BCF\u4E2A\u822A\u73ED\u7684\u683C\u5F0F</span> <span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">.</span>
\u6BCF\u4E2A\u822A\u73ED\u7684\u4EF7\u683C\u8303\u56F4\u662F <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">.</span>
k \u8303\u56F4\u662F <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>
\u822A\u73ED\u6CA1\u6709\u91CD\u590D\uFF0C\u4E14\u4E0D\u5B58\u5728\u73AF\u8DEF
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+M+`" alt="\u6700\u4F18\u8DEF\u5F843"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// leetcode\u4E2D\u8FD0\u884C\u8D85\u51FA\u65F6\u95F4\u9650\u5236\uFF01</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">fights<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5C06fights\u4F5C\u4E3A\u53C2\u6570\u548CLeetCode\u4E00\u81F4</span>
  <span class="token keyword">let</span> <span class="token function-variable function">cheap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fights<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> prev <span class="token operator">=</span> fights<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> dst<span class="token punctuation">)</span>
    <span class="token keyword">let</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> prev<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> src <span class="token operator">&amp;&amp;</span> k <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> item<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> item<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token function">cheap</span><span class="token punctuation">(</span>fights<span class="token punctuation">,</span> src<span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> min
  <span class="token punctuation">}</span>
  <span class="token comment">// \u589E\u52A0\u8FD4\u56DE\u503C\u662F\u4E0D\u662FNumber.MAX_SAFE_INTEGER\uFF0C\u5982\u679C\u662F\u8FD4\u56DE-1</span>
  <span class="token keyword">let</span> min <span class="token operator">=</span> <span class="token function">cheap</span><span class="token punctuation">(</span>fights<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> k<span class="token punctuation">)</span>
  <span class="token keyword">return</span> min <span class="token operator">&gt;=</span> Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> min
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u3010\u9762\u8BD5\u9898\u3011" tabindex="-1"><a class="header-anchor" href="#\u3010\u9762\u8BD5\u9898\u3011" aria-hidden="true">#</a> \u3010\u9762\u8BD5\u9898\u3011</h2>`,33),Yn=e(` ### \u30101\u3011821. \u5B57\u7B26\u7684\u6700\u77ED\u8DDD\u79BB \`\`\`js \u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32\xA0S\xA0\u548C\u4E00\u4E2A\u5B57\u7B26\xA0C\u3002\u8FD4\u56DE\u4E00\u4E2A\u4EE3\u8868\u5B57\u7B26\u4E32\xA0S\xA0\u4E2D\u6BCF\u4E2A\u5B57\u7B26\u5230\u5B57\u7B26\u4E32\xA0S\xA0\u4E2D\u7684\u5B57\u7B26\xA0C\xA0\u7684\u6700\u77ED\u8DDD\u79BB\u7684\u6570\u7EC4\u3002 <p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: S = &quot;loveleetcode&quot;, C = &#39;e&#39; \u8F93\u51FA: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0] \u8BF4\u660E:</p><p>\u5B57\u7B26\u4E32\xA0S\xA0\u7684\u957F\u5EA6\u8303\u56F4\u4E3A\xA0[1, 10000]\u3002 C\xA0\u662F\u4E00\u4E2A\u5355\u5B57\u7B26\uFF0C\u4E14\u4FDD\u8BC1\u662F\u5B57\u7B26\u4E32\xA0S\xA0\u91CC\u7684\u5B57\u7B26\u3002 S\xA0\u548C\xA0C\xA0\u4E2D\u7684\u6240\u6709\u5B57\u6BCD\u5747\u4E3A\u5C0F\u5199\u5B57\u6BCD\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u5148\u6C42\u51FA\u5DE6\u8FB9\u7684C\u5230\u6BCF\u4E2A\u5B57\u7B26\u7684\u6700\u8FD1\u8DDD\u79BB\uFF0C\u518D\u6C42\u51FA\u53F3\u8FB9\u7684C\u5230\u6BCF\u4E2A\u5B57\u7B26\u7684\u6700\u8FD1\u8DDD\u79BB\uFF0C\u7136\u540E\u5DE6\u53F3\u4E2D\u53D6\u6700\u5C0F\u503C\u5373\u53EF\uFF0C\u53CC\u6307\u9488
\`\`\`js
var shortestToChar = function(S, C) {
    let len=S.length;
    let left=[];let right=[];
    left[0]=S[0]===C?0:10000;
    for(var i=1;i&lt;len;i++){
        left[i]=S[i]===C?0:left[i-1]+1;
    }
    right[len-1]=S[len-1]===C?0:10000;
    for(var i=len-2;i&gt;=0;i--){
        right[i]=S[i]===C?0:right[i+1]+1;
    }
    for(var i=0;i&lt;len;i++){
        left[i]=Math.min(left[i],right[i])
    }
    return left;
};
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),ns=e(` ### \u30102\u3011 845. \u6570\u7EC4\u4E2D\u7684\u6700\u957F\u5C71\u8109 \`\`\`js \u6211\u4EEC\u628A\u6570\u7EC4 A \u4E2D\u7B26\u5408\u4E0B\u5217\u5C5E\u6027\u7684\u4EFB\u610F\u8FDE\u7EED\u5B50\u6570\u7EC4 B \u79F0\u4E3A \u201C\u5C71\u8109\u201D\uFF1A <p>B.length &gt;= 3 \u5B58\u5728 0 &lt; i\xA0&lt; B.length - 1 \u4F7F\u5F97 B[0] &lt; B[1] &lt; ... B[i-1] &lt; B[i] &gt; B[i+1] &gt; ... &gt; B[B.length - 1] \uFF08\u6CE8\u610F\uFF1AB \u53EF\u4EE5\u662F A \u7684\u4EFB\u610F\u5B50\u6570\u7EC4\uFF0C\u5305\u62EC\u6574\u4E2A\u6570\u7EC4 A\u3002\uFF09</p><p>\u7ED9\u51FA\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 A\uFF0C\u8FD4\u56DE\u6700\u957F \u201C\u5C71\u8109\u201D\xA0\u7684\u957F\u5EA6\u3002</p><p>\u5982\u679C\u4E0D\u542B\u6709 \u201C\u5C71\u8109\u201D\xA0\u5219\u8FD4\u56DE 0\u3002</p><p></p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1A[2,1,4,7,3,2,5] \u8F93\u51FA\uFF1A5 \u89E3\u91CA\uFF1A\u6700\u957F\u7684 \u201C\u5C71\u8109\u201D \u662F [1,4,7,3,2]\uFF0C\u957F\u5EA6\u4E3A 5\u3002 \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1A[2,2,2] \u8F93\u51FA\uFF1A0 \u89E3\u91CA\uFF1A\u4E0D\u542B \u201C\u5C71\u8109\u201D\u3002</p><p>\u63D0\u793A\uFF1A</p><p>0 &lt;= A.length &lt;= 10000 0 &lt;= A[i] &lt;= 10000</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u4E09\u4E2A\u6307\u9488
\`\`\`js
// \u6CA1\u770B\u61C2
var longestMountain = function(A) {
    let m=A.length;
    if(m&lt;3) return 0;
    let ptrL=0;
    // \u4FDD\u5B58\u6700\u9AD8\u70B9
    let ptrM=0;
    let ptrR=0;
    let result=0;
    while(ptrR&lt;m){
        // \u9012\u589E\u6700\u9AD8\u70B9
        while(ptrM&lt;m-1&amp;&amp;A[ptrM+1]&gt;A[ptrM]) ptrM++;
        ptrR=ptrM;
        // \u9012\u51CF\u6700\u4F4E\u70B9
        while (ptrR &lt; m - 1 &amp;&amp; A[ptrR + 1] &lt; A[ptrR])
				ptrR++;
            // \u6709\u9012\u589E\uFF0C\u5E76\u4E14\u6709\u9012\u51CF\uFF0C\u5E76\u4E14
			if (ptrL != ptrM &amp;&amp; ptrR != ptrM &amp;&amp; result &lt; ptrR - ptrL + 1)
				result = ptrR - ptrL + 1;
            // \u6570\u5B57\u76F8\u7B49\uFF0C\u8DF3\u8FC7\u8FD9\u4E2A\u6570\u5B57
            if(ptrL == ptrR)
                ptrL = ptrM = ++ptrR;
            // \u5230\u6700\u4F4E\u70B9\u4E4B\u524D\u90FD\u4E0D\u7B26\u5408\uFF0C\u8DF3\u8FC7
            else
                ptrL = ptrM = ptrR;
    }
    return result;
};
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>temp\u662F\u4E34\u65F6\u7684\u5C71\u8109\uFF0Cres\u662F\u76EE\u524D\u4E3A\u6B62\u7684\u6700\u5927\u5C71\u8109\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> s<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> <span class="token function-variable function">longestMountain</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">A</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>temp<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> isDown<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token constant">A</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token constant">A</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isDown<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res <span class="token operator">=</span> res <span class="token operator">&gt;</span> temp <span class="token operator">?</span> res <span class="token operator">:</span> temp<span class="token punctuation">;</span>
                temp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                isDown <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            temp<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token constant">A</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isDown<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res <span class="token operator">=</span> res <span class="token operator">&gt;</span> temp <span class="token operator">?</span> res <span class="token operator">:</span> temp<span class="token punctuation">;</span>
                isDown <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            temp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isDown<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                temp<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                isDown <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                temp<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isDown<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res <span class="token operator">=</span> res <span class="token operator">&gt;</span> temp <span class="token operator">?</span> res <span class="token operator">:</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),ss=e(` ### \u30103\u3011741. \u6458\u6A31\u6843 \`\`\`js \u4E00\u4E2AN x N\u7684\u7F51\u683C(grid)\xA0\u4EE3\u8868\u4E86\u4E00\u5757\u6A31\u6843\u5730\uFF0C\u6BCF\u4E2A\u683C\u5B50\u7531\u4EE5\u4E0B\u4E09\u79CD\u6570\u5B57\u7684\u4E00\u79CD\u6765\u8868\u793A\uFF1A <p>0 \u8868\u793A\u8FD9\u4E2A\u683C\u5B50\u662F\u7A7A\u7684\uFF0C\u6240\u4EE5\u4F60\u53EF\u4EE5\u7A7F\u8FC7\u5B83\u3002 1 \u8868\u793A\u8FD9\u4E2A\u683C\u5B50\u91CC\u88C5\u7740\u4E00\u4E2A\u6A31\u6843\uFF0C\u4F60\u53EF\u4EE5\u6458\u5230\u6A31\u6843\u7136\u540E\u7A7F\u8FC7\u5B83\u3002 -1 \u8868\u793A\u8FD9\u4E2A\u683C\u5B50\u91CC\u6709\u8346\u68D8\uFF0C\u6321\u7740\u4F60\u7684\u8DEF\u3002 \u4F60\u7684\u4EFB\u52A1\u662F\u5728\u9075\u5B88\u4E0B\u5217\u89C4\u5219\u7684\u60C5\u51B5\u4E0B\uFF0C\u5C3D\u53EF\u80FD\u7684\u6458\u5230\u6700\u591A\u6A31\u6843\uFF1A</p><p>\u4ECE\u4F4D\u7F6E\xA0(0, 0) \u51FA\u53D1\uFF0C\u6700\u540E\u5230\u8FBE (N-1, N-1) \uFF0C\u53EA\u80FD\u5411\u4E0B\u6216\u5411\u53F3\u8D70\uFF0C\u5E76\u4E14\u53EA\u80FD\u7A7F\u8D8A\u6709\u6548\u7684\u683C\u5B50\uFF08\u5373\u53EA\u53EF\u4EE5\u7A7F\u8FC7\u503C\u4E3A0\u6216\u80051\u7684\u683C\u5B50\uFF09\uFF1B \u5F53\u5230\u8FBE (N-1, N-1) \u540E\uFF0C\u4F60\u8981\u7EE7\u7EED\u8D70\uFF0C\u76F4\u5230\u8FD4\u56DE\u5230 (0, 0) \uFF0C\u53EA\u80FD\u5411\u4E0A\u6216\u5411\u5DE6\u8D70\uFF0C\u5E76\u4E14\u53EA\u80FD\u7A7F\u8D8A\u6709\u6548\u7684\u683C\u5B50\uFF1B \u5F53\u4F60\u7ECF\u8FC7\u4E00\u4E2A\u683C\u5B50\u4E14\u8FD9\u4E2A\u683C\u5B50\u5305\u542B\u4E00\u4E2A\u6A31\u6843\u65F6\uFF0C\u4F60\u5C06\u6458\u5230\u6A31\u6843\u5E76\u4E14\u8FD9\u4E2A\u683C\u5B50\u4F1A\u53D8\u6210\u7A7A\u7684\uFF08\u503C\u53D8\u4E3A0\uFF09\uFF1B \u5982\u679C\u5728 (0, 0) \u548C (N-1, N-1) \u4E4B\u95F4\u4E0D\u5B58\u5728\u4E00\u6761\u53EF\u7ECF\u8FC7\u7684\u8DEF\u5F84\uFF0C\u5219\u6CA1\u6709\u4EFB\u4F55\u4E00\u4E2A\u6A31\u6843\u80FD\u88AB\u6458\u5230\u3002 \u793A\u4F8B 1:</p><p>\u8F93\u5165: grid = [[0, 1, -1], [1, 0, -1], [1, 1, 1]] \u8F93\u51FA: 5 \u89E3\u91CA\uFF1A \u73A9\u5BB6\u4ECE\uFF080,0\uFF09\u70B9\u51FA\u53D1\uFF0C\u7ECF\u8FC7\u4E86\u5411\u4E0B\u8D70\uFF0C\u5411\u4E0B\u8D70\uFF0C\u5411\u53F3\u8D70\uFF0C\u5411\u53F3\u8D70\uFF0C\u5230\u8FBE\u4E86\u70B9(2, 2)\u3002 \u5728\u8FD9\u8D9F\u5355\u7A0B\u4E2D\uFF0C\u603B\u5171\u6458\u5230\u4E864\u9897\u6A31\u6843\uFF0C\u77E9\u9635\u53D8\u6210\u4E86[[0,1,-1],[0,0,-1],[0,0,0]]\u3002 \u63A5\u7740\uFF0C\u8FD9\u540D\u73A9\u5BB6\u5411\u5DE6\u8D70\uFF0C\u5411\u4E0A\u8D70\uFF0C\u5411\u4E0A\u8D70\uFF0C\u5411\u5DE6\u8D70\uFF0C\u8FD4\u56DE\u4E86\u8D77\u59CB\u70B9\uFF0C\u53C8\u6458\u5230\u4E861\u9897\u6A31\u6843\u3002 \u5728\u65C5\u7A0B\u4E2D\uFF0C\u603B\u5171\u6458\u5230\u4E865\u9897\u6A31\u6843\uFF0C\u8FD9\u662F\u53EF\u4EE5\u6458\u5230\u7684\u6700\u5927\u503C\u4E86\u3002 \u8BF4\u660E:</p><p>grid \u662F\u4E00\u4E2A\xA0N * N \u7684\u4E8C\u7EF4\u6570\u7EC4\uFF0CN\u7684\u53D6\u503C\u8303\u56F4\u662F1 &lt;= N &lt;= 50\u3002 \u6BCF\u4E00\u4E2A\xA0grid[i][j] \u90FD\u662F\u96C6\u5408\xA0{-1, 0, 1}\u5176\u4E2D\u7684\u4E00\u4E2A\u6570\u3002 \u53EF\u4EE5\u4FDD\u8BC1\u8D77\u70B9\xA0grid[0][0]\xA0\u548C\u7EC8\u70B9\xA0grid[N-1][N-1]\xA0\u7684\u503C\u90FD\u4E0D\u4F1A\u662F -1\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
\`\`\`js
function cherryPickup(grid){
        let N = grid.length  // \u8F6C\u5316\u4E3A2\u4EBA\u540C\u65F6\u4ECE(0,0)\u8D70\u5230(N-1,N-1)\u7684\u6700\u5927\u6536\u76CA
        let S = (N-1) * pow(2,1)  // \u6700\u5927\u6B65\u6570\uFF0C\u5373\uFF08N-1)*2\u6B65\u8D70\u5230\u76EE\u7684\u5730
        let dp = new Map([[0,0,0],grid[0][0]])// dp[s,i,j]\u8D70\u4E86s\u6B65\u4E14\u4F4D\u4E8E\u4E24\u4EBA\u5206\u522B\u4F4D\u4E8Ei,j\u4E24\u884C\u7684\u6700\u5927\u6536\u76CA\uFF0C\u5728\u4E0B\u9762\u7684\u5FAA\u73AF\u91CC\u4EC5\u5F53(s,i,j)\u72B6\u6001\u53EF\u8FBE\u65F6\u624D\u5B58\u5165\u54C8\u5E0C
        let moves = [[0, 0], [1, 0], [0, 1], [1, 1]]  // i,j\u8981\u8003\u8651\u7684\u4E0A\u4E00\u65F6\u523B\u5230\u73B0\u5728\u53EF\u80FD\u7684\u53D8\u5316\u91CF
        for (let s=1; s&lt;=S+1;i++){
            for(let y1=1;y1&lt;=Math.min(s+1,N);y1++){
                let x1 = s-y1
                if (x1 &gt;= N || grid[y1][x1] == -1)  // \u8BE5\u72B6\u6001\u4E0D\u53EF\u8FBE
                    continue
                for(let y2=1;y2&lt;=Math.min(s+1,N);y2++){// \u4EC5\u8003\u8651y1&lt;=y2\uFF0C\u56E0\u4E3A(s,y1,y2)\u4E0E(s,y2,y1)\u7B49\u4EF7
                    x2 = s-y2
                    if (x2 &gt;= N || grid[y2][x2] == -1) // \u8BE5\u72B6\u6001\u4E0D\u53EF\u8FBE
                        continue
                    _max = -1  // -1\u5360\u4F4D\u540E\u9762\u5224\u65AD\u53EF\u8FBE
                    for(let [dy1,dy2] in moves){
                        let [_y1, _y2] = [y1-dy1, y2-dy2]  // \u5176\u53EF\u80FD\u6765\u81EA\u7684\u72B6\u6001
                        if (_y1 &gt; _y2)
                            continue
                        _max = max(_max, dp.get((s-1, _y1, _y2), -1))
                    
                    }
                        
                    if (_max != -1)  // \u4ECD\u4E3A-1\u5219\u8BF4\u660E\u6CA1\u6709\u524D\u7F6E\u72B6\u6001\u53EF\u4EE5\u5230\u8FBE\u5F53\u524D\u72B6\u6001
                        dp[s, y1, y2] = _max + grid[y1][x1] + grid[y2][x2] if y1 != y2 else _max + grid[y1][x1]  // y1=y2\u65F6\u5219\u53EA\u80FD\u6709\u4E00\u4E2A\u4EBA\u83B7\u5F97\u6A31\u6843
        } 
            }
                }
                
            
        return dp.get((S, N-1, N-1), 0)  // \u82E5\u8BE5\u72B6\u6001\u4E0D\u53EF\u8FBE\uFF0C\u8FD4\u56DE0
 }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),as=e(` ### \u30104\u3011[1,{a:13},3,{b:12},12] \u7EDF\u8BA1\u6240\u6709\u6570\u5B57\u4E4B\u548C \`\`\`js let sum=arr.reduce((acc,cur)=&gt;{ if(typeof cur===&#39;object&#39;){ for(key in objs){ if(obj.hasOwnProperty(key)){ acc+=cur[key] } } }else{ acc+=cur } return acc; }) \`\`\` ### \u30105\u3011\u83B7\u53D6\u4E00\u4E2A\u5BF9\u8C61\u7684\u6240\u6709key \`\`\`js Object.keys(obj) <p>let keys=[]; for(key in obj){ keys.push(key); }</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
### \u30106\u3011[{a:34},{a:12},{a:43}]\u6570\u7EC4\u6392\u5E8F
\`\`\`js
arr.sort((a,b)=&gt;{
    return a.a-b.a;
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u30107\u3011\u627E\u51FA\u4E00\u4E2A\u957F\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED\u91CD\u590D\u6B21\u6570\u6700\u591A\u7684\u5B57\u7B26-\u5982-\u5728-nddemdereeeffetcssssfggddregg-\u4E2D-s-\u91CD\u590D\u51FA\u73B0\u6B21\u6570-4-\u6B21\u6700\u591A-\u56E0\u6B64-s-\u4E3A\u8FDE\u7EED\u91CD\u590D\u51FA\u73B0\u6700\u957F\u7684\u5B57\u7B26\u3002" tabindex="-1"><a class="header-anchor" href="#\u30107\u3011\u627E\u51FA\u4E00\u4E2A\u957F\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED\u91CD\u590D\u6B21\u6570\u6700\u591A\u7684\u5B57\u7B26-\u5982-\u5728-nddemdereeeffetcssssfggddregg-\u4E2D-s-\u91CD\u590D\u51FA\u73B0\u6B21\u6570-4-\u6B21\u6700\u591A-\u56E0\u6B64-s-\u4E3A\u8FDE\u7EED\u91CD\u590D\u51FA\u73B0\u6700\u957F\u7684\u5B57\u7B26\u3002" aria-hidden="true">#</a> \u30107\u3011\u627E\u51FA\u4E00\u4E2A\u957F\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED\u91CD\u590D\u6B21\u6570\u6700\u591A\u7684\u5B57\u7B26\uFF0C\u5982\uFF1A\u5728&quot;nddemdereeeffetcssssfggddregg&quot;\u4E2D&#39;s&#39;\u91CD\u590D\u51FA\u73B0\u6B21\u6570(4)\u6B21\u6700\u591A\uFF0C\u56E0\u6B64&#39;s&#39;\u4E3A\u8FDE\u7EED\u91CD\u590D\u51FA\u73B0\u6700\u957F\u7684\u5B57\u7B26\u3002</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">maxTime</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\w)\\1+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> maxChar <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> result <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                max <span class="token operator">=</span> result<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
                maxChar <span class="token operator">=</span> result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>index <span class="token operator">+</span> result<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> maxChar<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">maxTime</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\w)\\1+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>b<span class="token punctuation">.</span>length<span class="token operator">-</span>a<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),ps=e(` ### \u30108\u3011\u73B0\u5728\u4E00\u4E2Ajson\uFF0C\u5728\u67D0\u4E00\u7EF4\u5EA6\u4E2D\u53EF\u80FD\u4F1A\u51FA\u73B0&#39;score&#39;\u952E\uFF0C\u8BF7\u7528\u4EFB\u610F\u8BED\u8A00\u5199\u4E00\u4E2Acheck\u65B9\u6CD5\u5224\u65AD\u8BE5json\u662F\u5426\u6EE1\u8DB3\u8981\u6C42\u3002\u8981\u6C42\u5982\u4E0B\uFF1A \`\`\`js a. \u4EFB\u610F\u4E00\u4E2A\u952E\u4E3Ascore\u7684\u503C\u9884\u671F\u662F\u4E00\u4E2A\u6574\u578B\u6570\u5B57\u4E14\u5927\u4E8E60\uFF0C\u5219\u68C0\u67E5\u901A\u8FC7 b. \u82E5\u4E0D\u5B58\u5728\u952E\u4E3Ascore\u7684\u503C\uFF0C\u5219\u68C0\u67E5\u901A\u8FC7 json\u53C2\u8003\u6837\u4F8B\uFF1A { &quot;name&quot;:&quot;BeJson&quot;, &quot;url&quot;:&quot;http://www.bejson.com&quot;, &quot;score&quot;:59, &quot;address&quot;:{ &quot;score&quot;:20, &quot;city&quot;:&quot;\u6C5F\u82CF\u82CF\u5DDE&quot;, &quot;country&quot;:&quot;\u4E2D\u56FD&quot; }, &quot;links&quot;:[{ &quot;score&quot;:60, &quot;url&quot;:&quot;http://www.google.com&quot; }] } \`\`\` \`\`\`js function hasScore(json) { let exist = false; let over = false; <pre><code>function checkScoreChild(obj) {
    if (obj instanceof Object) {
        for (key in obj) {
            checkScoreChild(obj[key]);
            if (key === &#39;score&#39;) {
                exist = true;
                console.log(obj[&#39;score&#39;]);
                if (typeof obj[&#39;score&#39;] === &#39;number&#39; &amp;&amp; obj[&#39;score&#39;] &gt; 60) {
                    over = true;
                }
            }
        }
    } else if (obj instanceof Array) {
        obj.forEach(item =&gt; {
            checkScoreChild(item);
        })
    }

}
checkScoreChild(JSON.parse(json))
return over || !exist;
</code></pre><p>}</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
### \u30109\u3011\u5B9E\u73B0\u4E00\u4E2Apromise,\u5B9E\u73B0promise.all\uFF0C\u5B9E\u73B0promise.race
1. \u4E00\u4E2A\u7C7B\u91CC\u9762\u6709\u4E00\u4E2A\u53D8\u91CF\u4FDD\u5B58promise\u72B6\u6001\uFF0Cnew\u7684\u65F6\u5019\u4F20\u5165\u4E00\u4E2A\u51FD\u6570\uFF0C\u51FD\u6570\u7684\u53C2\u6570\u91CC\u5305\u542B\u4E24\u4E2A\u65B9\u6CD5resolve\u548Creject\uFF0C\u5728promise\u521D\u59CB\u5316\u65F6\u5B9A\u4E49\u4E86\u3002\u5F53new promise\u5F02\u6B65\u6210\u529F\u540E\u6267\u884C\u5B9A\u4E49\u7684resolve\u65B9\u6CD5\uFF0C\u4F20\u5165\u6210\u529F\u503C\uFF0C\u5931\u8D25\u8C03\u7528reject\u65B9\u6CD5\uFF0C\u4F20\u5165\u5931\u8D25\u503C\u3002\u7ACB\u5373\u6267\u884Cnew\u4F20\u5165\u7684\u51FD\u6570\u3002
2. then\u51FD\u6570\u7684\u4F5C\u7528\u662F\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684promise\uFF0C\u5728\u91CC\u9762\u5224\u65AD\u76EE\u524D\u7684promise\u72B6\u6001\uFF0C\u6210\u529F\u5C31\u8C03\u7528\u539Fpromise\u7684\u6210\u529F\uFF0C\u5931\u8D25\u8C03\u7528\u539Fpromise\u7684\u5931\u8D25\uFF0C\u7B49\u5F85\u5C31\u628A\u539F\u6210\u529F\u548C\u539F\u5931\u8D25\u5B58\u8D77\u6765(\u5B58\u7684\u65F6\u5019\u51FD\u6570\u5305\u4E00\u4E0B\u628A\u53C2\u6570\u4F20\u8FDB\u53BB)\uFF0C\u7B49\u6210\u529F\u540E\u8C03\u7528\u3002\u8FD9\u6837\u901A\u8FC7\u4E00\u4E2A\u53D8\u91CF\u548C\u53D1\u5E03\u8BA2\u9605\u5C31\u5B9E\u73B0\u4E86\u53D1\u9001\u8BF7\u6C42\u548C\u5F97\u5230\u8BF7\u6C42\u7ED3\u679C\u7684\u5206\u79BB\u3002
3. \u539Fpromise\u7684\u6210\u529F\u51FD\u6570\u6267\u884C\u65F6\u51FA\u9519\u5C31\u6267\u884C\u65B0promise\u7684\u5931\u8D25\uFF0C\u6210\u529F\u5C31\u6267\u884C\u65B0promise\u7684\u6210\u529F\u3002\u5176\u5B83\u4E5F\u662F\u5982\u6B64
4. resolvePromise(promise2,x,resolve,reject),\u6267\u884Cpromise2\u7684resolve\uFF0C\u5373\u6267\u884C\u65B0promise\u6210\u529F\u65F6\uFF0C\u8981\u5148\u5224\u65AD\u539Fpromise\u6210\u529F\u51FD\u6570\u7684\u8FD4\u56DE\u503Cx\u662F\u4E0D\u662F\u4E00\u4E2Apromise(\u5224\u65AD\u662F\u5BF9\u8C61\u6216\u8005\u51FD\u6570\uFF0C\u5E76\u4E14\u6709then\u5C5E\u6027\u5373\u8BA4\u4E3A\u662Fpromise)\u3002\u52A0\u4E0A\u5F02\u6B65\u4EE5\u4FDD\u8BC1\u80FD\u62FF\u5230promise2\u4F20\u8FC7\u53BB\u3002\u662Fpromise\uFF0C\u5C31\u6267\u884C\u5B83\u7684then\u65B9\u6CD5\uFF0C\u6309then\u7684\u7ED3\u679C\u6765\u5224\u65ADpromise2\u7684\u72B6\u6001\u3002
\`\`\`js
let Promise=require(&#39;./promise&#39;)
let p=new Promise(function(resolve,reject){
    reject(&#39;\u60C5\u4EBA\u8282\u5230\u4E86&#39;);
    resolve(&#39;\u60C5\u4EBA\u5230\u4E86&#39;);
    throw new Error(&#39;\u9519\u8BEF&#39;);
})
// \u94FE\u5F0F\u8C03\u7528
p.then((value)=&gt;{
    console.log(&#39;success&#39;,value);
    return value;
},(reason)=&gt;{
    console.log(&#39;error&#39;,reason);
}).then((value)=&gt;{

})

// \u503C\u7684\u7A7F\u900F 
p.then().then().then((data)=&gt;{
    console.log(data);
})
p.then().then(1,data=&gt;{
    console.log(data);
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u5728promise\u5185\u90E8\u5B9A\u4E49\u4E00\u4E2A\u72B6\u6001 \u5F53\u524Dpromise\u7684\u72B6\u6001</span>
    <span class="token keyword">let</span> self<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
    self<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token keyword">undefined</span><span class="token punctuation">;</span>
    self<span class="token punctuation">.</span>reason<span class="token operator">=</span><span class="token keyword">undefined</span><span class="token punctuation">;</span>
    self<span class="token punctuation">.</span>onResolvedCallbacks<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    self<span class="token punctuation">.</span>onRejectedCallbacks<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    self<span class="token punctuation">.</span>status<span class="token operator">=</span><span class="token string">&#39;pending&#39;</span><span class="token punctuation">;</span><span class="token comment">// \u9ED8\u8BA4promise\u7684\u72B6\u6001\u662Fpending</span>
    <span class="token keyword">function</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// resolve\u7684\u7ED3\u679C\u662F\u4E00\u4E2Apromise\uFF0C\u4F1A\u8BA9\u8FD9\u4E2Apromise\u6267\u884C\uFF0C\u5C06\u6267\u884C\u540E\u7684\u7ED3\u679C\u4F20\u9012\u7ED9resolve\u6216\u8005reject</span>
            <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>status<span class="token operator">===</span><span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            self<span class="token punctuation">.</span>value<span class="token operator">=</span>value<span class="token punctuation">;</span>
            self<span class="token punctuation">.</span>status<span class="token operator">=</span><span class="token string">&#39;resolved&#39;</span><span class="token punctuation">;</span><span class="token comment">// \u6210\u529F\u72B6\u6001</span>
            <span class="token comment">// \u53D1\u5E03</span>
            self<span class="token punctuation">.</span>onResolvedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>status<span class="token operator">===</span><span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            self<span class="token punctuation">.</span>reason<span class="token operator">=</span>reason<span class="token punctuation">;</span>
            self<span class="token punctuation">.</span>status<span class="token operator">=</span><span class="token string">&#39;rejected&#39;</span><span class="token punctuation">;</span><span class="token comment">// \u5931\u8D25\u72B6\u6001</span>
            self<span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span><span class="token punctuation">{</span>
        <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u8BF4\u660E\u5931\u8D25\u4E86</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">resolvePromise</span><span class="token punctuation">(</span><span class="token parameter">promise2<span class="token punctuation">,</span>x<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65ADx\u662F\u4E0D\u662Fpromise</span>
    <span class="token comment">// \u5982\u679C\u81EA\u5DF1\u7B49\u5F85\u7740\u81EA\u5DF1\u5B8C\u6210 \u90A3\u4E48\u5F53\u524D\u5C31\u5E94\u8BE5\u8D70\u5411\u5931\u8D25\uFF0C\u9632\u6B62\u81EA\u5DF1\u7B49\u5F85\u81EA\u5DF1</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>promise2<span class="token operator">===</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;\u5FAA\u73AF\u5F15\u7528\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> called<span class="token punctuation">;</span> <span class="token comment">// \u8868\u793A\u5F53\u524D\u6709\u6CA1\u6709\u88AB\u8C03\u7528\u8FC7\uFF08\u89C4\u8303\u8981\u6C42\u5982\u679Cresolve\u548Creject\u90FD\u88AB\u8C03\u7528\u4E86\u6216\u8005\u88AB\u8C03\u7528\u591A\u6B21\uFF0C\u53EA\u6709\u7B2C\u4E00\u6B21\u6709\u6548\uFF09</span>
    <span class="token comment">// \u6309\u89C4\u8303\u6765\u5224\u65AD</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">!==</span><span class="token keyword">null</span><span class="token operator">&amp;&amp;</span><span class="token keyword">typeof</span> x<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token operator">||</span> <span class="token keyword">typeof</span> x<span class="token operator">===</span><span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// \u5F88\u6709\u53EF\u80FD\u662F\u4E00\u4E2Apromise</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> then<span class="token operator">=</span>x<span class="token punctuation">.</span>then<span class="token punctuation">;</span><span class="token comment">// then\u5C5E\u6027\u5177\u6709getter \u6B64\u65F6\u83B7\u53D6\u65F6\u4F1A\u53D1\u751F\u5F02\u5E38</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> then<span class="token operator">===</span><span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// \u9ED8\u8BA4\u662Fpromise</span>
                <span class="token function">then</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">y</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token comment">// \u4E0D\u518D\u6B21\u53D6x.then()\uFF0C\u9632\u6B62then\u7684get\u51FD\u6570\u88AB\u610F\u5916\u4FEE\u6539\uFF0C\u4F7F\u7528call\u8C03\u7528\u4E00\u5B9A\u4E0D\u4F1A\u62A5\u9519</span>
                    <span class="token comment">// y\u6709\u53EF\u80FD\u662F\u4E00\u4E2Apromise\u3002\u4E00\u76F4\u89E3\u6790 \u76F4\u5230\u7ED3\u679C\u662F\u4E00\u4E2A\u5E38\u91CF\u4E3A\u6B62</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token comment">// \u7ED9\u522B\u4EBA\u7684promise\u589E\u52A0\u7684\u903B\u8F91</span>
                    called<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span>y<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
                    <span class="token comment">// resolve(y);// \u6210\u529F\u62FF\u5230\u6210\u529F\u7684\u7ED3\u679C\uFF0C\u8BA9promise2\u53D8\u6210\u6210\u529F\u72B6\u6001</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
                    called<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4FDD\u8BC1this\u6307\u5411\u8FD9\u4E2Apromise</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token comment">// \u5F53\u524D\u8FD9\u4E2Athen\u662F\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {a:1}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            called<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u666E\u901A\u503C \u76F4\u63A5\u6210\u529F\u5373\u53EF</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">then</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">onFulfilled<span class="token punctuation">,</span>onRejected</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u503C\u5F97\u7A7F\u900F\uFF1A\u7ED9\u4E00\u4E2A\u9ED8\u8BA4\u7684\u8FD4\u56DE\u53C2\u6570\u6216\u8005\u629B\u51FA\u9519\u8BEF\u7684\u51FD\u6570</span>
    onFulfilled<span class="token operator">=</span><span class="token keyword">typeof</span> onFulfilled<span class="token operator">===</span><span class="token string">&#39;function&#39;</span><span class="token operator">?</span><span class="token function-variable function">onFulfilled</span><span class="token operator">:</span><span class="token parameter">value</span><span class="token operator">=&gt;</span>value<span class="token punctuation">;</span>
    onRejected<span class="token operator">=</span><span class="token keyword">typeof</span> onRejected<span class="token operator">===</span><span class="token string">&#39;function&#39;</span><span class="token operator">?</span><span class="token function-variable function">onRejected</span><span class="token operator">:</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">throw</span> err<span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> self<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8C03\u7528then\u540E\u9700\u8981\u518D\u6B21 \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684promise</span>
    <span class="token comment">// \u9700\u8981\u62FF\u5230\u5F53\u524Dthen\u65B9\u6CD5\u6210\u529F\u6216\u5931\u8D25\u6267\u884C\u540E\u7684\u7ED3\u679C</span>
    <span class="token comment">// \u5224\u65ADthen\u51FD\u6570\u7684\u6267\u884C\u7ED3\u679C\u548Cpromise2\u7684\u5173\u7CFB</span>
    <span class="token keyword">let</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>status<span class="token operator">===</span><span class="token string">&#39;resolved&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// \u8FD9\u91CC\u8981\u4F7F\u7528promise2\uFF0C\u9700\u8981\u6DFB\u52A0\u5F02\u6B65\u4FDD\u8BC1\u53EF\u4EE5\u83B7\u53D6\u5230promise2</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                <span class="token keyword">try</span><span class="token punctuation">{</span>
                    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span>x<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u5982\u679C\u6267\u884C\u51FD\u6570\u65F6\u629B\u51FA\u5931\u8D25\uFF0C\u90A3\u4E48\u4F1A\u8D70\u5411\u4E0B\u4E00\u4E2Athen\u7684\u5931\u8D25\u72B6\u6001</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>status<span class="token operator">===</span><span class="token string">&#39;rejected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                <span class="token keyword">try</span><span class="token punctuation">{</span>
                    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span>x<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>status<span class="token operator">===</span><span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u8BA2\u9605</span>
            self<span class="token punctuation">.</span>onResolvedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token keyword">try</span><span class="token punctuation">{</span>
                        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span>x<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            self<span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token keyword">try</span><span class="token punctuation">{</span>
                        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span>x<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> promise2<span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0D\u5C5E\u4E8E\u89C4\u8303\u5185\u7684\u3002\u5C31\u662F\u8FD4\u56DE\u4E86\u4E2Athen</span>
<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">catch</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">errCallback</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>errCallback<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function-variable function">resolve</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function-variable function">reject</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// promise.finally\u5B9E\u73B0\u539F\u7406\u662F\u4EC0\u4E48 try{}catch{}finally{} \u65E0\u8BBA\u5982\u4F55\u90FD\u4F1A\u6267\u884C \u4E5F\u662F\u8FD4\u56DE\u7684then</span>
<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">finally</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679Ccallback\u662F\u4E00\u4E2A\u51FD\u6570\u8FD4\u56DEpromise \u5C31\u7B49\u5F85\u8FD9\u4E2Apromise\u6267\u884C\u5B8C\u6BD5</span>
        <span class="token comment">// \u5982\u679Cfinally\u91CC\u8FD4\u56DE\u4E00\u4E2Apromise\uFF0C\u8981\u7B49\u8FD9\u4E2Apromise\u72B6\u6001\u6539\u53D8\uFF0C\u518D\u7EE7\u7EED\u6267\u884C\u4E0B\u9762\u4EE3\u7801.\u4F7F\u7528resolve\u5373\u53EF</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// callback();</span>
        <span class="token comment">// return data;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token comment">// \u4E00\u5B9A\u8981\u7528resolve\uFF0C\u4E0D\u80FD\u7528reject\uFF0C\u56E0\u4E3Aresolve\u6709\u7B49\u5F85\u7684\u6548\u679C</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">throw</span> err<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// callback();</span>
        <span class="token comment">// throw err;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u94FE\u5F0F\u8C03\u7528 <ul><li>\u56DE\u8C03\u5730\u72F1</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolved</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./name.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">readFile</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u7279\u70B9 <ol><li>\u5982\u679C\u4E00\u4E2Athen\u65B9\u6CD5 \u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u503C \u8FD9\u4E2A\u503C\u4F1A\u4F20\u9012\u7ED9\u4E0B\u4E00\u6B21then\u4E2D\u4F5C\u4E3A\u6210\u529F\u7684\u7ED3\u679C</li><li>\u5982\u679C\u62A5\u9519\uFF0C\u4F20\u9012\u7ED9\u4E0B\u4E00\u4E2A\u5931\u8D25</li><li>\u5982\u679C\u8FD4\u56DE\u7684\u662Fpromise,promise\u6210\u529F\u7ED3\u679C\u4F20\u7ED9\u4E0B\u4E00\u4E2A\u6210\u529F\uFF0Cpromise\u5931\u8D25\u4F20\u7ED9\u4E0B\u4E00\u4E2A\u5931\u8D25</li><li>\u6355\u83B7\u9519\u8BEF\u673A\u5236\uFF1A\u9ED8\u8BA4\u4F1A\u627E\u6700\u8FD1\u7684then\u7684\u5931\u8D25</li><li>jquery\u7684\u94FE\u5F0F\u8C03\u7528\uFF0C\u8FD4\u56DEthis\u53EF\u4EE5\u5B9E\u73B0\u3002promise.then\u7684\u94FE\u5F0F\u8C03\u7528\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684promise\u53EF\u4EE5\u5B9E\u73B0\uFF08\u56E0\u4E3Athen\u540E\u72B6\u6001\u5DF2\u7ECF\u53D8\u4E3Apending\uFF0C\u4E0D\u53EF\u4EE5\u518D\u53D8\u6210\u5176\u4ED6\u3002\u6240\u4EE5\u8981\u6709\u4E2A\u65B0\u7684promise\uFF0C\u65B0\u7684\u72B6\u6001\uFF09</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./name.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// return 100;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u54C8\u54C8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;catch&#39;</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="\u301010\u3011\u5B9E\u73B0\u4E00\u4E2Apromise\u5EF6\u8FDF\u5BF9\u8C61-defer" tabindex="-1"><a class="header-anchor" href="#\u301010\u3011\u5B9E\u73B0\u4E00\u4E2Apromise\u5EF6\u8FDF\u5BF9\u8C61-defer" aria-hidden="true">#</a> \u301010\u3011\u5B9E\u73B0\u4E00\u4E2Apromise\u5EF6\u8FDF\u5BF9\u8C61 defer</h3><ul><li>\u5EF6\u8FDF\u5BF9\u8C61 Q\u5E93 \u51CF\u5C11\u5957\u7528</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> Promise<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./promise&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> defer<span class="token operator">=</span>Promise<span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        defer<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> defer<span class="token punctuation">.</span>promise<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">read</span><span class="token punctuation">(</span><span class="token string">&#39;./name.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// promise.js</span>
Promise<span class="token punctuation">.</span><span class="token function-variable function">defer</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> dfd<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    dfd<span class="token punctuation">.</span>promise<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        dfd<span class="token punctuation">.</span>resolve<span class="token operator">=</span>resolve<span class="token punctuation">;</span>
        dfd<span class="token punctuation">.</span>reject<span class="token operator">=</span>reject<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> dfd<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5B89\u88C5\u8FD9\u4E2A\u5E93\u53EF\u6821\u9A8C\u81EA\u5DF1\u5199\u7684\u662F\u5426\u7B26\u5408promise a+\u89C4\u8303</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm install <span class="token operator">-</span>g promises<span class="token operator">-</span>aplus<span class="token operator">-</span>test
promises<span class="token operator">-</span>aplus<span class="token operator">-</span>tests promise<span class="token punctuation">.</span>js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u301011\u3011\u5982\u4F55\u7EC8\u6B62promise\u94FE" tabindex="-1"><a class="header-anchor" href="#\u301011\u3011\u5982\u4F55\u7EC8\u6B62promise\u94FE" aria-hidden="true">#</a> \u301011\u3011\u5982\u4F55\u7EC8\u6B62promise\u94FE\uFF1F</h3><ul><li>\u8FD4\u56DE\u4E00\u4E2A\u7B49\u5F85\u7684promise</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u8D70\u5230\u8FD9\u5E0C\u671B\u540E\u9762\u7684then\u4E0D\u518D\u6267\u884C\u4E86</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u7A7A\u7684promise\uFF0C\u65E2\u4E0D\u6210\u529F\u4E5F\u4E0D\u5931\u8D25</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u301012\u3011promise-all" tabindex="-1"><a class="header-anchor" href="#\u301012\u3011promise-all" aria-hidden="true">#</a> \u301012\u3011Promise.all</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>promises<span class="token punctuation">;</span><span class="token comment">//\u65B0\u7248\u672C10\u7248\u672C\u65B0\u589E\u7684</span>
Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./name.txt&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./age.txt&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u591A\u4E2A\u5F02\u6B65\u5E76\u53D1\uFF0C\u4F7F\u7528\u8BA1\u6570\u5668</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isPromise</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> value<span class="token operator">===</span><span class="token string">&#39;function&#39;</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value<span class="token operator">===</span><span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> value<span class="token punctuation">.</span>then<span class="token operator">===</span><span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
Promise<span class="token punctuation">.</span><span class="token function-variable function">all</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token function-variable function">processData</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            arr<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token operator">=</span>value<span class="token punctuation">;</span><span class="token comment">// after\u51FD\u6570</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token operator">===</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>values<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> current<span class="token operator">=</span>values<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isPromise</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                current<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">y</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token function">processData</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>reject<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token function">processData</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u301013\u3011promise-race" tabindex="-1"><a class="header-anchor" href="#\u301013\u3011promise-race" aria-hidden="true">#</a> \u301013\u3011Promise.race</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./name.txt&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./age.txt&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function-variable function">race</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>values<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">let</span> current<span class="token operator">=</span>values<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isPromise</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                current<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u301014\u3011\u5982\u4F55\u7EC8\u6B62\u4E00\u4E2Apromise-\u4E2D\u65ADpromise-promise\u8D85\u65F6" tabindex="-1"><a class="header-anchor" href="#\u301014\u3011\u5982\u4F55\u7EC8\u6B62\u4E00\u4E2Apromise-\u4E2D\u65ADpromise-promise\u8D85\u65F6" aria-hidden="true">#</a> \u301014\u3011\u5982\u4F55\u7EC8\u6B62\u4E00\u4E2Apromise(\u4E2D\u65ADpromise) promise\u8D85\u65F6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// \u8BA9\u8FD9\u4E2Apromise \u53D8\u6210\u5931\u8D25\u6001</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u89E3\u51B3\uFF1A</span>
<span class="token keyword">function</span> <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token parameter">promise</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> abort<span class="token punctuation">;</span>
    <span class="token keyword">let</span> newPromise<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        abort<span class="token operator">=</span>reject<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p<span class="token operator">=</span>Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>newPromise<span class="token punctuation">,</span>promise<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>abort<span class="token operator">=</span>abort<span class="token punctuation">;</span>
    <span class="token keyword">return</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> p1<span class="token operator">=</span><span class="token function">wrap</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// \u8BA9\u8FD9\u4E2Apromise \u53D8\u6210\u5931\u8D25\u6001</span>
    p1<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>

p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25);function ts(u,es){const t=i("RouterLink"),o=i("mark-question"),l=i("absolute-box"),c=i("mark-cross");return k(),d("div",null,[C,s("nav",R,[s("ul",null,[s("li",null,[n(t,{to:"#\u9762\u8BD5\u7B97\u6CD5\u8003\u70B9"},{default:p(()=>[L]),_:1})]),s("li",null,[n(t,{to:"#\u73AF\u5883\u642D\u5EFA"},{default:p(()=>[S]),_:1})]),s("li",null,[n(t,{to:"#\u57FA\u7840\u7B97\u6CD5-\u5B57\u7B26\u4E32"},{default:p(()=>[F]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#_1-\u53CD\u8F6C\u5B57\u7B26\u4E32\u4E2D\u7684\u5355\u8BCD-iii"},{default:p(()=>[E]),_:1})]),s("li",null,[n(t,{to:"#_2-\u8BA1\u6570\u4E8C\u8FDB\u5236\u5B50\u4E32"},{default:p(()=>[Q]),_:1})])])]),s("li",null,[n(t,{to:"#\u57FA\u7840\u7B97\u6CD5-\u6570\u7EC4"},{default:p(()=>[T]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#_3-\u516C\u5F0F\u8FD0\u7B97-\u7535\u8BDD\u53F7\u7801\u7684\u7EC4\u5408"},{default:p(()=>[H]),_:1})]),s("li",null,[n(t,{to:"#_4-\u5F52\u7C7B\u8FD0\u7B97-\u5361\u724C\u5206\u7EC4"},{default:p(()=>[I]),_:1})]),s("li",null,[n(t,{to:"#_5-\u7B5B\u9009\u8FD0\u7B97-\u79CD\u82B1\u95EE\u9898"},{default:p(()=>[B]),_:1})]),s("li",null,[n(t,{to:"#_6-\u4E8C\u8FDB\u5236\u8FD0\u7B97-\u683C\u96F7\u7F16\u7801"},{default:p(()=>[G]),_:1})])])]),s("li",null,[n(t,{to:"#\u6B63\u5219\u8868\u8FBE\u5F0F"},{default:p(()=>[O]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#_7-\u91CD\u590D\u7684\u5B50\u5B57\u7B26\u4E32"},{default:p(()=>[z]),_:1})])])]),s("li",null,[n(t,{to:"#\u6392\u5E8F\u7C7B"},{default:p(()=>[D]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#_9-\u5192\u6CE1\u6392\u5E8F-\u5148\u628A\u6700\u5927\u503C\u5192\u51FA\u6765-\u518D\u628A\u5012\u6570\u7B2C\u4E8C\u5927\u7684\u5192\u51FA\u6765-\u4EE5\u6B64\u7C7B\u63A8"},{default:p(()=>[$]),_:1})])])]),s("li",null,[n(t,{to:"#\u57FA\u7840\u7B97\u6CD5\u4E4B\u9012\u5F52\u7C7B"},{default:p(()=>[W]),_:1})]),s("li",null,[n(t,{to:"#\u6570\u636E\u7ED3\u6784\u4E4B\u6808"},{default:p(()=>[X]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#_17-\u68D2\u7403\u6BD4\u8D5B"},{default:p(()=>[U]),_:1})])])]),s("li",null,[n(t,{to:"#\u6570\u636E\u7ED3\u6784\u4E4B\u961F\u5217"},{default:p(()=>[K]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#_19-\u8BBE\u8BA1\u5FAA\u73AF\u961F\u5217"},{default:p(()=>[V]),_:1})])])]),s("li",null,[n(t,{to:"#\u6570\u636E\u7ED3\u6784\u4E4B\u94FE\u8868"},{default:p(()=>[J]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#_21-\u6392\u5E8F\u94FE\u8868"},{default:p(()=>[Z]),_:1})])])]),s("li",null,[n(t,{to:"#\u6570\u636E\u7ED3\u6784\u4E4B\u77E9\u9635"},{default:p(()=>[Y]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#_23-\u87BA\u65CB\u77E9\u9635"},{default:p(()=>[nn]),_:1})])])]),s("li",null,[n(t,{to:"#\u8FDB\u9636\u7B97\u6CD5-\u601D\u60F3"},{default:p(()=>[sn]),_:1})]),s("li",null,[n(t,{to:"#\u8FDB\u9636\u7B97\u6CD5\u4E4B\u8D2A\u5FC3\u7B97\u6CD5"},{default:p(()=>[an]),_:1})]),s("li",null,[n(t,{to:"#\u8FDB\u9636\u7B97\u6CD5\u4E4B\u52A8\u6001\u89C4\u5212"},{default:p(()=>[pn]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#_33-\u4E0D\u540C\u8DEF\u5F84ii"},{default:p(()=>[tn]),_:1})]),s("li",null,[n(t,{to:"#_34-k\u7AD9\u4E2D\u8F6C\u5185\u6700\u4FBF\u5B9C\u7684\u822A\u73ED"},{default:p(()=>[en]),_:1})])])]),s("li",null,[n(t,{to:"#\u3010\u9762\u8BD5\u9898\u3011"},{default:p(()=>[on]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#\u30107\u3011\u627E\u51FA\u4E00\u4E2A\u957F\u5B57\u7B26\u4E32\u4E2D\u8FDE\u7EED\u91CD\u590D\u6B21\u6570\u6700\u591A\u7684\u5B57\u7B26-\u5982-\u5728-nddemdereeeffetcssssfggddregg-\u4E2D-s-\u91CD\u590D\u51FA\u73B0\u6B21\u6570-4-\u6B21\u6700\u591A-\u56E0\u6B64-s-\u4E3A\u8FDE\u7EED\u91CD\u590D\u51FA\u73B0\u6700\u957F\u7684\u5B57\u7B26\u3002"},{default:p(()=>[cn]),_:1})]),s("li",null,[n(t,{to:"#\u301010\u3011\u5B9E\u73B0\u4E00\u4E2Apromise\u5EF6\u8FDF\u5BF9\u8C61-defer"},{default:p(()=>[ln]),_:1})]),s("li",null,[n(t,{to:"#\u301011\u3011\u5982\u4F55\u7EC8\u6B62promise\u94FE"},{default:p(()=>[un]),_:1})]),s("li",null,[n(t,{to:"#\u301012\u3011promise-all"},{default:p(()=>[rn]),_:1})]),s("li",null,[n(t,{to:"#\u301013\u3011promise-race"},{default:p(()=>[kn]),_:1})]),s("li",null,[n(t,{to:"#\u301014\u3011\u5982\u4F55\u7EC8\u6B62\u4E00\u4E2Apromise-\u4E2D\u65ADpromise-promise\u8D85\u65F6"},{default:p(()=>[dn]),_:1})])])])])]),vn,n(o),mn,n(o),bn,n(l,null,{default:p(()=>[gn]),_:1}),fn,n(l,null,{default:p(()=>[hn]),_:1}),yn,n(l,null,{default:p(()=>[wn,xn,jn]),_:1}),_n,n(o),qn,s("ul",null,[s("li",null,[s("img",{src:u.$withBase("/img/bubbleSort.gif")},null,8,An)])]),Nn,n(o),Mn,s("img",{src:u.$withBase("/img/selectionSort.gif")},null,8,Pn),Cn,n(o),Rn,n(o),Ln,n(o),n(l,null,{default:p(()=>[Sn]),_:1}),Fn,n(o),n(l,null,{default:p(()=>[En]),_:1}),Qn,n(o),Tn,n(o),Hn,n(o),In,n(l,null,{default:p(()=>[Bn]),_:1}),Gn,n(o),On,n(c),zn,n(c),Dn,n(o),$n,n(c),Wn,n(c),Xn,n(c),Un,n(c),Kn,n(c),Vn,n(o),Jn,n(o),Zn,n(o),Yn,n(o),ns,n(o),ss,n(o),as,n(o),ps])}var cs=r(P,[["render",ts],["__file","algorithm.html.vue"]]);export{cs as default};
