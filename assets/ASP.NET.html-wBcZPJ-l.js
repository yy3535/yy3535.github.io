import{_ as n,o as s,c as a,a as t}from"./app-E-cEvfoH.js";const e={},p=t(`<h1 id="asp-net" tabindex="-1"><a class="header-anchor" href="#asp-net" aria-hidden="true">#</a> ASP.NET</h1><h2 id="c" tabindex="-1"><a class="header-anchor" href="#c" aria-hidden="true">#</a> C#</h2><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h3><ul><li>&#39;&#39;char</li><li>&quot;&quot;string</li></ul><h2 id="路由" tabindex="-1"><a class="header-anchor" href="#路由" aria-hidden="true">#</a> 路由</h2><ul><li>visual studio编辑器中打开在某个页面，启动时会自动打开开着的那个页面</li></ul><h2 id="razor模板引擎" tabindex="-1"><a class="header-anchor" href="#razor模板引擎" aria-hidden="true">#</a> Razor模板引擎</h2><ul><li>一种标记语法，用于将基于服务器的代码嵌入网页中</li><li>包含 Razor 的文件通常具有 .cshtml 文件扩展名。</li><li>由 Razor 标记、C# 和 HTML 组成</li><li>作用 <ul><li>计算 <code>C#</code> 表达式，并将它们呈现在 HTML 输出中。</li></ul></li></ul><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h3><ul><li>@后跟 Razor 保留关键字时，它会转换为 Razor 特定标记。</li><li>单个@把HTML转换为C#。</li><li>@ 符号进行转义<code>@@Username</code></li></ul><h4 id="隐式-razor-表达式" tabindex="-1"><a class="header-anchor" href="#隐式-razor-表达式" aria-hidden="true">#</a> 隐式 Razor 表达式</h4><ul><li>以 @ 开头，后跟 C# 代码</li><li>不能包含空格</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>@DateTime<span class="token punctuation">.</span>Now<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>@DateTime<span class="token punctuation">.</span><span class="token function">IsLeapYear</span><span class="token punctuation">(</span><span class="token number">2016</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>@{} <ul><li>代码块内的 C# 代码不会呈现 <ul><li>代码块中的默认语言为 C#，不过，Razor 页面可以转换回 HTML</li></ul></li></ul></li><li>@() <ul><li>表达式</li></ul></li><li>全部使用C#语法</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">td</span> rowspan<span class="token operator">=</span><span class="token string">&quot;@(item.ClassTests.Count == 0 ? 1 : item.ClassTests.Count)&quot;</span><span class="token operator">&gt;</span>
    @<span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> name <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> length<span class="token operator">=</span>item<span class="token punctuation">.</span>StuName<span class="token punctuation">.</span>Length<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>length<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            name<span class="token operator">=</span>item<span class="token punctuation">.</span>StuName<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>length<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            name<span class="token operator">=</span>item<span class="token punctuation">.</span>StuName<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;*&quot;</span><span class="token operator">+</span>item<span class="token punctuation">.</span>StuName<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>length<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            name<span class="token operator">=</span>item<span class="token punctuation">.</span>StuName<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;**&quot;</span><span class="token operator">+</span>item<span class="token punctuation">.</span>StuName<span class="token punctuation">.</span><span class="token function">Substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    @<span class="token punctuation">(</span>item <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">?</span> <span class="token string">&quot;无学生信息&quot;</span> <span class="token punctuation">:</span> @name<span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[p];function l(c,i){return s(),a("div",null,o)}const r=n(e,[["render",l],["__file","ASP.NET.html.vue"]]);export{r as default};
